{"version":3,"file":"static/js/52.98b24f18.chunk.js","mappings":"6PAOA,MAAMA,GAAYC,EAAAA,EAAAA,aAAAA,CAAa,CAC3BC,MAAO,CACHC,QAAS,WAGjB,SAASC,EAASC,GACd,OAAOA,EAAIC,KAAIC,IAAA,IAAC,GAAEC,EAAE,SAAEC,KAAaC,GAAMH,EAAA,MAAM,IACxCG,EACHD,SAAUA,EAASH,KAAIK,IAAA,IAAC,GAAEH,KAAOE,GAAMC,EAAA,OAAKD,CAAI,IACnD,GACL,CACA,SAASE,EAASC,GAAgC,IAA/B,QAAEC,EAAO,MAAEC,EAAK,SAAEC,GAAWH,EAC5C,MAAM,QAAEI,GAAYjB,IACpB,OAAQkB,EAAAA,cAAoBC,EAAAA,EAAkB,CAAEC,UAAWH,EAAQf,MAAOmB,QAASH,EAAAA,cAAoBI,EAAAA,EAAU,CAAER,QAASA,EAASE,SAAUA,IAAaD,MAAOA,GACvK,CACA,MAyCA,GAzC6BQ,EAAAA,EAAAA,WAAS,SAAAC,GAAsD,IAA5C,MAAEC,EAAK,YAAEC,EAAW,QAAEC,EAAO,SAAEC,GAAWJ,EACtF,MAAOK,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,IACtCC,EAAQC,IAAaF,EAAAA,EAAAA,WAAS,GACrC,OAAQb,EAAAA,cAAoBgB,EAAAA,OAAQ,CAAEC,MAAM,EAAMC,QAASV,EAAaW,MAAO,iCAC3EnB,EAAAA,cAAoBoB,EAAAA,EAAe,KAC/BpB,EAAAA,cAAoBN,EAAW,CAAEE,QAASe,EAAYb,SAAUuB,GAAST,EAAcS,EAAMC,OAAO1B,SAAUC,MAAO,kCACrHG,EAAAA,cAAoBN,EAAW,CAAEE,QAASkB,EAAQhB,SAAUuB,GAASN,EAAUM,EAAMC,OAAO1B,SAAUC,MAAO,yDACjHG,EAAAA,cAAoBuB,EAAAA,EAAe,KAC/BvB,EAAAA,cAAoBwB,EAAAA,EAAQ,CAAEC,QAASA,KAC/B,MAAM,KAAEC,GAASnB,EACXoB,GAAUC,EAAAA,EAAAA,YAAWrB,GAC3B,IAEI,MAAMsB,EAAenB,EAASoB,4BAA4BrB,EAASiB,IAC5DK,EAAOC,GAASH,EAAaI,MAE9BC,GAAaC,EAAAA,EAAAA,aAAYT,EAAKU,QACpCT,EAAQU,QAAQ,sBAAuB,IAChCR,EACHI,MAAO,CACH,IACOF,EACHK,OAAQlD,EAASgD,GACjBI,SAAUP,EAAMO,SAAWZ,EAAKa,MAAQ,EAAI,KAEhD,IACOP,EACHI,OAAQlD,EAAS4B,EAAS,IAAIoB,GAAYM,UAAYN,GACtDI,SAAUN,EAAMM,SAAWZ,EAAKa,MAAQ,EAAI,OAI5D,CACA,MAAOE,GACHC,QAAQC,MAAMF,GACdd,EAAQiB,OAAO,GAADC,OAAIJ,GACtB,CACAjC,GAAa,EACdsC,QAAS,YAAaC,MAAO,UAAWC,WAAW,GAAQ,MAClEhD,EAAAA,cAAoBwB,EAAAA,EAAQ,CAAEC,QAASA,IAAMjB,IAAeuC,MAAO,YAAaD,QAAS,aAAe,WACpH,G","sources":["../node_modules/@jbrowse/plugin-variants/esm/VariantFeatureWidget/BreakendOptionDialog.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { Button, Checkbox, DialogActions, DialogContent, FormControlLabel, } from '@mui/material';\nimport { makeStyles } from 'tss-react/mui';\nimport { getSnapshot } from 'mobx-state-tree';\nimport { Dialog } from '@jbrowse/core/ui';\nimport { getSession } from '@jbrowse/core/util';\nconst useStyles = makeStyles()({\n    block: {\n        display: 'block',\n    },\n});\nfunction stripIds(arr) {\n    return arr.map(({ id, displays, ...rest }) => ({\n        ...rest,\n        displays: displays.map(({ id, ...rest }) => rest),\n    }));\n}\nfunction Checkbox2({ checked, label, onChange, }) {\n    const { classes } = useStyles();\n    return (React.createElement(FormControlLabel, { className: classes.block, control: React.createElement(Checkbox, { checked: checked, onChange: onChange }), label: label }));\n}\nconst BreakendOptionDialog = observer(function ({ model, handleClose, feature, viewType, }) {\n    const [copyTracks, setCopyTracks] = useState(true);\n    const [mirror, setMirror] = useState(true);\n    return (React.createElement(Dialog, { open: true, onClose: handleClose, title: \"Breakpoint split view options\" },\n        React.createElement(DialogContent, null,\n            React.createElement(Checkbox2, { checked: copyTracks, onChange: event => setCopyTracks(event.target.checked), label: \"Copy tracks into the new view\" }),\n            React.createElement(Checkbox2, { checked: mirror, onChange: event => setMirror(event.target.checked), label: \"Mirror tracks vertically in vertically stacked view\" })),\n        React.createElement(DialogActions, null,\n            React.createElement(Button, { onClick: () => {\n                    const { view } = model;\n                    const session = getSession(model);\n                    try {\n                        // @ts-expect-error\n                        const viewSnapshot = viewType.snapshotFromBreakendFeature(feature, view);\n                        const [view1, view2] = viewSnapshot.views;\n                        // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n                        const viewTracks = getSnapshot(view.tracks);\n                        session.addView('BreakpointSplitView', {\n                            ...viewSnapshot,\n                            views: [\n                                {\n                                    ...view1,\n                                    tracks: stripIds(viewTracks),\n                                    offsetPx: view1.offsetPx - view.width / 2 + 100,\n                                },\n                                {\n                                    ...view2,\n                                    tracks: stripIds(mirror ? [...viewTracks].reverse() : viewTracks),\n                                    offsetPx: view2.offsetPx - view.width / 2 + 100,\n                                },\n                            ],\n                        });\n                    }\n                    catch (e) {\n                        console.error(e);\n                        session.notify(`${e}`);\n                    }\n                    handleClose();\n                }, variant: \"contained\", color: \"primary\", autoFocus: true }, \"OK\"),\n            React.createElement(Button, { onClick: () => handleClose(), color: \"secondary\", variant: \"contained\" }, \"Cancel\"))));\n});\nexport default BreakendOptionDialog;\n"],"names":["useStyles","makeStyles","block","display","stripIds","arr","map","_ref","id","displays","rest","_ref2","Checkbox2","_ref3","checked","label","onChange","classes","React","FormControlLabel","className","control","Checkbox","observer","_ref4","model","handleClose","feature","viewType","copyTracks","setCopyTracks","useState","mirror","setMirror","Dialog","open","onClose","title","DialogContent","event","target","DialogActions","Button","onClick","view","session","getSession","viewSnapshot","snapshotFromBreakendFeature","view1","view2","views","viewTracks","getSnapshot","tracks","addView","offsetPx","width","reverse","e","console","error","notify","concat","variant","color","autoFocus"],"sourceRoot":""}