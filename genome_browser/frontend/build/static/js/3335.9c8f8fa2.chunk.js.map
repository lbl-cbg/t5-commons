{"version":3,"file":"static/js/3335.9c8f8fa2.chunk.js","mappings":"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","sources":["../node_modules/@jbrowse/plugin-legacy-jbrowse/esm/JBrowse1Connection/jb1ToJb2.js"],"sourcesContent":["import { openLocation } from '@jbrowse/core/util/io';\nimport { objectHash } from '@jbrowse/core/util';\nimport { generateUnknownTrackConf, generateUnsupportedTrackConf, guessAdapter, guessTrackType, UNKNOWN, UNSUPPORTED, } from '@jbrowse/core/util/tracks';\nexport function convertTrackConfig(jb1TrackConfig, dataRoot, sequenceAdapter) {\n    var _a;\n    const jb2TrackConfig = {\n        trackId: objectHash(jb1TrackConfig),\n        name: jb1TrackConfig.key || jb1TrackConfig.label,\n    };\n    const description = jb1TrackConfig.metadata &&\n        (jb1TrackConfig.metadata.description || jb1TrackConfig.metadata.Description);\n    if (description) {\n        jb2TrackConfig.description = description;\n    }\n    const category = jb1TrackConfig.category || ((_a = jb1TrackConfig.metadata) === null || _a === void 0 ? void 0 : _a.category);\n    jb2TrackConfig.category = category ? category.split(/\\s*\\/\\s*/) : [];\n    const { storeClass } = jb1TrackConfig;\n    if (!jb1TrackConfig.urlTemplate) {\n        if (!(storeClass && storeClass.endsWith('FromConfig'))) {\n            const trackIdentifier = jb1TrackConfig.key || jb1TrackConfig.label;\n            console.warn(`Could not import JBrowse1 track \"${trackIdentifier}\" because it does not have a \"urlTemplate\" or is not a \"FromConfig\" track`);\n            return generateUnsupportedTrackConf(jb2TrackConfig.name, trackIdentifier, jb2TrackConfig.category);\n        }\n        return generateFromConfigTrackConfig(jb1TrackConfig, jb2TrackConfig);\n    }\n    const resolveUrlTemplate = (urlTemplate) => {\n        return new URL(urlTemplate, `${dataRoot}/`).href\n            .replaceAll(/%7B/gi, '{')\n            .replaceAll(/%7D/gi, '}');\n    };\n    const urlTemplate = resolveUrlTemplate(jb1TrackConfig.urlTemplate);\n    if (storeClass) {\n        if (storeClass === 'JBrowse/Store/SeqFeature/BAM') {\n            const adapter = {\n                type: 'BamAdapter',\n                bamLocation: { uri: urlTemplate, locationType: 'UriLocation' },\n            };\n            if (jb1TrackConfig.baiUrlTemplate) {\n                adapter.index = {\n                    location: {\n                        uri: resolveUrlTemplate(jb1TrackConfig.baiUrlTemplate),\n                        locationType: 'UriLocation',\n                    },\n                };\n            }\n            else if (jb1TrackConfig.csiUrlTemplate) {\n                adapter.index = {\n                    location: {\n                        uri: resolveUrlTemplate(jb1TrackConfig.csiUrlTemplate),\n                        locationType: 'UriLocation',\n                    },\n                    indexType: 'CSI',\n                };\n            }\n            else {\n                adapter.index = {\n                    location: { uri: `${urlTemplate}.bai`, locationType: 'UriLocation' },\n                };\n            }\n            return {\n                ...jb2TrackConfig,\n                type: 'AlignmentsTrack',\n                adapter,\n            };\n        }\n        if (storeClass === 'JBrowse/Store/SeqFeature/CRAM') {\n            const adapter = {\n                type: 'CramAdapter',\n                cramLocation: { uri: urlTemplate, locationType: 'UriLocation' },\n                sequenceAdapter,\n            };\n            adapter.craiLocation = jb1TrackConfig.craiUrlTemplate\n                ? {\n                    uri: resolveUrlTemplate(jb1TrackConfig.craiUrlTemplate),\n                    locationType: 'UriLocation',\n                }\n                : {\n                    uri: `${urlTemplate}.crai`,\n                    locationType: 'UriLocation',\n                };\n            return {\n                ...jb2TrackConfig,\n                type: 'AlignmentsTrack',\n                adapter,\n            };\n        }\n        if (storeClass === 'JBrowse/Store/SeqFeature/NCList') {\n            return {\n                ...jb2TrackConfig,\n                type: 'FeatureTrack',\n                adapter: {\n                    type: 'NCListAdapter',\n                    rootUrlTemplate: { uri: urlTemplate, locationType: 'UriLocation' },\n                },\n            };\n        }\n        if (storeClass === 'JBrowse/Store/SeqFeature/BigWig' ||\n            storeClass === 'JBrowse/Store/BigWig') {\n            if (jb1TrackConfig.type && jb1TrackConfig.type.endsWith('XYPlot')) {\n                jb2TrackConfig.defaultRendering = 'xyplot';\n            }\n            else if (jb1TrackConfig.type &&\n                jb1TrackConfig.type.endsWith('Density')) {\n                jb2TrackConfig.defaultRendering = 'density';\n            }\n            return {\n                ...jb2TrackConfig,\n                type: 'QuantitativeTrack',\n                adapter: {\n                    type: 'BigWigAdapter',\n                    bigWigLocation: { uri: urlTemplate, locationType: 'UriLocation' },\n                },\n            };\n        }\n        if (storeClass === 'JBrowse/Store/SeqFeature/VCFTabix') {\n            const adapter = {\n                type: 'VcfTabixAdapter',\n                vcfGzLocation: { uri: urlTemplate, locationType: 'UriLocation' },\n            };\n            if (jb1TrackConfig.tbiUrlTemplate) {\n                adapter.index = {\n                    location: {\n                        uri: resolveUrlTemplate(jb1TrackConfig.tbiUrlTemplate),\n                        locationType: 'UriLocation',\n                    },\n                };\n            }\n            else if (jb1TrackConfig.csiUrlTemplate) {\n                adapter.index = {\n                    location: {\n                        uri: resolveUrlTemplate(jb1TrackConfig.csiUrlTemplate),\n                        locationType: 'UriLocation',\n                    },\n                    indexType: 'CSI',\n                };\n            }\n            else {\n                adapter.index = {\n                    location: { uri: `${urlTemplate}.tbi`, locationType: 'UriLocation' },\n                };\n            }\n            return {\n                ...jb2TrackConfig,\n                type: 'VariantTrack',\n                adapter,\n            };\n        }\n        if (storeClass === 'JBrowse/Store/SeqFeature/VCFTribble') {\n            return generateUnsupportedTrackConf(jb2TrackConfig.name, `VCFTribble (${urlTemplate})`, jb2TrackConfig.category);\n        }\n        if (storeClass === 'JBrowse/Store/SeqFeature/GFF3') {\n            return {\n                ...jb2TrackConfig,\n                type: 'FeatureTrack',\n                adapter: {\n                    type: 'Gff3Adapter',\n                    gffLocation: { uri: urlTemplate, locationType: 'UriLocation' },\n                },\n            };\n        }\n        if (storeClass === 'JBrowse/Store/SeqFeature/BigBed') {\n            return {\n                ...jb2TrackConfig,\n                type: 'FeatureTrack',\n                adapter: {\n                    type: 'BigBedAdapter',\n                    bigBedLocation: { uri: urlTemplate, locationType: 'UriLocation' },\n                },\n            };\n        }\n        if (storeClass === 'JBrowse/Store/SeqFeature/GFF3Tabix') {\n            const adapter = {\n                type: 'Gff3TabixAdapter',\n                gffGzLocation: { uri: urlTemplate, locationType: 'UriLocation' },\n            };\n            if (jb1TrackConfig.tbiUrlTemplate) {\n                adapter.index = {\n                    location: {\n                        uri: resolveUrlTemplate(jb1TrackConfig.tbiUrlTemplate),\n                        locationType: 'UriLocation',\n                    },\n                };\n            }\n            else if (jb1TrackConfig.csiUrlTemplate) {\n                adapter.index = {\n                    location: {\n                        uri: resolveUrlTemplate(jb1TrackConfig.csiUrlTemplate),\n                        locationType: 'UriLocation',\n                    },\n                    indexType: 'CSI',\n                };\n            }\n            else {\n                adapter.index = {\n                    location: { uri: `${urlTemplate}.tbi`, locationType: 'UriLocation' },\n                };\n            }\n            return {\n                ...jb2TrackConfig,\n                type: 'FeatureTrack',\n                adapter,\n            };\n        }\n        if (storeClass === 'JBrowse/Store/SeqFeature/BED') {\n            return generateUnsupportedTrackConf(jb2TrackConfig.name, `BED (${urlTemplate})`, jb2TrackConfig.category);\n        }\n        if (storeClass === 'JBrowse/Store/SeqFeature/BEDTabix') {\n            const adapter = {\n                type: 'BedTabixAdapter',\n                bedGzLocation: { uri: urlTemplate, locationType: 'UriLocation' },\n            };\n            if (jb1TrackConfig.tbiUrlTemplate) {\n                adapter.index = {\n                    location: {\n                        uri: resolveUrlTemplate(jb1TrackConfig.tbiUrlTemplate),\n                        locationType: 'UriLocation',\n                    },\n                };\n            }\n            else if (jb1TrackConfig.csiUrlTemplate) {\n                adapter.index = {\n                    location: {\n                        uri: resolveUrlTemplate(jb1TrackConfig.csiUrlTemplate),\n                        locationType: 'UriLocation',\n                    },\n                    indexType: 'CSI',\n                };\n            }\n            else {\n                adapter.index = {\n                    location: { uri: `${urlTemplate}.tbi`, locationType: 'UriLocation' },\n                };\n            }\n            return {\n                ...jb2TrackConfig,\n                type: 'FeatureTrack',\n                adapter,\n            };\n        }\n        if (storeClass === 'JBrowse/Store/SeqFeature/GTF') {\n            return {\n                ...jb2TrackConfig,\n                type: 'FeatureTrack',\n                adapter: {\n                    type: 'GtfAdapter',\n                    gtfLocation: { uri: urlTemplate, locationType: 'UriLocation' },\n                },\n            };\n        }\n        if (storeClass === 'JBrowse/Store/SeqFeature/StaticChunked' ||\n            storeClass === 'JBrowse/Store/Sequence/StaticChunked') {\n            return generateUnsupportedTrackConf(jb2TrackConfig.name, `StaticChunked (${urlTemplate})`, jb2TrackConfig.category);\n        }\n        if (storeClass === 'JBrowse/Store/SeqFeature/UnindexedFasta') {\n            return generateUnsupportedTrackConf(jb2TrackConfig.name, `UnindexedFasta (${urlTemplate})`, jb2TrackConfig.category);\n        }\n        if (storeClass === 'JBrowse/Store/SeqFeature/IndexedFasta') {\n            const adapter = {\n                type: 'IndexedFastaAdapter',\n                fastaLocation: { uri: urlTemplate, locationType: 'UriLocation' },\n            };\n            adapter.faiLocation = jb1TrackConfig.faiUrlTemplate\n                ? {\n                    uri: resolveUrlTemplate(jb1TrackConfig.faiUrlTemplate),\n                    locationType: 'UriLocation',\n                }\n                : {\n                    uri: `${urlTemplate}.fai`,\n                    locationType: 'UriLocation',\n                };\n            return {\n                ...jb2TrackConfig,\n                type: 'SequenceTrack',\n                adapter,\n            };\n        }\n        if (storeClass === 'JBrowse/Store/SeqFeature/BgzipIndexedFasta') {\n            const adapter = {\n                type: 'BgzipFastaAdapter',\n                fastaLocation: { uri: urlTemplate, locationType: 'UriLocation' },\n            };\n            adapter.faiLocation = jb1TrackConfig.faiUrlTemplate\n                ? {\n                    uri: resolveUrlTemplate(jb1TrackConfig.faiUrlTemplate),\n                    locationType: 'UriLocation',\n                }\n                : {\n                    uri: `${urlTemplate}.fai`,\n                    locationType: 'UriLocation',\n                };\n            adapter.gziLocation = jb1TrackConfig.gziUrlTemplate\n                ? {\n                    uri: resolveUrlTemplate(jb1TrackConfig.gziUrlTemplate),\n                    locationType: 'UriLocation',\n                }\n                : {\n                    uri: `${urlTemplate}.gzi`,\n                    locationType: 'UriLocation',\n                };\n            return {\n                ...jb2TrackConfig,\n                type: 'ReferenceSequenceTrack',\n                adapter,\n            };\n        }\n        if (storeClass === 'JBrowse/Store/SeqFeature/TwoBit') {\n            return {\n                ...jb2TrackConfig,\n                type: 'ReferenceSequenceTrack',\n                adapter: {\n                    type: 'TwoBitAdapter',\n                    twoBitLocation: { uri: urlTemplate, locationType: 'UriLocation' },\n                },\n            };\n        }\n    }\n    // If we don't recognize the store class, make a best effort to guess by file type\n    jb2TrackConfig.adapter = guessAdapter({ uri: urlTemplate, locationType: 'UriLocation' }, undefined, urlTemplate);\n    if (!jb2TrackConfig.adapter) {\n        throw new Error('Could not determine adapter');\n    }\n    if (jb2TrackConfig.adapter.type === UNSUPPORTED) {\n        return generateUnsupportedTrackConf(jb2TrackConfig.name, urlTemplate, jb2TrackConfig.category);\n    }\n    if (jb2TrackConfig.adapter.type === UNKNOWN) {\n        return generateUnknownTrackConf(jb2TrackConfig.name, urlTemplate, jb2TrackConfig.category);\n    }\n    jb2TrackConfig.type = guessTrackType(jb2TrackConfig.adapter.type);\n    if (jb2TrackConfig.type === 'QuantitativeTrack') {\n        if (jb1TrackConfig.type && jb1TrackConfig.type.endsWith('XYPlot')) {\n            jb2TrackConfig.defaultRendering = 'xyplot';\n        }\n        else if (jb1TrackConfig.type && jb1TrackConfig.type.endsWith('Density')) {\n            jb2TrackConfig.defaultRendering = 'density';\n        }\n    }\n    return jb2TrackConfig;\n}\nfunction generateFromConfigTrackConfig(jb1TrackConfig, jb2TrackConfig) {\n    const jb1Features = jb1TrackConfig.features || [];\n    const jb2Features = jb1Features.map((feature) => {\n        const jb2Feature = JSON.parse(JSON.stringify(feature));\n        jb2Feature.refName = feature.seq_id;\n        jb2Feature.uniqueId = `${feature.seq_id}:${feature.start}-${feature.end}:${feature.name || ''}`;\n        return jb2Feature;\n    });\n    jb2TrackConfig.adapter = {\n        type: 'FromConfigAdapter',\n        features: jb2Features,\n    };\n    jb2TrackConfig.type = 'FeatureTrack';\n    return jb2TrackConfig;\n}\nexport async function createRefSeqsAdapter(refSeqs) {\n    if (typeof refSeqs === 'string') {\n        // assume refSeqs is a url if it is string\n        refSeqs = {\n            url: refSeqs,\n        };\n    }\n    // check refseq urls\n    if (refSeqs.url) {\n        if (refSeqs.url.match(/.fai$/)) {\n            return {\n                type: 'IndexedFastaAdapter',\n                fastaLocation: {\n                    uri: refSeqs.url.slice(0, -4),\n                    locationType: 'UriLocation',\n                },\n                faiLocation: {\n                    uri: refSeqs.url,\n                    locationType: 'UriLocation',\n                },\n            };\n        }\n        if (refSeqs.url.match(/.2bit$/)) {\n            return {\n                type: 'TwoBitAdapter',\n                twoBitLocation: { uri: refSeqs.url, locationType: 'UriLocation' },\n            };\n        }\n        if (refSeqs.url.match(/.fa$/)) {\n            throw new Error('Unindexed FASTA adapter not available');\n        }\n        if (refSeqs.url.match(/.sizes/)) {\n            throw new Error('chromosome SIZES adapter not available');\n        }\n        const refSeqsJson = await openLocation({\n            uri: refSeqs.url,\n            locationType: 'UriLocation',\n        }).readFile('utf8');\n        const refSeqsData = JSON.parse(refSeqsJson);\n        return refSeqAdapterFromConfig(refSeqsData);\n    }\n    if ('data' in refSeqs) {\n        return refSeqAdapterFromConfig(refSeqs.data || []);\n    }\n    throw new Error(`Could not determine adapter for JBrowse1 refSeqs: ${refSeqs.url || JSON.stringify(refSeqs)}`);\n}\nfunction refSeqAdapterFromConfig(refSeqsData) {\n    const features = refSeqsData.map((refSeq) => ({\n        refName: refSeq.name,\n        uniqueId: refSeq.name,\n        start: refSeq.start,\n        end: refSeq.end,\n    }));\n    return {\n        type: 'FromConfigAdapter',\n        features,\n    };\n}\n"],"names":["convertTrackConfig","jb1TrackConfig","dataRoot","sequenceAdapter","_a","jb2TrackConfig","trackId","objectHash","name","key","label","description","metadata","Description","category","split","storeClass","urlTemplate","endsWith","trackIdentifier","console","warn","concat","generateUnsupportedTrackConf","jb1Features","features","jb2Features","map","feature","jb2Feature","JSON","parse","stringify","refName","seq_id","uniqueId","start","end","adapter","type","generateFromConfigTrackConfig","resolveUrlTemplate","URL","href","replaceAll","bamLocation","uri","locationType","baiUrlTemplate","index","location","csiUrlTemplate","indexType","cramLocation","craiLocation","craiUrlTemplate","rootUrlTemplate","defaultRendering","bigWigLocation","vcfGzLocation","tbiUrlTemplate","gffLocation","bigBedLocation","gffGzLocation","bedGzLocation","gtfLocation","fastaLocation","faiLocation","faiUrlTemplate","gziLocation","gziUrlTemplate","twoBitLocation","guessAdapter","undefined","Error","UNSUPPORTED","UNKNOWN","generateUnknownTrackConf","guessTrackType"],"sourceRoot":""}