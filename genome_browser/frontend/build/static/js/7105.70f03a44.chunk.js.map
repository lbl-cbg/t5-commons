{"version":3,"file":"static/js/7105.70f03a44.chunk.js","mappings":"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","sources":["../node_modules/@jbrowse/product-core/esm/ui/FileInfoPanel.js","../node_modules/@jbrowse/product-core/esm/ui/AboutDialogContents.js","../node_modules/@jbrowse/product-core/esm/ui/AboutDialog.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { readConfObject, } from '@jbrowse/core/configuration';\nimport { getSession } from '@jbrowse/core/util';\nimport { BaseCard, Attributes, } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail';\nimport { ErrorMessage, LoadingEllipses } from '@jbrowse/core/ui';\nexport default function FileInfoPanel({ config, }) {\n    const [error, setError] = useState();\n    const [info, setInfo] = useState();\n    const session = getSession(config);\n    const { rpcManager } = session;\n    useEffect(() => {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        ;\n        (async () => {\n            try {\n                const adapterConfig = readConfObject(config, 'adapter');\n                const result = await rpcManager.call(config.trackId, 'CoreGetInfo', {\n                    adapterConfig,\n                });\n                setInfo(result);\n            }\n            catch (e) {\n                console.error(e);\n                setError(e);\n            }\n        })();\n    }, [config, rpcManager]);\n    const details = typeof info === 'string'\n        ? {\n            header: `<pre>${info\n                .replaceAll('<', '&lt;')\n                .replaceAll('>', '&gt;')}</pre>`,\n        }\n        : info || {};\n    return info !== null ? (React.createElement(BaseCard, { title: \"File info\" }, error ? (React.createElement(ErrorMessage, { error: error })) : info === undefined ? (React.createElement(LoadingEllipses, { message: \"Loading file data\" })) : (React.createElement(Attributes, { attributes: details })))) : null;\n}\n","import React, { useState } from 'react';\nimport clone from 'clone';\nimport copy from 'copy-to-clipboard';\nimport { Button } from '@mui/material';\nimport { makeStyles } from 'tss-react/mui';\nimport { getConf, readConfObject, } from '@jbrowse/core/configuration';\nimport { getSession, getEnv } from '@jbrowse/core/util';\nimport { BaseCard, Attributes, } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail';\nimport FileInfoPanel from './FileInfoPanel';\nconst useStyles = makeStyles()({\n    content: {\n        minWidth: 800,\n    },\n});\nfunction removeAttr(obj, attr) {\n    for (const prop in obj) {\n        if (prop === attr) {\n            delete obj[prop];\n        }\n        else if (typeof obj[prop] === 'object') {\n            removeAttr(obj[prop], attr);\n        }\n    }\n    return obj;\n}\nexport default function AboutContents({ config, }) {\n    const [copied, setCopied] = useState(false);\n    const conf = readConfObject(config);\n    const session = getSession(config);\n    const { classes } = useStyles();\n    const hideUris = getConf(session, ['formatAbout', 'hideUris']) ||\n        readConfObject(config, ['formatAbout', 'hideUris']);\n    const { pluginManager } = getEnv(session);\n    const confPostExt = pluginManager.evaluateExtensionPoint('Core-customizeAbout', {\n        config: {\n            ...conf,\n            ...getConf(session, ['formatAbout', 'config'], { config: conf }),\n            ...readConfObject(config, ['formatAbout', 'config'], { config: conf }),\n        },\n    }, { session, config });\n    const ExtraPanel = pluginManager.evaluateExtensionPoint('Core-extraAboutPanel', null, { session, config });\n    return (React.createElement(\"div\", { className: classes.content },\n        React.createElement(BaseCard, { title: \"Configuration\" },\n            !hideUris ? (React.createElement(Button, { variant: \"contained\", style: { float: 'right' }, onClick: () => {\n                    const snap = removeAttr(clone(conf), 'baseUri');\n                    copy(JSON.stringify(snap, null, 2));\n                    setCopied(true);\n                    setTimeout(() => setCopied(false), 1000);\n                } }, copied ? 'Copied to clipboard!' : 'Copy config')) : null,\n            React.createElement(Attributes, { attributes: confPostExt, omit: ['displays', 'baseUri', 'refNames', 'formatAbout'], hideUris: hideUris })),\n        ExtraPanel ? (React.createElement(BaseCard, { title: ExtraPanel.name },\n            React.createElement(ExtraPanel.Component, { config: config }))) : null,\n        React.createElement(FileInfoPanel, { config: config })));\n}\n","import React from 'react';\nimport Dialog from '@jbrowse/core/ui/Dialog';\nimport { getSession, getEnv } from '@jbrowse/core/util';\nimport { getTrackName } from '@jbrowse/core/util/tracks';\nimport AboutContents from './AboutDialogContents';\nexport function AboutDialog({ config, handleClose, }) {\n    const session = getSession(config);\n    const trackName = getTrackName(config, session);\n    const { pluginManager } = getEnv(session);\n    const AboutComponent = pluginManager.evaluateExtensionPoint('Core-replaceAbout', AboutContents, { session, config });\n    return (React.createElement(Dialog, { open: true, onClose: handleClose, title: trackName, maxWidth: \"xl\" },\n        React.createElement(AboutComponent, { config: config })));\n}\n"],"names":["FileInfoPanel","_ref","config","error","setError","useState","info","setInfo","session","getSession","rpcManager","useEffect","adapterConfig","readConfObject","result","call","trackId","e","console","details","header","concat","replaceAll","React","BaseCard","title","ErrorMessage","undefined","LoadingEllipses","message","Attributes","attributes","useStyles","makeStyles","content","minWidth","removeAttr","obj","attr","prop","AboutContents","copied","setCopied","conf","classes","hideUris","getConf","pluginManager","getEnv","confPostExt","evaluateExtensionPoint","ExtraPanel","className","Button","variant","style","float","onClick","snap","clone","copy","JSON","stringify","setTimeout","omit","name","Component","AboutDialog","handleClose","trackName","getTrackName","AboutComponent","Dialog","open","onClose","maxWidth"],"sourceRoot":""}