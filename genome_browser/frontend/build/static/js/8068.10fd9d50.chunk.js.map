{"version":3,"file":"static/js/8068.10fd9d50.chunk.js","mappings":"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","sources":["../node_modules/@jbrowse/core/util/formatFastaStrings.js","../node_modules/@jbrowse/plugin-linear-genome-view/esm/LinearGenomeView/components/GetSequenceDialog.js","../node_modules/@mui/icons-material/GetApp.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.formatSeqFasta = exports.formatFastaLines = void 0;\n/**\n * Returns sequence with new line every 80 characters\n * ref https://stackoverflow.com/a/51506718/2129219\n *\n * @param seqString -  string\n * @returns formatted sequence string\n */\nfunction formatFastaLines(seqString) {\n    return seqString.replaceAll(/(.{1,80})/g, '$1\\n').trimEnd();\n}\nexports.formatFastaLines = formatFastaLines;\n/**\n * Formats the sequences chunks into Fasta format\n *\n * @param chunks - array of seq chunks of the form `{ header: string, seq: string }`\n * @returns formatted sequence in fasta format\n */\nfunction formatSeqFasta(chunks) {\n    return chunks\n        .map(chunk => `>${chunk.header}\\n${formatFastaLines(chunk.seq)}`)\n        .join('\\n');\n}\nexports.formatSeqFasta = formatSeqFasta;\n","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from 'tss-react/mui';\nimport { Button, Checkbox, CircularProgress, Container, DialogActions, DialogContent, FormGroup, FormControlLabel, TextField, Typography, } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { saveAs } from 'file-saver';\nimport { getConf } from '@jbrowse/core/configuration';\nimport copy from 'copy-to-clipboard';\nimport { Dialog } from '@jbrowse/core/ui';\nimport { getSession, reverse, complement, } from '@jbrowse/core/util';\nimport { formatSeqFasta } from '@jbrowse/core/util/formatFastaStrings';\n// icons\nimport { ContentCopy as ContentCopyIcon } from '@jbrowse/core/ui/Icons';\nimport GetAppIcon from '@mui/icons-material/GetApp';\nconst useStyles = makeStyles()({\n    dialogContent: {\n        width: '80em',\n    },\n    textAreaFont: {\n        fontFamily: 'Courier New',\n    },\n});\n/**\n * Fetches and returns a list features for a given list of regions\n */\nasync function fetchSequence(model, regions, signal) {\n    const session = getSession(model);\n    const { leftOffset, rightOffset } = model;\n    if (!leftOffset || !rightOffset) {\n        throw new Error('no offsets on model to use for range');\n    }\n    if (leftOffset.assemblyName !== rightOffset.assemblyName) {\n        throw new Error('not able to fetch sequences from multiple assemblies');\n    }\n    const { rpcManager, assemblyManager } = session;\n    const assemblyName = leftOffset.assemblyName || rightOffset.assemblyName || '';\n    const assembly = assemblyManager.get(assemblyName);\n    if (!assembly) {\n        throw new Error(`assembly ${assemblyName} not found`);\n    }\n    const adapterConfig = getConf(assembly, ['sequence', 'adapter']);\n    const sessionId = 'getSequence';\n    return rpcManager.call(sessionId, 'CoreGetFeatures', {\n        adapterConfig,\n        regions,\n        sessionId,\n        signal,\n    });\n}\nconst GetSequenceDialog = observer(function ({ model, handleClose, }) {\n    const { classes } = useStyles();\n    const session = getSession(model);\n    const [error, setError] = useState();\n    const [sequenceChunks, setSequenceChunks] = useState();\n    const [rev, setReverse] = useState(false);\n    const [copied, setCopied] = useState(false);\n    const [comp, setComplement] = useState(false);\n    const { leftOffset, rightOffset } = model;\n    const loading = Boolean(sequenceChunks === undefined);\n    useEffect(() => {\n        let active = true;\n        const controller = new AbortController();\n        (async () => {\n            try {\n                // random note: the current selected region can't be a computed because\n                // it uses action on base1dview even though it's on the ephemeral\n                // base1dview\n                const selection = model.getSelectedRegions(leftOffset, rightOffset);\n                if (selection.length === 0) {\n                    throw new Error('Selected region is out of bounds');\n                }\n                const chunks = await fetchSequence(model, selection, controller.signal);\n                if (active) {\n                    setSequenceChunks(chunks);\n                }\n            }\n            catch (e) {\n                console.error(e);\n                if (active) {\n                    setError(e);\n                }\n            }\n        })();\n        return () => {\n            controller.abort();\n            active = false;\n        };\n    }, [model, session, leftOffset, rightOffset]);\n    const sequence = sequenceChunks\n        ? formatSeqFasta(sequenceChunks\n            .filter(f => !!f)\n            .map(chunk => {\n            let chunkSeq = chunk.get('seq');\n            const chunkRefName = chunk.get('refName');\n            const chunkStart = chunk.get('start') + 1;\n            const chunkEnd = chunk.get('end');\n            const loc = `${chunkRefName}:${chunkStart}-${chunkEnd}`;\n            if ((chunkSeq === null || chunkSeq === void 0 ? void 0 : chunkSeq.length) !== chunkEnd - chunkStart + 1) {\n                throw new Error(`${loc} returned ${chunkSeq.length.toLocaleString()} bases, but should have returned ${(chunkEnd - chunkStart).toLocaleString()}`);\n            }\n            if (rev) {\n                chunkSeq = reverse(chunkSeq);\n            }\n            if (comp) {\n                chunkSeq = complement(chunkSeq);\n            }\n            return {\n                header: loc + (rev ? '-rev' : '') + (comp ? '-comp' : ''),\n                seq: chunkSeq,\n            };\n        }))\n        : '';\n    const sequenceTooLarge = sequence ? sequence.length > 1000000 : false;\n    return (React.createElement(Dialog, { maxWidth: \"xl\", open: true, onClose: () => {\n            handleClose();\n            model.setOffsets();\n        }, title: \"Reference sequence\" },\n        React.createElement(DialogContent, null,\n            error ? (React.createElement(Typography, { color: \"error\" }, `${error}`)) : loading ? (React.createElement(Container, null,\n                \"Retrieving reference sequence...\",\n                React.createElement(CircularProgress, { style: { marginLeft: 10 }, size: 20, disableShrink: true }))) : null,\n            React.createElement(TextField, { \"data-testid\": \"rubberband-sequence\", variant: \"outlined\", multiline: true, minRows: 5, maxRows: 10, disabled: sequenceTooLarge, className: classes.dialogContent, fullWidth: true, value: sequenceTooLarge\n                    ? 'Reference sequence too large to display, use the download FASTA button'\n                    : sequence, InputProps: {\n                    readOnly: true,\n                    classes: {\n                        input: classes.textAreaFont,\n                    },\n                } }),\n            React.createElement(FormGroup, null,\n                React.createElement(FormControlLabel, { control: React.createElement(Checkbox, { value: rev, onChange: event => setReverse(event.target.checked) }), label: \"Reverse sequence\" }),\n                React.createElement(FormControlLabel, { control: React.createElement(Checkbox, { value: comp, onChange: event => setComplement(event.target.checked) }), label: \"Complement sequence\" })),\n            React.createElement(Typography, { style: { margin: 10 } }, \"Note: Check both boxes for the \\\"reverse complement\\\"\")),\n        React.createElement(DialogActions, null,\n            React.createElement(Button, { onClick: () => {\n                    copy(sequence);\n                    setCopied(true);\n                    setTimeout(() => setCopied(false), 500);\n                }, disabled: loading || !!error || sequenceTooLarge, color: \"primary\", startIcon: React.createElement(ContentCopyIcon, null) }, copied ? 'Copied' : 'Copy to clipboard'),\n            React.createElement(Button, { onClick: () => {\n                    saveAs(new Blob([sequence || ''], {\n                        type: 'text/x-fasta;charset=utf-8',\n                    }), 'jbrowse_ref_seq.fa');\n                }, disabled: loading || !!error, color: \"primary\", startIcon: React.createElement(GetAppIcon, null) }, \"Download FASTA\"),\n            React.createElement(Button, { onClick: handleClose, variant: \"contained\" }, \"Close\"))));\n});\nexport default GetSequenceDialog;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7zM5 18v2h14v-2z\"\n}), 'GetApp');"],"names":["formatFastaLines","seqString","replaceAll","trimEnd","exports","chunks","map","chunk","concat","header","seq","join","useStyles","makeStyles","dialogContent","width","textAreaFont","fontFamily","observer","_ref","model","handleClose","classes","session","getSession","error","setError","useState","sequenceChunks","setSequenceChunks","rev","setReverse","copied","setCopied","comp","setComplement","leftOffset","rightOffset","loading","Boolean","undefined","useEffect","active","controller","AbortController","selection","getSelectedRegions","length","Error","async","regions","signal","assemblyName","rpcManager","assemblyManager","assembly","get","adapterConfig","getConf","sessionId","call","fetchSequence","e","console","abort","sequence","formatSeqFasta","filter","f","chunkSeq","chunkRefName","chunkStart","chunkEnd","loc","toLocaleString","reverse","complement","sequenceTooLarge","React","Dialog","maxWidth","open","onClose","setOffsets","title","DialogContent","Typography","color","Container","CircularProgress","style","marginLeft","size","disableShrink","TextField","variant","multiline","minRows","maxRows","disabled","className","fullWidth","value","InputProps","readOnly","input","FormGroup","FormControlLabel","control","Checkbox","onChange","event","target","checked","label","margin","DialogActions","Button","onClick","copy","setTimeout","startIcon","ContentCopyIcon","saveAs","Blob","type","GetAppIcon","_interopRequireDefault","require","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}