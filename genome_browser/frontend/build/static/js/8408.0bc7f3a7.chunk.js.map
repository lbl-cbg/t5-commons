{"version":3,"file":"static/js/8408.0bc7f3a7.chunk.js","mappings":"6JAEe,MAAMA,UAA4BC,EAAAA,YAC7C,uBAAMC,GACF,MAAMC,EAAMC,KAAKC,QAAQ,YACzB,GAAgB,KAAZF,EAAIG,KAA0B,4BAAZH,EAAIG,IACtB,MAAO,GAEX,MAAMC,QAAgBC,EAAAA,EAAAA,cAAaL,EAAKC,KAAKK,eAAeC,SAAS,QAC/DC,EAAYP,KAAKC,QAAQ,iBAC/B,OAAOE,EACFK,OACAC,MAAM,cACNC,QAAOC,KAAOA,IAAMA,EAAEC,WAAW,OACjCC,KAAIC,IACL,MAAMC,EAAUD,EAAIL,MAAM,OACnBO,GAAWD,EAAQE,OAAOV,EAAW,GAC5C,MAAO,CAAES,UAASD,QAASA,EAAQL,QAAOC,KAAOA,EAAEH,SAAS,GAEpE,CACA,mBAAMU,GAAkB,E","sources":["../node_modules/@jbrowse/plugin-config/esm/RefNameAliasAdapter/RefNameAliasAdapter.js"],"sourcesContent":["import { BaseAdapter, } from '@jbrowse/core/data_adapters/BaseAdapter';\nimport { openLocation } from '@jbrowse/core/util/io';\nexport default class RefNameAliasAdapter extends BaseAdapter {\n    async getRefNameAliases() {\n        const loc = this.getConf('location');\n        if (loc.uri === '' || loc.uri === '/path/to/my/aliases.txt') {\n            return [];\n        }\n        const results = await openLocation(loc, this.pluginManager).readFile('utf8');\n        const refColumn = this.getConf('refNameColumn');\n        return results\n            .trim()\n            .split(/\\n|\\r\\n|\\r/)\n            .filter(f => !!f && !f.startsWith('#'))\n            .map(row => {\n            const aliases = row.split('\\t');\n            const [refName] = aliases.splice(refColumn, 1);\n            return { refName, aliases: aliases.filter(f => !!f.trim()) };\n        });\n    }\n    async freeResources() { }\n}\n"],"names":["RefNameAliasAdapter","BaseAdapter","getRefNameAliases","loc","this","getConf","uri","results","openLocation","pluginManager","readFile","refColumn","trim","split","filter","f","startsWith","map","row","aliases","refName","splice","freeResources"],"sourceRoot":""}