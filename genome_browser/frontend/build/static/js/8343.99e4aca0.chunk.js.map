{"version":3,"file":"static/js/8343.99e4aca0.chunk.js","mappings":"wJAOOA,eAAeC,EAAUC,EAAMC,EAAMC,GACxC,MACMC,GADOC,EAAAA,EAAAA,mBAAkBJ,GACZK,cAAcC,aAC3BC,EAASP,EAAKO,OACpB,GAAIN,EAAKO,gBAAiB,CACtB,MAAMC,EAASC,SAASC,cAAc,UACtCF,EAAON,MAAgB,EAARA,EACfM,EAAOF,OAAkB,EAATA,EAChB,MAAMK,EAAMH,EAAOI,WAAW,MAC9B,IAAKD,EACD,OAIJ,OAFAA,EAAIE,MAAM,EAAG,GACbZ,EAAGF,EAAMY,EAAKT,EAAOI,GACbQ,EAAAA,cAAoB,QAAS,CAAEZ,MAAOA,EAAOI,OAAQA,EAAQS,UAAWP,EAAOQ,UAAU,cACrG,CACK,CAED,MACML,EAAM,WADM,8CACEM,SAAQf,EAAOI,GACnCL,EAAGF,EAAMY,EAAKT,EAAOI,GACrB,MAAMY,EAzBd,SAAeC,GACX,MAAMC,EAAyB,qBAATC,KACtB,MAAO,YAAPC,OAAmBF,EAASD,EAAK,OACrC,CAsBuBI,CAAMxB,EAAKoB,IAC1B,OAAQL,EAAAA,cAAoBA,EAAAA,SAAgB,KACxCA,EAAAA,cAAoB,OAAQ,KACxBA,EAAAA,cAAoB,WAAY,CAAEK,GAAID,GAClCJ,EAAAA,cAAoB,OAAQ,CAAEU,EAAG,EAAGC,EAAG,EAAGvB,MAAOA,EAAOI,OAAQA,MACxEQ,EAAAA,cAAoB,IAAK,CAErBY,wBAAyB,CAAEC,OAAQhB,EAAIiB,SAASC,WAAaC,SAAU,QAAFR,OAAUJ,EAAM,OACjG,CACJ,C","sources":["../node_modules/@jbrowse/plugin-alignments/esm/shared/renderSvg.js"],"sourcesContent":["import React from 'react';\nimport { getContainingView } from '@jbrowse/core/util';\n// stabilize clipid under test for snapshot\nfunction getId(id) {\n    const isJest = typeof jest === 'undefined';\n    return `arc-clip-${isJest ? id : 'jest'}`;\n}\nexport async function renderSvg(self, opts, cb) {\n    const view = getContainingView(self);\n    const width = view.dynamicBlocks.totalWidthPx;\n    const height = self.height;\n    if (opts.rasterizeLayers) {\n        const canvas = document.createElement('canvas');\n        canvas.width = width * 2;\n        canvas.height = height * 2;\n        const ctx = canvas.getContext('2d');\n        if (!ctx) {\n            return;\n        }\n        ctx.scale(2, 2);\n        cb(self, ctx, width, height);\n        return (React.createElement(\"image\", { width: width, height: height, xlinkHref: canvas.toDataURL('image/png') }));\n    }\n    else {\n        // @ts-ignore\n        const C2S = await import('canvas2svg');\n        const ctx = new C2S.default(width, height);\n        cb(self, ctx, width, height);\n        const clipid = getId(self.id);\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"defs\", null,\n                React.createElement(\"clipPath\", { id: clipid },\n                    React.createElement(\"rect\", { x: 0, y: 0, width: width, height: height }))),\n            React.createElement(\"g\", { \n                /* eslint-disable-next-line react/no-danger */\n                dangerouslySetInnerHTML: { __html: ctx.getSvg().innerHTML }, clipPath: `url(#${clipid})` })));\n    }\n}\n"],"names":["async","renderSvg","self","opts","cb","width","getContainingView","dynamicBlocks","totalWidthPx","height","rasterizeLayers","canvas","document","createElement","ctx","getContext","scale","React","xlinkHref","toDataURL","default","clipid","id","isJest","jest","concat","getId","x","y","dangerouslySetInnerHTML","__html","getSvg","innerHTML","clipPath"],"sourceRoot":""}