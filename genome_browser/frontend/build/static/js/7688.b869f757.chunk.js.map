{"version":3,"file":"static/js/7688.b869f757.chunk.js","mappings":"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","sources":["../node_modules/@jbrowse/plugin-legacy-jbrowse/esm/JBrowse1Connection/util.js","../node_modules/@jbrowse/plugin-legacy-jbrowse/esm/JBrowse1Connection/jb1ConfigParse.js","../node_modules/@jbrowse/plugin-legacy-jbrowse/esm/JBrowse1Connection/jb1ConfigLoad.js","../node_modules/get-value/index.js","../node_modules/is-plain-object/index.js","../node_modules/is-primitive/index.js","../node_modules/isobject/index.js","../node_modules/set-value/index.js"],"sourcesContent":["import getValue from 'get-value';\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isTrack(arg) {\n    return (arg === null || arg === void 0 ? void 0 : arg.label) && typeof arg.label === 'string';\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isSource(arg) {\n    return (arg === null || arg === void 0 ? void 0 : arg.url) && typeof arg.url === 'string';\n}\nexport function deepUpdate(a, b) {\n    for (const prop of Object.keys(b)) {\n        if (prop in a &&\n            typeof b[prop] === 'object' &&\n            typeof a[prop] === 'object') {\n            deepUpdate(a[prop], b[prop]);\n        }\n        else if (a[prop] === undefined || b[prop] !== undefined) {\n            a[prop] = b[prop];\n        }\n    }\n    return a;\n}\n/**\n * replace variables in a template string with values\n *\n * @param template - String with variable names in curly brackets\n * e.g., `http://foo/{bar}?arg={baz.foo}`\n * @param fillWith - object with attribute-value mappings\n * e.g., `{ 'bar': 'someurl', 'baz': { 'foo': 42 } }`\n * @returns the template string with variables in fillWith replaced\n * e.g., 'htp://foo/someurl?arg=valueforbaz'\n */\nexport function fillTemplate(template, fillWith) {\n    return template.replaceAll(/{([\\s\\w.]+)}/g, (match, varName) => {\n        varName = varName.replaceAll(/\\s+/g, '');\n        const fill = getValue(fillWith, varName);\n        if (fill !== undefined) {\n            return typeof fill === 'function' ? fill(varName) : fill;\n        }\n        if (fillWith.callback) {\n            // @ts-expect-error\n            const v = fillWith.callback.call(this, varName);\n            if (v !== undefined) {\n                return v;\n            }\n        }\n        return match;\n    });\n}\n/**\n * Clones objects (including DOM nodes) and all children.\n * Warning: do not clone cyclic structures\n * (Lifted from dojo https://github.com/dojo/dojo/blob/master/_base/lang.js)\n * @param src - The object to clone\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function clone(src) {\n    if (!src ||\n        typeof src !== 'object' ||\n        Object.prototype.toString.call(src) === '[object Function]') {\n        // null, undefined, any non-object, or function\n        return src; // anything\n    }\n    if (src.nodeType && 'cloneNode' in src) {\n        // DOM Node\n        return src.cloneNode(true); // Node\n    }\n    if (src instanceof Date) {\n        // Date\n        return new Date(src.getTime()); // Date\n    }\n    if (src instanceof RegExp) {\n        // RegExp\n        return new RegExp(src); // RegExp\n    }\n    let r;\n    let i;\n    let l;\n    if (Array.isArray(src)) {\n        // array\n        r = [];\n        for (i = 0, l = src.length; i < l; ++i) {\n            if (i in src) {\n                r[i] = clone(src[i]);\n            }\n        }\n        // we don't clone functions for performance reasons\n        //    }else if(d.isFunction(src)){\n        //      // function\n        //      r = function(){ return src.apply(this, arguments); };\n    }\n    else {\n        // generic objects\n        r = src.constructor ? new src.constructor() : {};\n    }\n    return mixin(r, src, clone);\n}\n/**\n * Copies/adds all properties of source to dest; returns dest.\n * (Lifted from dojo https://github.com/dojo/dojo/blob/master/_base/lang.js)\n *\n * All properties, including functions (sometimes termed \"methods\"), excluding\n * any non-standard extensions found in Object.prototype, are copied/added to\n * dest. Copying/adding each particular property is delegated to copyFunc\n * (if any); copyFunc defaults to the Javascript assignment operator if not\n * provided. Notice that by default, mixin executes a so-called \"shallow copy\"\n * and aggregate types are copied/added by reference.\n * @param dest - The object to which to copy/add all properties contained in\n * source.\n * @param source - The object from which to draw all properties to copy into dest.\n * @param copyFunc - The process used to copy/add a property in source; defaults\n * to the Javascript assignment operator.\n * @returns dest, as modified\n */\nfunction mixin(dest, source, copyFunc) {\n    let name;\n    let s;\n    const empty = {};\n    for (name in source) {\n        // the (!(name in empty) || empty[name] !== s) condition avoids copying\n        // properties in \"source\" inherited from Object.prototype.\t For example,\n        // if dest has a custom toString() method, don't overwrite it with the\n        // toString() method that source inherited from Object.prototype\n        s = source[name];\n        if (!(name in dest) ||\n            // @ts-expect-error\n            (dest[name] !== s && (!(name in empty) || empty[name] !== s))) {\n            dest[name] = copyFunc ? copyFunc(s) : s;\n        }\n    }\n    return dest; // Object\n}\n","/* eslint no-cond-assign: [\"error\", \"except-parens\"] */\nimport getValue from 'get-value';\nimport setValue from 'set-value';\nimport { objectHash } from '@jbrowse/core/util';\nimport { isSource, isTrack } from './util';\nexport function parseJB1Json(config, url) {\n    if (typeof config === 'string') {\n        let parsedConf;\n        try {\n            parsedConf = JSON.parse(config);\n        }\n        catch (error) {\n            throw new Error(`${error} when parsing configuration.`);\n        }\n        return regularizeConf(parsedConf, url);\n    }\n    return regularizeConf(config, url);\n}\nexport function parseJB1Conf(config, url) {\n    let parsedConf;\n    try {\n        parsedConf = parse(config, url);\n    }\n    catch (error) {\n        throw new Error(`${error} when parsing configuration.`);\n    }\n    return regularizeConf(parsedConf, url);\n}\nfunction isAlwaysArray(varName) {\n    if (varName === 'include') {\n        return true;\n    }\n    return false;\n}\nfunction parse(text, url) {\n    let section = [];\n    let keyPath;\n    let operation;\n    let value;\n    const data = { tracks: {} };\n    let lineNumber;\n    function recordVal() {\n        if (value !== undefined) {\n            let parsedValue;\n            try {\n                // parse json\n                const match = value.match(/^json:(.+)/i);\n                if (match) {\n                    parsedValue = JSON.parse(match[1]);\n                }\n                // parse numbers if it looks numeric\n                else if (/^[+-]?[\\d.,]+([eE][-+]?\\d+)?$/.test(value)) {\n                    parsedValue = parseFloat(value.replaceAll(',', ''));\n                }\n                else {\n                    parsedValue = value;\n                }\n                if (!keyPath) {\n                    throw new Error(`Error parsing in section ${section.join(' - ')}`);\n                }\n                const path = [...section, ...keyPath].join('.');\n                if (operation === '+=') {\n                    let existing = getValue(data, path);\n                    if (existing) {\n                        if (!Array.isArray(existing)) {\n                            existing = [existing];\n                        }\n                    }\n                    else {\n                        existing = [];\n                    }\n                    existing.push(parsedValue);\n                    parsedValue = existing;\n                }\n                if (parsedValue === 'true') {\n                    parsedValue = true;\n                }\n                if (parsedValue === 'false') {\n                    parsedValue = false;\n                }\n                setValue(data, path, parsedValue);\n            }\n            catch (e) {\n                throw new Error(`syntax error${url ? ` in ${url}` : ''}${lineNumber ? ` at line ${lineNumber - 1}` : ''}`);\n            }\n        }\n    }\n    text.split(/\\n|\\r\\n|\\r/).forEach((textLine, i) => {\n        lineNumber = i + 1;\n        const line = textLine.replace(/^\\s*#.+/, '');\n        // new section\n        let match;\n        if ((match = line.match(/^\\s*\\[([^\\]]+)/))) {\n            // new section\n            recordVal();\n            keyPath = undefined;\n            value = undefined;\n            section = match[1].trim().split(/\\s*\\.\\s*/);\n            if (section.length === 1 && section[0].toLowerCase() === 'general') {\n                section = [];\n            }\n        }\n        // new value\n        else if ((match = line.match(value === undefined ? /^([^+=]+)(\\+?=)(.*)/ : /^(\\S[^+=]+)(\\+?=)(.*)/))) {\n            recordVal();\n            keyPath = match[1].trim().split(/\\s*\\.\\s*/);\n            [, , operation] = match;\n            if (isAlwaysArray([...section, ...keyPath].join('.'))) {\n                operation = '+=';\n            }\n            value = match[3].trim();\n        }\n        // add to existing array value\n        else if (keyPath !== undefined &&\n            (match = line.match(/^\\s{0,4}\\+\\s*(.+)/))) {\n            recordVal();\n            operation = '+=';\n            value = match[1].trim();\n        }\n        // add to existing value\n        else if (value !== undefined && (match = line.match(/^\\s+(\\S.*)/))) {\n            value += value.length ? ` ${match[1].trim()}` : match[1].trim();\n        }\n        // done with last value\n        else {\n            recordVal();\n            keyPath = undefined;\n            value = undefined;\n        }\n    });\n    recordVal();\n    return data;\n}\n/**\n * Applies defaults and any other necessary tweaks to the loaded configuration.\n * @param conf - the object containing the configuration, which it modifies\n * in-place\n * @param url - URL of the config file\n * @returns the same object it was passed\n */\nexport function regularizeConf(conf, url) {\n    // if tracks is not an array, convert it to one\n    if (conf.tracks && !Array.isArray(conf.tracks)) {\n        // if it's a single track config, wrap it in an arrayref\n        if (isTrack(conf.tracks)) {\n            conf.tracks = [conf.tracks];\n        }\n        // otherwise, coerce it to an array\n        else {\n            const tracks = [];\n            for (const label of Object.keys(conf.tracks)) {\n                const track = conf.tracks[label];\n                if (isTrack(track)) {\n                    tracks.push(track);\n                }\n                else {\n                    tracks.push({ label, ...track });\n                }\n            }\n            conf.tracks = tracks;\n        }\n    }\n    // regularize trackMetadata.sources\n    const meta = conf.trackMetadata;\n    if (meta === null || meta === void 0 ? void 0 : meta.sources) {\n        // if it's a single source config, wrap it in an arrayref\n        if (typeof meta.sources === 'string') {\n            meta.sources = [meta.sources];\n        }\n        if (isSource(meta.sources)) {\n            meta.sources = [meta.sources];\n        }\n        if (!Array.isArray(meta.sources)) {\n            const sources = [];\n            for (const name of Object.keys(meta.sources)) {\n                const source = meta.sources[name];\n                if (!('name' in source)) {\n                    source.name = name;\n                }\n                sources.push(source);\n            }\n            meta.sources = sources;\n        }\n        // coerce any string source defs to be URLs, and try to detect their types\n        meta.sources = meta.sources.map((sourceDef) => {\n            if (typeof sourceDef === 'string') {\n                const newSourceDef = { url: sourceDef };\n                const typeMatch = sourceDef.match(/\\.(\\w+)$/);\n                if (typeMatch) {\n                    newSourceDef.type = typeMatch[1].toLowerCase();\n                }\n                return newSourceDef;\n            }\n            return sourceDef;\n        });\n    }\n    conf.sourceUrl = conf.sourceUrl || url;\n    if (conf.sourceUrl.startsWith('/')) {\n        conf.sourceUrl = new URL(conf.sourceUrl, window.location.href).href;\n    }\n    conf.baseUrl = conf.baseUrl || new URL('.', conf.sourceUrl).href;\n    if (conf.baseUrl.length && !conf.baseUrl.endsWith('/')) {\n        conf.baseUrl += '/';\n    }\n    if (conf.sourceUrl) {\n        // set a default baseUrl in each of the track and store confs, and the names\n        // conf, if needed\n        const addBase = [];\n        if (conf.tracks) {\n            addBase.push(...conf.tracks);\n        }\n        if (conf.stores) {\n            addBase.push(...Object.values(conf.stores));\n        }\n        if (conf.names) {\n            addBase.push(conf.names);\n        }\n        addBase.forEach((t) => {\n            if (!t.baseUrl) {\n                t.baseUrl = conf.baseUrl || '/';\n            }\n        });\n        // resolve the refSeqs and nameUrl if present\n        if (conf.refSeqs && typeof conf.refSeqs === 'string') {\n            conf.refSeqs = new URL(conf.refSeqs, conf.sourceUrl).href;\n        }\n        if (conf.nameUrl) {\n            conf.nameUrl = new URL(conf.nameUrl, conf.sourceUrl).href;\n        }\n    }\n    conf.stores = conf.stores || {};\n    (conf.tracks || []).forEach((trackConfig) => {\n        // if there is a `config` subpart, just copy its keys in to the top-level\n        // config\n        if (trackConfig.config) {\n            const c = trackConfig.config;\n            delete trackConfig.config;\n            trackConfig = { ...c, ...trackConfig };\n        }\n        // skip if it's a new-style track def\n        if (trackConfig.store) {\n            return;\n        }\n        let trackClassName;\n        if (trackConfig.type === 'FeatureTrack') {\n            trackClassName = 'JBrowse/View/Track/HTMLFeatures';\n        }\n        else if (trackConfig.type === 'ImageTrack') {\n            trackClassName = 'JBrowse/View/Track/FixedImage';\n        }\n        else if (trackConfig.type === 'ImageTrack.Wiggle') {\n            trackClassName = 'JBrowse/View/Track/FixedImage/Wiggle';\n        }\n        else if (trackConfig.type === 'SequenceTrack') {\n            trackClassName = 'JBrowse/View/Track/Sequence';\n        }\n        else {\n            trackClassName = regularizeClass('JBrowse/View/Track', trackConfig.type);\n        }\n        trackConfig.type = trackClassName;\n        synthesizeTrackStoreConfig(conf, trackConfig);\n        if (trackConfig.histograms) {\n            if (!trackConfig.histograms.baseUrl) {\n                trackConfig.histograms.baseUrl = trackConfig.baseUrl;\n            }\n            synthesizeTrackStoreConfig(conf, trackConfig.histograms);\n        }\n    });\n    return conf;\n}\n/**\n * prefix class name with `root` if it contains no slashes\n * @param root - Prefix root\n * @param className - class name\n */\nfunction regularizeClass(root, className) {\n    if (!className) {\n        return '';\n    }\n    if (!className.includes('/')) {\n        className = `${root}/${className}`;\n    }\n    className = className.replace(/^\\//, '');\n    return className;\n}\nfunction guessStoreClass(trackConfig, urlTemplate) {\n    if (!trackConfig) {\n        return '';\n    }\n    if (trackConfig.type && trackConfig.type.includes('/FixedImage')) {\n        return `JBrowse/Store/TiledImage/Fixed${trackConfig.backendVersion === 0 ? '_v0' : ''}`;\n    }\n    if (/\\.jsonz?$/i.test(urlTemplate)) {\n        return `JBrowse/Store/SeqFeature/NCList${trackConfig.backendVersion === 0 ? '_v0' : ''}`;\n    }\n    if (/\\.bam$/i.test(urlTemplate)) {\n        return 'JBrowse/Store/SeqFeature/BAM';\n    }\n    if (/\\.cram$/i.test(urlTemplate)) {\n        return 'JBrowse/Store/SeqFeature/CRAM';\n    }\n    if (/\\.gff3?$/i.test(urlTemplate)) {\n        return 'JBrowse/Store/SeqFeature/GFF3';\n    }\n    if (/\\.bed$/i.test(urlTemplate)) {\n        return 'JBrowse/Store/SeqFeature/BED';\n    }\n    if (/\\.vcf.b?gz$/i.test(urlTemplate)) {\n        return 'JBrowse/Store/SeqFeature/VCFTabix';\n    }\n    if (/\\.gff3?.b?gz$/i.test(urlTemplate)) {\n        return 'JBrowse/Store/SeqFeature/GFF3Tabix';\n    }\n    if (/\\.bed.b?gz$/i.test(urlTemplate)) {\n        return 'JBrowse/Store/SeqFeature/BEDTabix';\n    }\n    if (/\\.(bw|bigwig)$/i.test(urlTemplate)) {\n        return 'JBrowse/Store/SeqFeature/BigWig';\n    }\n    if (/\\.(bb|bigbed)$/i.test(urlTemplate)) {\n        return 'JBrowse/Store/SeqFeature/BigBed';\n    }\n    if (/\\.(fa|fasta)$/i.test(urlTemplate)) {\n        return 'JBrowse/Store/SeqFeature/IndexedFasta';\n    }\n    if (/\\.(fa|fasta)\\.b?gz$/i.test(urlTemplate)) {\n        return 'JBrowse/Store/SeqFeature/BgzipIndexedFasta';\n    }\n    if (/\\.2bit$/i.test(urlTemplate)) {\n        return 'JBrowse/Store/SeqFeature/TwoBit';\n    }\n    if (trackConfig.type && trackConfig.type.endsWith('/Sequence')) {\n        return 'JBrowse/Store/Sequence/StaticChunked';\n    }\n    return '';\n}\nfunction synthesizeTrackStoreConfig(mainConf, trackConfig) {\n    var _a;\n    // figure out what data store class to use with the track, applying some\n    // defaults if it is not explicit in the configuration\n    const { urlTemplate = '' } = trackConfig;\n    const storeClass = trackConfig.storeClass\n        ? regularizeClass('JBrowse/Store', trackConfig.storeClass)\n        : guessStoreClass(trackConfig, urlTemplate);\n    if (!storeClass) {\n        console.warn(`Unable to determine an appropriate data store to use with track '${trackConfig.label}', please explicitly specify a storeClass in the configuration.`);\n        return;\n    }\n    // synthesize a separate store conf\n    const storeConf = { ...trackConfig, type: storeClass };\n    // if this is the first sequence store we see, and we have no refseqs store\n    // defined explicitly, make this the refseqs store.\n    storeConf.name =\n        (storeClass === 'JBrowse/Store/Sequence/StaticChunked' ||\n            storeClass === 'JBrowse/Store/Sequence/IndexedFasta' ||\n            storeClass === 'JBrowse/Store/SeqFeature/IndexedFasta' ||\n            storeClass === 'JBrowse/Store/SeqFeature/BgzipIndexedFasta' ||\n            storeClass === 'JBrowse/Store/SeqFeature/TwoBit' ||\n            storeClass === 'JBrowse/Store/Sequence/TwoBit' ||\n            trackConfig.useAsRefSeqStore) &&\n            !((_a = mainConf.stores) === null || _a === void 0 ? void 0 : _a.refseqs)\n            ? 'refseqs'\n            : `store${objectHash(storeConf)}`;\n    // record it\n    if (!mainConf.stores) {\n        mainConf.stores = {};\n    }\n    mainConf.stores[storeConf.name] = storeConf;\n    // connect it to the track conf\n    trackConfig.store = storeConf.name;\n}\n","import { openLocation } from '@jbrowse/core/util/io';\nimport { parseJB1Json, parseJB1Conf, regularizeConf } from './jb1ConfigParse';\nimport { clone, deepUpdate, fillTemplate } from './util';\nfunction isUriLocation(location) {\n    return location.uri !== undefined;\n}\nfunction isLocalPathLocation(location) {\n    return location.localPath !== undefined;\n}\nexport async function fetchJb1(\n// eslint-disable-next-line unicorn/no-object-as-default-parameter\ndataRoot = { uri: '', locationType: 'UriLocation' }, \n// eslint-disable-next-line unicorn/no-object-as-default-parameter\nbaseConfig = {\n    include: ['{dataRoot}/trackList.json', '{dataRoot}/tracks.conf'],\n}, \n// eslint-disable-next-line unicorn/no-object-as-default-parameter\nbaseConfigRoot = { uri: '', locationType: 'UriLocation' }) {\n    const protocol = 'uri' in dataRoot ? 'uri' : 'localPath';\n    const dataRootReg = JSON.parse(JSON.stringify(dataRoot));\n    let dataRootLocation = '';\n    if (isUriLocation(dataRoot)) {\n        dataRootLocation = dataRoot.uri;\n    }\n    if (isLocalPathLocation(dataRoot)) {\n        dataRootLocation = dataRoot.localPath;\n    }\n    if (dataRootLocation.endsWith('/')) {\n        dataRootReg[protocol] = dataRootLocation.slice(0, -1);\n    }\n    if ((isUriLocation(baseConfigRoot) && baseConfigRoot.uri) ||\n        (isLocalPathLocation(baseConfigRoot) && baseConfigRoot.localPath)) {\n        const baseProtocol = 'uri' in baseConfigRoot ? 'uri' : 'localPath';\n        let baseConfigLocation = '';\n        if (isUriLocation(baseConfigRoot)) {\n            baseConfigLocation = baseConfigRoot.uri;\n        }\n        if (isLocalPathLocation(baseConfigRoot)) {\n            baseConfigLocation = baseConfigRoot.localPath;\n        }\n        if (baseConfigLocation.endsWith('/')) {\n            baseConfigLocation = baseConfigLocation.slice(0, -1);\n        }\n        let newConfig = {};\n        for (const conf of ['jbrowse.conf', 'jbrowse_conf.json']) {\n            let fetchedConfig = null;\n            try {\n                // @ts-expect-error\n                fetchedConfig = await fetchConfigFile({\n                    [baseProtocol]: `${baseConfigLocation}/${conf}`,\n                });\n            }\n            catch (error) {\n                console.error(`tried to access ${baseConfigLocation}/${conf}, but failed`);\n            }\n            newConfig = mergeConfigs(newConfig, fetchedConfig) || {};\n        }\n        if (dataRootReg[protocol]) {\n            newConfig.dataRoot = dataRootReg[protocol];\n        }\n        return createFinalConfig(newConfig);\n    }\n    const newConfig = regularizeConf(baseConfig, window.location.href);\n    if (dataRootReg[protocol]) {\n        newConfig.dataRoot = dataRootReg[protocol];\n    }\n    return createFinalConfig(newConfig);\n}\nexport async function createFinalConfig(baseConfig, defaults = configDefaults) {\n    const configWithDefaults = deepUpdate(clone(defaults), baseConfig);\n    let finalConfig = await loadIncludes(configWithDefaults);\n    finalConfig = mergeConfigs(finalConfig, baseConfig) || finalConfig;\n    fillTemplates(finalConfig, finalConfig);\n    validateConfig(finalConfig);\n    return finalConfig;\n}\nexport async function fetchConfigFile(location) {\n    const result = await openLocation(location).readFile('utf8');\n    if (isUriLocation(location)) {\n        return parseJb1(result, location.uri);\n    }\n    if (isLocalPathLocation(location)) {\n        return parseJb1(result, location.localPath);\n    }\n    return parseJb1(result);\n}\nexport function parseJb1(config, url = '') {\n    if (config.trim().startsWith('{')) {\n        return parseJB1Json(config, url);\n    }\n    return parseJB1Conf(config, url);\n}\n/**\n * Merges config object b into a. Properties in b override those in a.\n */\nfunction mergeConfigs(a, b) {\n    if (b === null) {\n        return null;\n    }\n    if (a === null) {\n        a = {};\n    }\n    for (const prop of Object.keys(b)) {\n        if (prop === 'tracks' && prop in a) {\n            const aTracks = a[prop] || [];\n            const bTracks = b[prop] || [];\n            if (Array.isArray(aTracks) && Array.isArray(bTracks)) {\n                a[prop] = mergeTrackConfigs(aTracks || [], bTracks || []);\n            }\n            else {\n                throw new Error(`Track config has not been properly regularized: ${aTracks} ${bTracks}`);\n            }\n        }\n        else if (!noRecursiveMerge(prop) &&\n            prop in a &&\n            // @ts-expect-error\n            typeof b[prop] === 'object' &&\n            // @ts-expect-error\n            typeof a[prop] === 'object') {\n            // @ts-expect-error\n            a[prop] = deepUpdate(a[prop], b[prop]);\n        }\n        else if (prop === 'dataRoot') {\n            if (a[prop] === undefined ||\n                (a[prop] === 'data' && b[prop] !== undefined)) {\n                a[prop] = b[prop];\n            }\n            // @ts-expect-error\n        }\n        else if (a[prop] === undefined || b[prop] !== undefined) {\n            // @ts-expect-error\n            a[prop] = b[prop];\n        }\n    }\n    return a;\n}\n/**\n * Special-case merging of two `tracks` configuration arrays.\n */\nfunction mergeTrackConfigs(a, b) {\n    if (!b.length) {\n        return a;\n    }\n    // index the tracks in `a` by track label\n    const aTracks = {};\n    a.forEach((t, i) => {\n        t.index = i;\n        aTracks[t.label] = t;\n    });\n    b.forEach((bT) => {\n        const aT = aTracks[bT.label];\n        if (aT) {\n            mergeConfigs(aT, bT);\n        }\n        else {\n            a.push(bT);\n        }\n    });\n    return a;\n}\n/**\n * Recursively fetch, parse, and merge all the includes in the given config\n * object.  Calls the callback with the resulting configuration when finished.\n * @param inputConfig - Config to load includes into\n */\nasync function loadIncludes(inputConfig) {\n    inputConfig = clone(inputConfig);\n    async function loadRecur(config, upstreamConf) {\n        const sourceUrl = config.sourceUrl || config.baseUrl;\n        if (!sourceUrl) {\n            throw new Error(`Could not determine source URL: ${JSON.stringify(config)}`);\n        }\n        const newUpstreamConf = mergeConfigs(clone(upstreamConf), config);\n        if (!newUpstreamConf) {\n            throw new Error('Problem merging configs');\n        }\n        const includes = fillTemplates(regularizeIncludes(config.include || []), newUpstreamConf);\n        delete config.include;\n        const loads = includes.map(async (include) => {\n            include.cacheBuster = inputConfig.cacheBuster;\n            const includedData = await fetchConfigFile({\n                uri: new URL(include.url, sourceUrl).href,\n                locationType: 'UriLocation',\n            });\n            return loadRecur(includedData, newUpstreamConf);\n        });\n        const includedDataObjects = await Promise.all(loads);\n        includedDataObjects.forEach((includedData) => {\n            config = mergeConfigs(config, includedData) || config;\n        });\n        return config;\n    }\n    return loadRecur(inputConfig, {});\n}\nfunction regularizeIncludes(includes) {\n    if (!includes) {\n        return [];\n    }\n    // coerce include to an array\n    if (!Array.isArray(includes)) {\n        includes = [includes];\n    }\n    return includes.map((include) => {\n        // coerce bare strings in the includes to URLs\n        if (typeof include === 'string') {\n            include = { url: include };\n        }\n        // set defaults for format and version\n        if (!('format' in include)) {\n            include.format = include.url.endsWith('.conf') ? 'conf' : 'JB_json';\n        }\n        if (include.format === 'JB_json' && !('version' in include)) {\n            include.version = 1;\n        }\n        return include;\n    });\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/no-unnecessary-type-constraint\nfunction fillTemplates(subconfig, config) {\n    if (!subconfig) {\n        return subconfig;\n    }\n    if (Array.isArray(subconfig)) {\n        for (let i = 0; i < subconfig.length; i += 1) {\n            subconfig[i] = fillTemplates(subconfig[i], config);\n        }\n    }\n    else if (typeof subconfig === 'object') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const sub = subconfig;\n        for (const name of Object.keys(sub)) {\n            sub[name] = fillTemplates(sub[name], config);\n        }\n    }\n    else if (typeof subconfig === 'string') {\n        // @ts-expect-error\n        return fillTemplate(subconfig, config);\n    }\n    return subconfig;\n}\n/**\n * list of config properties that should not be recursively merged\n * @param propName - name of config property\n */\nfunction noRecursiveMerge(propName) {\n    return propName === 'datasets';\n}\nconst configDefaults = {\n    tracks: [],\n    containerID: 'GenomeBrowser',\n    dataRoot: 'data',\n    show_tracklist: true,\n    show_nav: true,\n    show_menu: true,\n    show_overview: true,\n    show_fullviewlink: true,\n    update_browser_title: true,\n    updateBrowserURL: true,\n    refSeqs: '{dataRoot}/seq/refSeqs.json',\n    include: ['jbrowse.conf', 'jbrowse_conf.json'],\n    nameUrl: '{dataRoot}/names/root.json',\n    datasets: {\n        _DEFAULT_EXAMPLES: true,\n        volvox: { url: '?data=sample_data/json/volvox', name: 'Volvox Example' },\n        modencode: {\n            url: '?data=sample_data/json/modencode',\n            name: 'MODEncode Example',\n        },\n        yeast: { url: '?data=sample_data/json/yeast', name: 'Yeast Example' },\n    },\n    highlightSearchedRegions: false,\n    highResolutionMode: 'auto',\n};\n/**\n * Examine the loaded and merged configuration for errors.  Throws\n * exceptions if it finds anything amiss.\n * @returns nothing meaningful\n */\nfunction validateConfig(config) {\n    if (!config.tracks) {\n        config.tracks = [];\n    }\n    if (!config.baseUrl) {\n        throw new Error('Must provide a `baseUrl` in configuration');\n    }\n}\n","/*!\n * get-value <https://github.com/jonschlinkert/get-value>\n *\n * Copyright (c) 2014-2018, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nconst isObject = require('isobject');\n\nmodule.exports = function(target, path, options) {\n  if (!isObject(options)) {\n    options = { default: options };\n  }\n\n  if (!isValidObject(target)) {\n    return typeof options.default !== 'undefined' ? options.default : target;\n  }\n\n  if (typeof path === 'number') {\n    path = String(path);\n  }\n\n  const isArray = Array.isArray(path);\n  const isString = typeof path === 'string';\n  const splitChar = options.separator || '.';\n  const joinChar = options.joinChar || (typeof splitChar === 'string' ? splitChar : '.');\n\n  if (!isString && !isArray) {\n    return target;\n  }\n\n  if (isString && path in target) {\n    return isValid(path, target, options) ? target[path] : options.default;\n  }\n\n  let segs = isArray ? path : split(path, splitChar, options);\n  let len = segs.length;\n  let idx = 0;\n\n  do {\n    let prop = segs[idx];\n    if (typeof prop === 'number') {\n      prop = String(prop);\n    }\n\n    while (prop && prop.slice(-1) === '\\\\') {\n      prop = join([prop.slice(0, -1), segs[++idx] || ''], joinChar, options);\n    }\n\n    if (prop in target) {\n      if (!isValid(prop, target, options)) {\n        return options.default;\n      }\n\n      target = target[prop];\n    } else {\n      let hasProp = false;\n      let n = idx + 1;\n\n      while (n < len) {\n        prop = join([prop, segs[n++]], joinChar, options);\n\n        if ((hasProp = prop in target)) {\n          if (!isValid(prop, target, options)) {\n            return options.default;\n          }\n\n          target = target[prop];\n          idx = n - 1;\n          break;\n        }\n      }\n\n      if (!hasProp) {\n        return options.default;\n      }\n    }\n  } while (++idx < len && isValidObject(target));\n\n  if (idx === len) {\n    return target;\n  }\n\n  return options.default;\n};\n\nfunction join(segs, joinChar, options) {\n  if (typeof options.join === 'function') {\n    return options.join(segs);\n  }\n  return segs[0] + joinChar + segs[1];\n}\n\nfunction split(path, splitChar, options) {\n  if (typeof options.split === 'function') {\n    return options.split(path);\n  }\n  return path.split(splitChar);\n}\n\nfunction isValid(key, target, options) {\n  if (typeof options.isValid === 'function') {\n    return options.isValid(key, target);\n  }\n  return true;\n}\n\nfunction isValidObject(val) {\n  return isObject(val) || Array.isArray(val) || typeof val === 'function';\n}\n","/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar isObject = require('isobject');\n\nfunction isObjectObject(o) {\n  return isObject(o) === true\n    && Object.prototype.toString.call(o) === '[object Object]';\n}\n\nmodule.exports = function isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObjectObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (typeof ctor !== 'function') return false;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObjectObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n};\n","/*!\n * is-primitive <https://github.com/jonschlinkert/is-primitive>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isPrimitive(val) {\n  if (typeof val === 'object') {\n    return val === null;\n  }\n  return typeof val !== 'function';\n};\n","/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isObject(val) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n};\n","/*!\n * set-value <https://github.com/jonschlinkert/set-value>\n *\n * Copyright (c) Jon Schlinkert (https://github.com/jonschlinkert).\n * Released under the MIT License.\n */\n\n'use strict';\n\nconst { deleteProperty } = Reflect;\nconst isPrimitive = require('is-primitive');\nconst isPlainObject = require('is-plain-object');\n\nconst isObject = value => {\n  return (typeof value === 'object' && value !== null) || typeof value === 'function';\n};\n\nconst isUnsafeKey = key => {\n  return key === '__proto__' || key === 'constructor' || key === 'prototype';\n};\n\nconst validateKey = key => {\n  if (!isPrimitive(key)) {\n    throw new TypeError('Object keys must be strings or symbols');\n  }\n\n  if (isUnsafeKey(key)) {\n    throw new Error(`Cannot set unsafe key: \"${key}\"`);\n  }\n};\n\nconst toStringKey = input => {\n  return Array.isArray(input) ? input.flat().map(String).join(',') : input;\n};\n\nconst createMemoKey = (input, options) => {\n  if (typeof input !== 'string' || !options) return input;\n  let key = input + ';';\n  if (options.arrays !== undefined) key += `arrays=${options.arrays};`;\n  if (options.separator !== undefined) key += `separator=${options.separator};`;\n  if (options.split !== undefined) key += `split=${options.split};`;\n  if (options.merge !== undefined) key += `merge=${options.merge};`;\n  if (options.preservePaths !== undefined) key += `preservePaths=${options.preservePaths};`;\n  return key;\n};\n\nconst memoize = (input, options, fn) => {\n  const key = toStringKey(options ? createMemoKey(input, options) : input);\n  validateKey(key);\n\n  const value = setValue.cache.get(key) || fn();\n  setValue.cache.set(key, value);\n  return value;\n};\n\nconst splitString = (input, options = {}) => {\n  const sep = options.separator || '.';\n  const preserve = sep === '/' ? false : options.preservePaths;\n\n  if (typeof input === 'string' && preserve !== false && /\\//.test(input)) {\n    return [input];\n  }\n\n  const parts = [];\n  let part = '';\n\n  const push = part => {\n    let number;\n    if (part.trim() !== '' && Number.isInteger((number = Number(part)))) {\n      parts.push(number);\n    } else {\n      parts.push(part);\n    }\n  };\n\n  for (let i = 0; i < input.length; i++) {\n    const value = input[i];\n\n    if (value === '\\\\') {\n      part += input[++i];\n      continue;\n    }\n\n    if (value === sep) {\n      push(part);\n      part = '';\n      continue;\n    }\n\n    part += value;\n  }\n\n  if (part) {\n    push(part);\n  }\n\n  return parts;\n};\n\nconst split = (input, options) => {\n  if (options && typeof options.split === 'function') return options.split(input);\n  if (typeof input === 'symbol') return [input];\n  if (Array.isArray(input)) return input;\n  return memoize(input, options, () => splitString(input, options));\n};\n\nconst assignProp = (obj, prop, value, options) => {\n  validateKey(prop);\n\n  // Delete property when \"value\" is undefined\n  if (value === undefined) {\n    deleteProperty(obj, prop);\n\n  } else if (options && options.merge) {\n    const merge = options.merge === 'function' ? options.merge : Object.assign;\n\n    // Only merge plain objects\n    if (merge && isPlainObject(obj[prop]) && isPlainObject(value)) {\n      obj[prop] = merge(obj[prop], value);\n    } else {\n      obj[prop] = value;\n    }\n\n  } else {\n    obj[prop] = value;\n  }\n\n  return obj;\n};\n\nconst setValue = (target, path, value, options) => {\n  if (!path || !isObject(target)) return target;\n\n  const keys = split(path, options);\n  let obj = target;\n\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const next = keys[i + 1];\n\n    validateKey(key);\n\n    if (next === undefined) {\n      assignProp(obj, key, value, options);\n      break;\n    }\n\n    if (typeof next === 'number' && !Array.isArray(obj[key])) {\n      obj = obj[key] = [];\n      continue;\n    }\n\n    if (!isObject(obj[key])) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  return target;\n};\n\nsetValue.split = split;\nsetValue.cache = new Map();\nsetValue.clear = () => {\n  setValue.cache = new Map();\n};\n\nmodule.exports = setValue;\n"],"names":["isTrack","arg","label","deepUpdate","a","b","prop","Object","keys","undefined","clone","src","prototype","toString","call","nodeType","cloneNode","Date","getTime","RegExp","r","i","l","Array","isArray","length","constructor","dest","source","copyFunc","name","s","empty","mixin","parseJB1Conf","config","url","parsedConf","text","keyPath","operation","value","section","data","tracks","lineNumber","recordVal","parsedValue","match","JSON","parse","test","parseFloat","replaceAll","Error","concat","join","path","existing","getValue","push","setValue","e","split","forEach","textLine","line","replace","trim","toLowerCase","varName","isAlwaysArray","error","regularizeConf","conf","track","meta","trackMetadata","sources","map","sourceDef","newSourceDef","typeMatch","type","sourceUrl","startsWith","URL","window","location","href","baseUrl","endsWith","addBase","stores","values","names","t","refSeqs","nameUrl","trackConfig","c","store","trackClassName","regularizeClass","synthesizeTrackStoreConfig","histograms","root","className","includes","mainConf","_a","urlTemplate","storeClass","backendVersion","guessStoreClass","console","warn","storeConf","useAsRefSeqStore","refseqs","objectHash","isUriLocation","uri","isLocalPathLocation","localPath","async","fetchJb1","dataRoot","arguments","locationType","baseConfig","include","baseConfigRoot","protocol","dataRootReg","stringify","dataRootLocation","slice","baseProtocol","baseConfigLocation","newConfig","fetchedConfig","fetchConfigFile","mergeConfigs","createFinalConfig","configWithDefaults","configDefaults","finalConfig","inputConfig","loadRecur","upstreamConf","newUpstreamConf","fillTemplates","format","version","regularizeIncludes","loads","cacheBuster","Promise","all","includedData","loadIncludes","validateConfig","result","openLocation","readFile","parseJb1","parseJB1Json","aTracks","bTracks","mergeTrackConfigs","index","bT","aT","subconfig","sub","template","fillWith","fill","callback","v","this","fillTemplate","containerID","show_tracklist","show_nav","show_menu","show_overview","show_fullviewlink","update_browser_title","updateBrowserURL","datasets","_DEFAULT_EXAMPLES","volvox","modencode","yeast","highlightSearchedRegions","highResolutionMode","isObject","require","segs","joinChar","options","isValid","key","target","isValidObject","val","module","exports","default","String","isString","splitChar","separator","len","idx","hasProp","n","isObjectObject","o","ctor","prot","hasOwnProperty","deleteProperty","Reflect","isPrimitive","isPlainObject","validateKey","TypeError","isUnsafeKey","memoize","input","fn","flat","toStringKey","createMemoKey","arrays","merge","preservePaths","cache","get","set","sep","preserve","parts","part","number","Number","isInteger","splitString","assignProp","obj","assign","next","Map","clear"],"sourceRoot":""}