{"version":3,"file":"static/js/8411.a762fa12.chunk.js","mappings":"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","sources":["../node_modules/@jbrowse/plugin-alignments/esm/AlignmentsFeatureDetail/util.js","../node_modules/@jbrowse/plugin-alignments/esm/AlignmentsFeatureDetail/tagInfo.js","../node_modules/@jbrowse/plugin-alignments/esm/AlignmentsFeatureDetail/SuppAlignmentsLocStrings.js","../node_modules/@jbrowse/plugin-alignments/esm/AlignmentsFeatureDetail/LaunchBreakpointSplitViewPanel.js","../node_modules/@jbrowse/plugin-alignments/esm/AlignmentsFeatureDetail/getSAFeatures.js","../node_modules/@jbrowse/plugin-alignments/esm/AlignmentsFeatureDetail/SuppAlignments.js","../node_modules/@jbrowse/plugin-alignments/esm/AlignmentsFeatureDetail/Flags.js","../node_modules/@jbrowse/plugin-alignments/esm/AlignmentsFeatureDetail/PairLink.js","../node_modules/@jbrowse/plugin-alignments/esm/AlignmentsFeatureDetail/Formatter.js","../node_modules/@jbrowse/plugin-alignments/esm/AlignmentsFeatureDetail/AlignmentsFeatureDetail.js"],"sourcesContent":["import { getSession } from '@jbrowse/core/util';\nexport function getTag(tag, feat) {\n    var _a;\n    return ((_a = feat.tags) === null || _a === void 0 ? void 0 : _a[tag]) || feat[tag];\n}\nexport async function navToLoc(locString, model) {\n    const session = getSession(model);\n    const { view } = model;\n    try {\n        if (view) {\n            await view.navToLocString(locString);\n        }\n        else {\n            throw new Error('No view associated with this view anymore');\n        }\n    }\n    catch (e) {\n        console.error(e);\n        session.notify(`${e}`);\n    }\n}\n","export const tags = {\n    AM: 'The smallest template-independent mapping quality in the template',\n    AS: 'Alignment score generated by aligner',\n    BC: 'Barcode sequence identifying the sample',\n    BQ: 'Offset to base alignment quality (BAQ)',\n    BZ: 'Phred quality of the unique molecular barcode bases in the {OX} tag',\n    CB: 'Cell identifier',\n    CC: 'Reference name of the next hit',\n    CM: 'Edit distance between the color sequence and the color reference (see also {NM})',\n    CO: 'Free-text comments',\n    CP: 'Leftmost coordinate of the next hit',\n    CQ: 'Color read base qualities',\n    CR: 'Cellular barcode sequence bases (uncorrected)',\n    CS: 'Color read sequence',\n    CT: 'Complete read annotation tag, used for consensus annotation dummy features',\n    CY: 'Phred quality of the cellular barcode sequence in the {CR} tag',\n    E2: 'The 2nd most likely base calls',\n    FI: 'The index of segment in the template',\n    FS: 'Segment suffix',\n    FZ: 'Flow signal intensities',\n    GC: 'Reserved for backwards compatibility reasons',\n    GQ: 'Reserved for backwards compatibility reasons',\n    GS: 'Reserved for backwards compatibility reasons',\n    H0: 'Number of perfect hits',\n    H1: 'Number of 1-difference hits (see also {NM})',\n    H2: 'Number of 2-difference hits',\n    HI: 'Query hit index',\n    IH: 'Query hit total count',\n    LB: 'Library',\n    MC: 'CIGAR string for mate/next segment',\n    MD: 'String encoding mismatched and deleted reference bases',\n    MF: 'Reserved for backwards compatibility reasons',\n    MI: 'Molecular identifier; a string that uniquely identifies the molecule from which the record was derived',\n    ML: 'Base modification probabilities',\n    MM: 'Base modifications / methylation ',\n    MQ: 'Mapping quality of the mate/next segment',\n    NH: 'Number of reported alignments that contain the query in the current record',\n    NM: 'Edit distance to the reference',\n    OA: 'Original alignment',\n    OC: 'Original CIGAR (deprecated; use {OA} instead)',\n    OP: 'Original mapping position (deprecated; use {OA} instead)',\n    OQ: 'Original base quality',\n    OX: 'Original unique molecular barcode bases',\n    PG: 'Program',\n    PQ: 'Phred likelihood of the template',\n    PT: 'Read annotations for parts of the padded read sequence',\n    PU: 'Platform unit',\n    Q2: 'Phred quality of the mate/next segment sequence in the {R2} tag',\n    QT: 'Phred quality of the sample barcode sequence in the {BC} tag',\n    QX: 'Quality score of the unique molecular identifier in the {RX} tag',\n    R2: 'Sequence of the mate/next segment in the template',\n    RG: 'Read group',\n    RT: 'Reserved for backwards compatibility reasons',\n    RX: 'Sequence bases of the (possibly corrected) unique molecular identifier',\n    S2: 'Reserved for backwards compatibility reasons',\n    SA: 'Other canonical alignments in a chimeric alignment',\n    SM: 'Template-independent mapping quality',\n    SQ: 'Reserved for backwards compatibility reasons',\n    TC: 'The number of segments in the template',\n    TS: 'Transcript strand',\n    U2: 'Phred probability of the 2nd call being wrong conditional on the best being wrong',\n    UQ: 'Phred likelihood of the segment, conditional on the mapping being correct',\n};\n","import React from 'react';\nimport { Typography, Link } from '@mui/material';\n// locals\nimport { getLengthOnRef } from '../MismatchParser';\nimport { navToLoc } from './util';\nexport default function SuppAlignmentsLocStrings({ tag, model, }) {\n    return (React.createElement(\"div\", null,\n        React.createElement(Typography, null, \"List of supplementary alignment locations\"),\n        React.createElement(\"ul\", null, tag\n            .split(';')\n            .filter(SA => !!SA)\n            .map((SA, index) => {\n            const [saRef, saStart, saStrand, saCigar] = SA.split(',');\n            const saLength = getLengthOnRef(saCigar);\n            const extra = Math.floor(saLength / 5);\n            const start = +saStart;\n            const end = +saStart + saLength;\n            const sp = start - extra;\n            const ep = end + extra;\n            const locString = `${saRef}:${Math.max(1, sp)}-${ep}`;\n            const displayStart = start.toLocaleString('en-US');\n            const displayEnd = end.toLocaleString('en-US');\n            const displayString = `${saRef}:${displayStart}-${displayEnd} (${saStrand}) [${saLength}bp]`;\n            return (React.createElement(\"li\", { key: `${locString}-${index}` },\n                React.createElement(Link, { onClick: async (event) => {\n                        event.preventDefault();\n                        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n                        navToLoc(locString, model);\n                    } }, displayString)));\n        }))));\n}\n","import React, { lazy, useEffect, useState } from 'react';\nimport { Typography, Link, Tooltip } from '@mui/material';\nimport { SimpleFeature, getSession, toLocale, } from '@jbrowse/core/util';\nimport { makeStyles } from 'tss-react/mui';\nimport { ErrorMessage } from '@jbrowse/core/ui';\nimport { getSAFeatures } from './getSAFeatures';\n// lazies\nconst BreakendOptionDialog = lazy(() => import('./BreakendOptionDialog'));\nconst useStyles = makeStyles()({\n    cursor: {\n        cursor: 'pointer',\n    },\n});\nexport default function LaunchBreakpointSplitViewPanel({ model, feature, viewType, }) {\n    const { classes } = useStyles();\n    const session = getSession(model);\n    const { view } = model;\n    const [res, setRes] = useState();\n    const [error, setError] = useState();\n    useEffect(() => {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        ;\n        (async () => {\n            try {\n                const feats = await getSAFeatures({\n                    view,\n                    feature: new SimpleFeature(feature),\n                });\n                setRes(feats);\n            }\n            catch (e) {\n                setError(e);\n                console.error(e);\n            }\n        })();\n    }, [feature, view]);\n    const ret = [];\n    if (res) {\n        for (let i = 0; i < res.length - 1; i++) {\n            ret.push([res[i], res[i + 1]]);\n        }\n    }\n    return (React.createElement(React.Fragment, null, ret.length ? (React.createElement(\"div\", null,\n        React.createElement(Typography, null, \"Launch split views with breakend source and target\"),\n        error ? React.createElement(ErrorMessage, { error: error }) : null,\n        React.createElement(\"ul\", null, ret.map((arg, index) => {\n            const [f1, f2] = arg;\n            return (React.createElement(\"li\", { key: `${JSON.stringify(arg)}-${index}` },\n                React.createElement(Tooltip, { title: \"Top panel->Bottom panel\" },\n                    React.createElement(Link, { href: \"#\", className: classes.cursor, onClick: event => {\n                            event.preventDefault();\n                            session.queueDialog(handleClose => [\n                                BreakendOptionDialog,\n                                { handleClose, f1, f2, model, viewType },\n                            ]);\n                        } },\n                        f1.refName,\n                        \":\",\n                        toLocale(f1.strand === 1 ? f1.end : f1.start),\n                        \" ->\",\n                        ' ',\n                        f2.refName,\n                        \":\",\n                        toLocale(f2.strand === 1 ? f2.start : f2.end)))));\n        })))) : null));\n}\n","import { getSession } from '@jbrowse/core/util';\n// locals\nimport { featurizeSA, getClip, getLengthSansClipping } from '../MismatchParser';\nimport { getTag } from '../util';\nexport async function getSAFeatures({ view, feature, }) {\n    const { assemblyManager } = getSession(view);\n    const cigar = feature.get('CIGAR');\n    const origStrand = feature.get('strand');\n    const SA = getTag(feature, 'SA') || '';\n    const readName = feature.get('name');\n    const clipPos = getClip(cigar, 1);\n    // get the canonical refname for the read because if the\n    // read.get('refName') is chr1 and the actual fasta refName is 1 then no\n    // tracks can be opened on the top panel of the linear read vs ref\n    const assembly = await assemblyManager.waitForAssembly(view.assemblyNames[0]);\n    if (!assembly) {\n        throw new Error('assembly not found');\n    }\n    const suppAlns = featurizeSA(SA, feature.id(), origStrand, readName, true);\n    const feat = feature.toJSON();\n    feat.clipPos = clipPos;\n    feat.strand = 1;\n    feat.mate = {\n        refName: readName,\n        start: clipPos,\n        end: clipPos + getLengthSansClipping(cigar),\n    };\n    const features = [feat, ...suppAlns];\n    features.forEach((f, idx) => {\n        f.refName = (assembly === null || assembly === void 0 ? void 0 : assembly.getCanonicalRefName(f.refName)) || f.refName;\n        f.syntenyId = idx;\n        f.mate.syntenyId = idx;\n        f.mate.uniqueId = `${f.uniqueId}_mate`;\n    });\n    features.sort((a, b) => a.clipPos - b.clipPos);\n    return features;\n}\n","import React from 'react';\nimport { BaseCard } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail';\nimport { getEnv, getSession } from '@jbrowse/core/util';\nimport SuppAlignmentsLocStrings from './SuppAlignmentsLocStrings';\nimport LaunchBreakpointSplitViewPanel from './LaunchBreakpointSplitViewPanel';\nexport default function SuppAlignments(props) {\n    const { model, tag, feature } = props;\n    const session = getSession(model);\n    const { pluginManager } = getEnv(session);\n    let viewType;\n    try {\n        viewType = pluginManager.getViewType('BreakpointSplitView');\n    }\n    catch (e) {\n        // ignore\n    }\n    return (React.createElement(BaseCard, { ...props, title: \"Supplementary alignments\" },\n        React.createElement(SuppAlignmentsLocStrings, { model: model, tag: tag }),\n        viewType ? (React.createElement(LaunchBreakpointSplitViewPanel, { viewType: viewType, model: model, feature: feature })) : null));\n}\n","import React from 'react';\nimport { Checkbox, FormControlLabel, FormGroup } from '@mui/material';\nimport { makeStyles } from 'tss-react/mui';\nimport { BaseCard } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail';\nimport SimpleField from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/SimpleField';\nconst useStyles = makeStyles()({\n    compact: {\n        paddingRight: 0,\n        paddingTop: 0,\n        paddingBottom: 0,\n    },\n});\nconst flagNames = [\n    'read paired',\n    'read mapped in proper pair',\n    'read unmapped',\n    'mate unmapped',\n    'read reverse strand',\n    'mate reverse strand',\n    'first in pair',\n    'second in pair',\n    'not primary alignment',\n    'read fails platform/vendor quality checks',\n    'read is PCR or optical duplicate',\n    'supplementary alignment',\n];\nexport default function AlignmentFlags(props) {\n    const { classes } = useStyles();\n    const { feature } = props;\n    const { flags } = feature;\n    return (React.createElement(BaseCard, { ...props, title: \"Flags\" },\n        React.createElement(SimpleField, { name: \"Flag\", value: flags }),\n        React.createElement(FormGroup, null, flagNames.map((name, idx) => {\n            const val = flags & (1 << idx);\n            const key = `${name}_${val}`;\n            return (React.createElement(FormControlLabel, { key: key, control: React.createElement(Checkbox, { className: classes.compact, checked: Boolean(val), name: name, readOnly: true }), label: name }));\n        }))));\n}\n","import React from 'react';\nimport { Link } from '@mui/material';\nimport { navToLoc } from './util';\nexport default function PairLink({ locString, model, }) {\n    return (React.createElement(Link, { onClick: event => {\n            event.preventDefault();\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            navToLoc(locString, model);\n        }, href: \"#\" }, locString));\n}\n","import React, { useState } from 'react';\nimport copy from 'copy-to-clipboard';\n// this 'show more...' used specifically as a formatter on alignments feature\n// details because long SEQ or CRAM files, even a single div full of a ton of\n// data from a long read, can slow down the rest of the app\nexport default function Formatter({ value }) {\n    const [show, setShow] = useState(false);\n    const [copied, setCopied] = useState(false);\n    const display = String(value);\n    return display.length > 100 ? (React.createElement(React.Fragment, null,\n        React.createElement(\"button\", { type: \"button\", onClick: () => {\n                copy(display);\n                setCopied(true);\n                setTimeout(() => setCopied(false), 700);\n            } }, copied ? 'Copied to clipboard' : 'Copy'),\n        React.createElement(\"button\", { type: \"button\", onClick: () => setShow(val => !val) }, show ? 'Show less' : 'Show more'),\n        React.createElement(\"div\", null, show ? display : `${display.slice(0, 100)}...`))) : (React.createElement(\"div\", null, display));\n}\n","import React from 'react';\nimport { Paper } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport clone from 'clone';\nimport { FeatureDetails } from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail';\n// locals\nimport { getTag } from './util';\nimport { tags } from './tagInfo';\n// local components\nimport SuppAlignments from './SuppAlignments';\nimport Flags from './Flags';\nimport PairLink from './PairLink';\nimport Formatter from './Formatter';\nconst omit = ['clipPos', 'flags'];\nconst AlignmentsFeatureDetails = observer(function (props) {\n    const { model } = props;\n    const feat = clone(model.featureData);\n    const SA = getTag('SA', feat);\n    return (React.createElement(Paper, { \"data-testid\": \"alignment-side-drawer\" },\n        React.createElement(FeatureDetails, { ...props, omit: omit, \n            // @ts-expect-error\n            descriptions: { ...tags, tags: tags }, feature: feat, formatter: (value, key) => key === 'next_segment_position' ? (React.createElement(PairLink, { model: model, locString: value })) : (React.createElement(Formatter, { value: value })) }),\n        SA ? React.createElement(SuppAlignments, { model: model, tag: SA, feature: feat }) : null,\n        feat.flags !== undefined ? React.createElement(Flags, { feature: feat, ...props }) : null));\n});\nexport default AlignmentsFeatureDetails;\n"],"names":["async","navToLoc","locString","model","session","getSession","view","Error","navToLocString","e","console","error","notify","concat","tags","AM","AS","BC","BQ","BZ","CB","CC","CM","CO","CP","CQ","CR","CS","CT","CY","E2","FI","FS","FZ","GC","GQ","GS","H0","H1","H2","HI","IH","LB","MC","MD","MF","MI","ML","MM","MQ","NH","NM","OA","OC","OP","OQ","OX","PG","PQ","PT","PU","Q2","QT","QX","R2","RG","RT","RX","S2","SA","SM","SQ","TC","TS","U2","UQ","SuppAlignmentsLocStrings","_ref","tag","React","Typography","split","filter","map","index","saRef","saStart","saStrand","saCigar","saLength","getLengthOnRef","extra","Math","floor","start","end","sp","ep","max","displayStart","toLocaleString","displayEnd","displayString","key","Link","onClick","event","preventDefault","BreakendOptionDialog","lazy","useStyles","makeStyles","cursor","LaunchBreakpointSplitViewPanel","feature","viewType","classes","res","setRes","useState","setError","useEffect","feats","assemblyManager","cigar","get","origStrand","getTag","readName","clipPos","getClip","assembly","waitForAssembly","assemblyNames","suppAlns","featurizeSA","id","feat","toJSON","strand","mate","refName","getLengthSansClipping","features","forEach","f","idx","getCanonicalRefName","syntenyId","uniqueId","sort","a","b","getSAFeatures","SimpleFeature","ret","i","length","push","ErrorMessage","arg","f1","f2","JSON","stringify","Tooltip","title","href","className","queueDialog","handleClose","toLocale","SuppAlignments","props","pluginManager","getEnv","getViewType","BaseCard","compact","paddingRight","paddingTop","paddingBottom","flagNames","AlignmentFlags","flags","SimpleField","name","value","FormGroup","val","FormControlLabel","control","Checkbox","checked","Boolean","readOnly","label","PairLink","Formatter","show","setShow","copied","setCopied","display","String","type","copy","setTimeout","slice","omit","observer","clone","featureData","_a","Paper","FeatureDetails","descriptions","formatter","undefined","Flags"],"sourceRoot":""}