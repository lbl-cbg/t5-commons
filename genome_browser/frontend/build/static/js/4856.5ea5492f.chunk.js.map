{"version":3,"file":"static/js/4856.5ea5492f.chunk.js","mappings":"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","sources":["../node_modules/@jbrowse/plugin-data-management/esm/HierarchicalTrackSelectorWidget/components/faceted/FacetedHeader.js","../node_modules/@jbrowse/plugin-data-management/esm/HierarchicalTrackSelectorWidget/components/faceted/FacetFilter.js","../node_modules/@jbrowse/plugin-data-management/esm/HierarchicalTrackSelectorWidget/components/faceted/FacetFilters.js","../node_modules/@jbrowse/plugin-data-management/esm/HierarchicalTrackSelectorWidget/components/faceted/FacetedSelector.js","../node_modules/@jbrowse/plugin-data-management/esm/HierarchicalTrackSelectorWidget/components/faceted/FacetedDialog.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Grid, IconButton, InputAdornment, TextField } from '@mui/material';\nimport { Menu } from '@jbrowse/core/ui';\n// icons\nimport ClearIcon from '@mui/icons-material/Clear';\nimport MoreVert from '@mui/icons-material/MoreVert';\n// locals\nimport ShoppingCart from '../ShoppingCart';\nexport default function FacetedHeader({ model, }) {\n    const { faceted } = model;\n    const [anchorEl, setAnchorEl] = useState(null);\n    const { showOptions, showFilters, showSparse, useShoppingCart } = faceted;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Grid, { container: true, spacing: 4, alignItems: \"center\" },\n            React.createElement(Grid, { item: true },\n                React.createElement(TextField, { label: \"Search...\", value: faceted.filterText, onChange: event => faceted.setFilterText(event.target.value), InputProps: {\n                        endAdornment: (React.createElement(InputAdornment, { position: \"end\" },\n                            React.createElement(IconButton, { onClick: () => faceted.setFilterText('') },\n                                React.createElement(ClearIcon, null)))),\n                    } })),\n            React.createElement(Grid, { item: true },\n                React.createElement(IconButton, { onClick: event => setAnchorEl(event.currentTarget) },\n                    React.createElement(MoreVert, null))),\n            React.createElement(Grid, { item: true },\n                React.createElement(ShoppingCart, { model: model }))),\n        React.createElement(Menu, { anchorEl: anchorEl, open: !!anchorEl, onClose: () => setAnchorEl(null), onMenuItemClick: (_event, callback) => {\n                callback();\n                setAnchorEl(null);\n            }, menuItems: [\n                {\n                    label: 'Add tracks to selection instead of turning them on/off',\n                    onClick: () => faceted.setUseShoppingCart(!useShoppingCart),\n                    type: 'checkbox',\n                    checked: useShoppingCart,\n                },\n                {\n                    label: 'Show sparse metadata columns',\n                    onClick: () => faceted.setShowSparse(!showSparse),\n                    checked: showSparse,\n                    type: 'checkbox',\n                },\n                {\n                    label: 'Show facet filters',\n                    onClick: () => faceted.setShowFilters(!showFilters),\n                    checked: showFilters,\n                    type: 'checkbox',\n                },\n                {\n                    label: 'Show extra table options',\n                    onClick: () => faceted.setShowOptions(!showOptions),\n                    checked: showOptions,\n                    type: 'checkbox',\n                },\n            ] })));\n}\n","import React, { useState } from 'react';\nimport { Typography, FormControl, Select, IconButton, Tooltip, } from '@mui/material';\nimport { makeStyles } from 'tss-react/mui';\n// icon\nimport ClearIcon from '@mui/icons-material/Clear';\nimport MinimizeIcon from '@mui/icons-material/Minimize';\nimport AddIcon from '@mui/icons-material/Add';\nimport { coarseStripHTML } from '@jbrowse/core/util';\nimport { observer } from 'mobx-react';\nconst useStyles = makeStyles()(theme => ({\n    facet: {\n        margin: 0,\n        marginLeft: theme.spacing(2),\n    },\n    select: {\n        marginBottom: theme.spacing(2),\n    },\n}));\nfunction ClearButton({ onClick }) {\n    return (React.createElement(Tooltip, { title: \"Clear selection on this facet filter\" },\n        React.createElement(IconButton, { onClick: () => onClick(), size: \"small\" },\n            React.createElement(ClearIcon, null))));\n}\nfunction ExpandButton({ visible, onClick, }) {\n    return (React.createElement(Tooltip, { title: \"Minimize/expand this facet filter\" },\n        React.createElement(IconButton, { onClick: () => onClick(), size: \"small\" }, visible ? React.createElement(MinimizeIcon, null) : React.createElement(AddIcon, null))));\n}\nconst FacetFilter = observer(function ({ column, vals, model, }) {\n    const { classes } = useStyles();\n    const [visible, setVisible] = useState(true);\n    const { faceted } = model;\n    const { filters } = faceted;\n    const { field } = column;\n    return (React.createElement(FormControl, { className: classes.facet, fullWidth: true },\n        React.createElement(\"div\", null,\n            React.createElement(Typography, { component: \"span\" }, field),\n            React.createElement(ClearButton, { onClick: () => faceted.setFilter(field, []) }),\n            React.createElement(ExpandButton, { visible: visible, onClick: () => setVisible(!visible) })),\n        visible ? (React.createElement(Select, { multiple: true, native: true, className: classes.select, value: filters.get(column.field) || [], onChange: event => {\n                faceted.setFilter(column.field, \n                // @ts-expect-error\n                [...event.target.options]\n                    .filter(opt => opt.selected)\n                    .map(opt => opt.value));\n            } }, vals\n            .sort((a, b) => a[0].localeCompare(b[0]))\n            .map(([name, count]) => (React.createElement(\"option\", { key: name, value: name },\n            coarseStripHTML(name),\n            \" (\",\n            count,\n            \")\"))))) : null));\n});\nexport default FacetFilter;\n","import React from 'react';\nimport { observer } from 'mobx-react';\n// locals\nimport FacetFilter from './FacetFilter';\nimport { getRowStr } from './util';\nconst FacetFilters = observer(function ({ rows, columns, model, }) {\n    var _a, _b;\n    const { faceted } = model;\n    const { filters } = faceted;\n    const facets = columns.slice(1);\n    const uniqs = new Map(facets.map(f => [f.field, new Map()]));\n    // this code \"stages the facet filters\" in order that the user has selected\n    // them, which relies on the js behavior that the order of the returned keys is\n    // related to the insertion order.\n    const filterKeys = faceted.filters.keys();\n    const facetKeys = facets.map(f => f.field);\n    const ret = new Set();\n    for (const entry of filterKeys) {\n        // give non-empty filters priority\n        if ((_a = filters.get(entry)) === null || _a === void 0 ? void 0 : _a.length) {\n            ret.add(entry);\n        }\n    }\n    for (const entry of facetKeys) {\n        ret.add(entry);\n    }\n    let currentRows = rows;\n    for (const facet of ret) {\n        const elt = uniqs.get(facet);\n        for (const row of currentRows) {\n            const key = getRowStr(facet, row);\n            const val = elt.get(key);\n            // we don't allow filtering on empty yet\n            if (key) {\n                if (val === undefined) {\n                    elt.set(key, 1);\n                }\n                else {\n                    elt.set(key, val + 1);\n                }\n            }\n        }\n        const filter = ((_b = filters.get(facet)) === null || _b === void 0 ? void 0 : _b.length)\n            ? new Set(filters.get(facet))\n            : undefined;\n        currentRows = currentRows.filter(row => filter !== undefined ? filter.has(getRowStr(facet, row)) : true);\n    }\n    return (React.createElement(\"div\", null, facets.map(c => (React.createElement(FacetFilter, { key: c.field, vals: [...uniqs.get(c.field)], column: c, model: model })))));\n});\nexport default FacetFilters;\n","import React from 'react';\nimport { transaction } from 'mobx';\nimport { observer } from 'mobx-react';\nimport { getRoot, resolveIdentifier } from 'mobx-state-tree';\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\n// jbrowse\nimport { ResizeHandle } from '@jbrowse/core/ui';\nimport SanitizedHTML from '@jbrowse/core/ui/SanitizedHTML';\nimport ResizeBar from '@jbrowse/core/ui/ResizeBar';\nimport { getEnv, useDebounce } from '@jbrowse/core/util';\nimport { useResizeBar } from '@jbrowse/core/ui/useResizeBar';\nimport { makeStyles } from 'tss-react/mui';\nimport FacetedHeader from './FacetedHeader';\nimport FacetFilters from './FacetFilters';\nimport TrackLabelMenu from '../tree/TrackLabelMenu';\nconst useStyles = makeStyles()({\n    cell: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n    resizeHandle: {\n        marginLeft: 5,\n        background: 'grey',\n        width: 5,\n    },\n});\nconst frac = 0.75;\nconst FacetedSelector = observer(function FacetedSelector({ model, }) {\n    var _a;\n    const { classes } = useStyles();\n    const { view, selection, shownTrackIds, faceted } = model;\n    const { rows, panelWidth, showFilters, useShoppingCart, showOptions, filteredRows, filteredNonMetadataKeys, filteredMetadataKeys, visible, widths, } = faceted;\n    const { pluginManager } = getEnv(model);\n    const { ref, scrollLeft } = useResizeBar();\n    const widthsDebounced = useDebounce(widths, 200);\n    const columns = [\n        {\n            field: 'name',\n            hideable: false,\n            renderCell: (params) => {\n                const { value, row } = params;\n                const { id, conf } = row;\n                return (React.createElement(\"div\", { className: classes.cell },\n                    React.createElement(SanitizedHTML, { html: value }),\n                    React.createElement(TrackLabelMenu, { id: id, conf: conf, trackId: id, model: model })));\n            },\n            width: (_a = widthsDebounced.name) !== null && _a !== void 0 ? _a : 100,\n        },\n        ...filteredNonMetadataKeys.map(e => {\n            var _a;\n            return ({\n                field: e,\n                width: (_a = widthsDebounced[e]) !== null && _a !== void 0 ? _a : 100,\n                renderCell: (params) => {\n                    const val = params.value;\n                    return val ? React.createElement(SanitizedHTML, { className: classes.cell, html: val }) : '';\n                },\n            });\n        }),\n        ...filteredMetadataKeys.map(e => {\n            var _a;\n            return ({\n                field: `metadata.${e}`,\n                headerName: ['name', ...filteredNonMetadataKeys].includes(e)\n                    ? `${e} (from metadata)`\n                    : e,\n                width: (_a = widthsDebounced['metadata.' + e]) !== null && _a !== void 0 ? _a : 100,\n                valueGetter: (params) => params.row.metadata[e],\n                renderCell: (params) => {\n                    const val = params.row.metadata[e];\n                    return val ? React.createElement(SanitizedHTML, { className: classes.cell, html: val }) : '';\n                },\n            });\n        }),\n    ];\n    return (React.createElement(React.Fragment, null,\n        React.createElement(FacetedHeader, { model: model }),\n        React.createElement(\"div\", { ref: ref, style: {\n                display: 'flex',\n                overflow: 'hidden',\n                height: window.innerHeight * frac,\n                width: window.innerWidth * frac,\n            } },\n            React.createElement(\"div\", { style: {\n                    height: window.innerHeight * frac,\n                    width: window.innerWidth * frac - (showFilters ? panelWidth : 0),\n                } },\n                React.createElement(ResizeBar, { checkbox: true, widths: Object.values(widths).map(f => f !== null && f !== void 0 ? f : 100), setWidths: newWidths => faceted.setWidths(Object.fromEntries(Object.entries(widths).map((entry, idx) => [\n                        entry[0],\n                        newWidths[idx],\n                    ]))), scrollLeft: scrollLeft }),\n                React.createElement(DataGrid, { rows: filteredRows, columnVisibilityModel: visible, onColumnVisibilityModelChange: n => faceted.setVisible(n), columnHeaderHeight: 35, checkboxSelection: true, disableRowSelectionOnClick: true, keepNonExistentRowsSelected: true, onRowSelectionModelChange: userSelectedIds => {\n                        if (!useShoppingCart) {\n                            const a1 = shownTrackIds;\n                            const a2 = new Set(userSelectedIds);\n                            // synchronize the user selection with the view\n                            // see share https://stackoverflow.com/a/33034768/2129219\n                            transaction(() => {\n                                ;\n                                [...a1].filter(x => !a2.has(x)).map(t => view.hideTrack(t));\n                                [...a2]\n                                    .filter(x => !a1.has(x))\n                                    .map(t => {\n                                    view.showTrack(t);\n                                    model.addToRecentlyUsed(t);\n                                });\n                            });\n                        }\n                        else {\n                            const root = getRoot(model);\n                            const schema = pluginManager.pluggableConfigSchemaType('track');\n                            model.setSelection(userSelectedIds.map(id => resolveIdentifier(schema, root, id)));\n                        }\n                    }, rowSelectionModel: useShoppingCart\n                        ? selection.map(s => s.trackId)\n                        : [...shownTrackIds], slots: { toolbar: showOptions ? GridToolbar : null }, slotProps: {\n                        toolbar: {\n                            printOptions: {\n                                disableToolbarButton: true,\n                            },\n                        },\n                    }, columns: columns, rowHeight: 25 })),\n            showFilters ? (React.createElement(React.Fragment, null,\n                React.createElement(ResizeHandle, { vertical: true, onDrag: dist => faceted.setPanelWidth(panelWidth - dist), className: classes.resizeHandle }),\n                React.createElement(\"div\", { style: { width: panelWidth, overflow: 'auto' } },\n                    React.createElement(FacetFilters, { model: model, rows: rows, columns: columns })))) : null)));\n});\nexport default FacetedSelector;\n","import React from 'react';\nimport { DialogContent } from '@mui/material';\nimport { Dialog } from '@jbrowse/core/ui';\nimport { observer } from 'mobx-react';\nimport FacetedSelector from './FacetedSelector';\nconst FacetedTrackSelectorDialog = observer(function (props) {\n    const { handleClose } = props;\n    return (React.createElement(Dialog, { open: true, onClose: handleClose, maxWidth: \"xl\", title: \"Faceted track selector\" },\n        React.createElement(DialogContent, null,\n            React.createElement(FacetedSelector, { ...props }))));\n});\nexport default FacetedTrackSelectorDialog;\n"],"names":["FacetedHeader","_ref","model","faceted","anchorEl","setAnchorEl","useState","showOptions","showFilters","showSparse","useShoppingCart","React","Grid","container","spacing","alignItems","item","TextField","label","value","filterText","onChange","event","setFilterText","target","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","ClearIcon","currentTarget","MoreVert","ShoppingCart","Menu","open","onClose","onMenuItemClick","_event","callback","menuItems","setUseShoppingCart","type","checked","setShowSparse","setShowFilters","setShowOptions","useStyles","makeStyles","theme","facet","margin","marginLeft","select","marginBottom","ClearButton","Tooltip","title","size","ExpandButton","_ref2","visible","MinimizeIcon","AddIcon","observer","_ref3","column","vals","classes","setVisible","filters","field","FormControl","className","fullWidth","Typography","component","setFilter","Select","multiple","native","get","options","filter","opt","selected","map","sort","a","b","localeCompare","_ref4","name","count","key","coarseStripHTML","rows","columns","_a","_b","facets","slice","uniqs","Map","f","filterKeys","keys","facetKeys","ret","Set","entry","length","add","currentRows","elt","row","getRowStr","val","undefined","set","has","c","FacetFilter","cell","whiteSpace","overflow","textOverflow","resizeHandle","background","width","frac","view","selection","shownTrackIds","panelWidth","filteredRows","filteredNonMetadataKeys","filteredMetadataKeys","widths","pluginManager","getEnv","ref","scrollLeft","useResizeBar","widthsDebounced","useDebounce","hideable","renderCell","params","id","conf","SanitizedHTML","html","TrackLabelMenu","trackId","e","concat","headerName","includes","valueGetter","metadata","style","display","height","window","innerHeight","innerWidth","ResizeBar","checkbox","Object","values","setWidths","newWidths","fromEntries","entries","idx","DataGrid","columnVisibilityModel","onColumnVisibilityModelChange","n","columnHeaderHeight","checkboxSelection","disableRowSelectionOnClick","keepNonExistentRowsSelected","onRowSelectionModelChange","userSelectedIds","root","getRoot","schema","pluggableConfigSchemaType","setSelection","resolveIdentifier","a1","a2","transaction","x","t","hideTrack","showTrack","addToRecentlyUsed","rowSelectionModel","s","slots","toolbar","GridToolbar","slotProps","printOptions","disableToolbarButton","rowHeight","ResizeHandle","vertical","onDrag","dist","setPanelWidth","FacetFilters","props","handleClose","Dialog","maxWidth","DialogContent","FacetedSelector"],"sourceRoot":""}