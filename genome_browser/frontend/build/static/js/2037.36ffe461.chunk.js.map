{"version":3,"file":"static/js/2037.36ffe461.chunk.js","mappings":"6LAKA,MAAMA,UAAkBC,EAAAA,uBACpBC,WAAAA,GACIC,SAASC,WACTC,KAAKC,OAAS,SAClB,CACA,eAAMC,GACF,IAAIC,EACJ,MAAMC,QAA+C,QAA7BD,EAAKH,KAAKK,qBAAkC,IAAPF,OAAgB,EAASA,EAAGG,KAAKN,KAAMA,KAAKO,QAAQ,qBACjH,IAAKH,EACD,MAAM,IAAII,MAAM,4BAEpB,OAAOJ,EAAQK,WACnB,CACA,iBAAMC,GAEF,aADsBV,KAAKE,aACZQ,aACnB,CACAC,WAAAA,CAAYC,EAAOC,GACf,OAAOC,EAAAA,EAAAA,mBAAiBC,UACpB,IAAIZ,EACJ,MAAMa,QAAwBhB,KAAKE,YAC7Be,EAAajB,KAAKO,QAAQ,cAC1BW,EAAclB,KAAKO,QAAQ,eAC3BY,EAAoB,IAAfF,EAAmB,EAAIA,EAAa,EACzCG,EAAmB,IAAfH,EACV,IAAMI,MAAOC,EAAYC,IAAKC,GAAaZ,EAG3C,GAFAU,EAAaG,KAAKC,IAAI,EAAGJ,EAAaH,GACtCK,GAAYL,EACRK,EAAW,GAAKF,EAAaE,EAE7B,YADAG,EAASC,WAGb,MAAMC,EAAMb,EAAgBL,YAAY,IACjCC,EACHS,MAAOC,EACPC,IAAKC,GACNX,GAEGiB,GAAgC,QAAnB3B,SADC4B,EAAAA,EAAAA,GAAeF,EAAIG,MAAKC,EAAAA,EAAAA,QACd,UAAuB,IAAP9B,OAAgB,EAASA,EAAG+B,IAAI,SAAW,GACzF,IAAK,IAAIC,EAAIhB,EAAIgB,EAAIL,EAASM,OAASjB,EAAIgB,GAAKjB,EAAa,CACzD,MAAMmB,EAAIjB,EAAIU,EAASK,GAAKL,EAASQ,MAAMH,EAAIhB,EAAIgB,EAAIhB,GACvD,IAAIoB,EAAK,EACLC,EAAK,EACLC,EAAM,EACV,IAAK,MAAMC,KAAUL,EACF,MAAXK,GAA6B,MAAXA,EAClBH,IAEgB,MAAXG,GAA6B,MAAXA,GACvBF,IAEW,MAAXE,GACAD,IAGR,MAAME,EAAMrB,EACZ,IAAIsB,EACgB,YAAhB5C,KAAKC,OACL2C,GAASJ,EAAKD,IAAOE,GAAO,GAEP,SAAhBzC,KAAKC,SACV2C,GAASJ,EAAKD,IAAOC,EAAKD,GAAM,IAEpCZ,EAASkB,KAAK,IAAIC,EAAAA,cAAc,CAC5BC,SAAU,GAAFC,OAAKhD,KAAKiD,GAAE,KAAAD,OAAIL,EAAMR,GAC9Bd,MAAOsB,EAAMR,EACbZ,IAAKoB,EAAMR,EAAIjB,EACf0B,UAER,CACAjB,EAASC,UAAU,GAE3B,CAMAsB,aAAAA,GAAmC,EAEvCvD,EAAUwD,aAAe,CAAC,iBAC1B,S","sources":["../node_modules/@jbrowse/plugin-gccontent/esm/GCContentAdapter/GCContentAdapter.js"],"sourcesContent":["import { BaseFeatureDataAdapter, } from '@jbrowse/core/data_adapters/BaseAdapter';\nimport { firstValueFrom } from 'rxjs';\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs';\nimport { SimpleFeature } from '@jbrowse/core/util';\nimport { toArray } from 'rxjs/operators';\nclass default_1 extends BaseFeatureDataAdapter {\n    constructor() {\n        super(...arguments);\n        this.gcMode = 'content';\n    }\n    async configure() {\n        var _a;\n        const adapter = await ((_a = this.getSubAdapter) === null || _a === void 0 ? void 0 : _a.call(this, this.getConf('sequenceAdapter')));\n        if (!adapter) {\n            throw new Error('Error getting subadapter');\n        }\n        return adapter.dataAdapter;\n    }\n    async getRefNames() {\n        const adapter = await this.configure();\n        return adapter.getRefNames();\n    }\n    getFeatures(query, opts) {\n        return ObservableCreate(async (observer) => {\n            var _a;\n            const sequenceAdapter = await this.configure();\n            const windowSize = this.getConf('windowSize');\n            const windowDelta = this.getConf('windowDelta');\n            const hw = windowSize === 1 ? 1 : windowSize / 2; // Half the window size\n            const f = windowSize === 1;\n            let { start: queryStart, end: queryEnd } = query;\n            queryStart = Math.max(0, queryStart - hw);\n            queryEnd += hw;\n            if (queryEnd < 0 || queryStart > queryEnd) {\n                observer.complete();\n                return;\n            }\n            const ret = sequenceAdapter.getFeatures({\n                ...query,\n                start: queryStart,\n                end: queryEnd,\n            }, opts);\n            const feats = await firstValueFrom(ret.pipe(toArray()));\n            const residues = ((_a = feats[0]) === null || _a === void 0 ? void 0 : _a.get('seq')) || '';\n            for (let i = hw; i < residues.length - hw; i += windowDelta) {\n                const r = f ? residues[i] : residues.slice(i - hw, i + hw);\n                let nc = 0;\n                let ng = 0;\n                let len = 0;\n                for (const letter of r) {\n                    if (letter === 'c' || letter === 'C') {\n                        nc++;\n                    }\n                    else if (letter === 'g' || letter === 'G') {\n                        ng++;\n                    }\n                    if (letter !== 'N') {\n                        len++;\n                    }\n                }\n                const pos = queryStart;\n                let score;\n                if (this.gcMode === 'content') {\n                    score = (ng + nc) / (len || 1);\n                }\n                else if (this.gcMode === 'skew') {\n                    score = (ng - nc) / (ng + nc || 1);\n                }\n                observer.next(new SimpleFeature({\n                    uniqueId: `${this.id}_${pos + i}`,\n                    start: pos + i,\n                    end: pos + i + windowDelta,\n                    score,\n                }));\n            }\n            observer.complete();\n        });\n    }\n    /**\n     * called to provide a hint that data tied to a certain region\n     * will not be needed for the foreseeable future and can be purged\n     * from caches, etc\n     */\n    freeResources( /* { region } */) { }\n}\ndefault_1.capabilities = ['hasLocalStats'];\nexport default default_1;\n"],"names":["default_1","BaseFeatureDataAdapter","constructor","super","arguments","this","gcMode","configure","_a","adapter","getSubAdapter","call","getConf","Error","dataAdapter","getRefNames","getFeatures","query","opts","ObservableCreate","async","sequenceAdapter","windowSize","windowDelta","hw","f","start","queryStart","end","queryEnd","Math","max","observer","complete","ret","residues","firstValueFrom","pipe","toArray","get","i","length","r","slice","nc","ng","len","letter","pos","score","next","SimpleFeature","uniqueId","concat","id","freeResources","capabilities"],"sourceRoot":""}