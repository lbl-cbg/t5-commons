{"version":3,"file":"static/js/474.1806727a.chunk.js","mappings":"8NAKA,MAAMA,GAAYC,E,SAAAA,aAAAA,CAAa,CAC3BC,KAAM,CACFC,MAAO,OAmBf,GAhB2BC,EAAAA,EAAAA,WAAS,SAAUC,GAC1C,MAAM,MAAEC,EAAK,YAAEC,GAAgBF,GACzB,QAAEG,GAAYR,KACd,UAAES,EAAY,IAAOH,GACpBI,EAAKC,IAAUC,EAAAA,EAAAA,UAAS,GAADC,OAAIJ,IAClC,OAAQK,EAAAA,cAAoBC,EAAAA,OAAQ,CAAEC,MAAM,EAAMC,QAASV,EAAaW,MAAO,kBAC3EJ,EAAAA,cAAoBK,EAAAA,EAAe,CAAEC,UAAWZ,EAAQN,MACpDY,EAAAA,cAAoBO,EAAAA,EAAY,KAAM,4GACtCP,EAAAA,cAAoBQ,EAAAA,EAAW,CAAEC,MAAOb,EAAKc,SAAUC,GAASd,EAAOc,EAAMC,OAAOH,OAAQI,YAAa,gCACzGb,EAAAA,cAAoBc,EAAAA,EAAe,KAC/Bd,EAAAA,cAAoBe,EAAAA,EAAQ,CAAEC,QAAS,YAAaC,MAAO,UAAWC,KAAM,SAAUC,WAAW,EAAMC,QAASA,KACxG5B,EAAM6B,aAAqB,KAARzB,GAAe0B,OAAOC,OAAO3B,QAAc4B,GAAN5B,GACxDH,GAAa,GACZ,UACTO,EAAAA,cAAoBe,EAAAA,EAAQ,CAAEC,QAAS,YAAaC,MAAO,YAAaG,QAASA,IAAM3B,KAAiB,YACxH,G","sources":["../node_modules/@jbrowse/plugin-alignments/esm/LinearPileupDisplay/components/SetMaxHeight.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { Button, DialogActions, DialogContent, TextField, Typography, } from '@mui/material';\nimport { Dialog } from '@jbrowse/core/ui';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()({\n    root: {\n        width: 500,\n    },\n});\nconst SetMaxHeightDialog = observer(function (props) {\n    const { model, handleClose } = props;\n    const { classes } = useStyles();\n    const { maxHeight = '' } = model;\n    const [max, setMax] = useState(`${maxHeight}`);\n    return (React.createElement(Dialog, { open: true, onClose: handleClose, title: \"Filter options\" },\n        React.createElement(DialogContent, { className: classes.root },\n            React.createElement(Typography, null, \"Set max height for the track. For example, you can increase this if the layout says \\\"Max height reached\\\"\"),\n            React.createElement(TextField, { value: max, onChange: event => setMax(event.target.value), placeholder: \"Enter max height for layout\" }),\n            React.createElement(DialogActions, null,\n                React.createElement(Button, { variant: \"contained\", color: \"primary\", type: \"submit\", autoFocus: true, onClick: () => {\n                        model.setMaxHeight(max !== '' && !Number.isNaN(+max) ? +max : undefined);\n                        handleClose();\n                    } }, \"Submit\"),\n                React.createElement(Button, { variant: \"contained\", color: \"secondary\", onClick: () => handleClose() }, \"Cancel\")))));\n});\nexport default SetMaxHeightDialog;\n"],"names":["useStyles","makeStyles","root","width","observer","props","model","handleClose","classes","maxHeight","max","setMax","useState","concat","React","Dialog","open","onClose","title","DialogContent","className","Typography","TextField","value","onChange","event","target","placeholder","DialogActions","Button","variant","color","type","autoFocus","onClick","setMaxHeight","Number","isNaN","undefined"],"sourceRoot":""}