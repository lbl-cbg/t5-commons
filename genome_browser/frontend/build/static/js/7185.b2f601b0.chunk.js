"use strict";(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([[7185],{17185:(e,t,a)=>{a.r(t),a.d(t,{default:()=>u});var r=a(29432),n=a(48591),s=a(50472),o=a(10718),i=a(98518),l=a(19621),c=a(43050);class h extends n.BaseFeatureDataAdapter{constructor(){super(...arguments),this.intervalTrees={}}async loadDataP(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const t=this.pluginManager,a=this.getConf("bedLocation"),n=await(0,s.openLocation)(a,t).readFile(e),o=function(e){return 31===e[0]&&139===e[1]&&8===e[2]}(n)?await(0,c.unzip)(n):n;if(o.length>536870888)throw new Error("Data exceeds maximum string length (512MB)");const i=new TextDecoder("utf8",{fatal:!0}).decode(o).split(/\n|\r\n|\r/).filter((e=>!!e)),l=[];let h=0;for(;h<i.length&&i[h].startsWith("#");h++)l.push(i[h]);const u=l.join("\n"),d={};for(;h<i.length;h++){const e=i[h],t=e.indexOf("\t"),a=e.slice(0,t);d[a]||(d[a]=[]),d[a].push(e)}const f=this.getConf("autoSql");return{header:u,features:d,parser:new r.A({autoSql:f}),columnNames:this.getConf("columnNames"),scoreColumn:this.getConf("scoreColumn"),colRef:this.getConf("colRef"),colStart:this.getConf("colStart"),colEnd:this.getConf("colEnd")}}async loadData(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return this.bedFeatures||(this.bedFeatures=this.loadDataP(e).catch((e=>{throw this.bedFeatures=void 0,e}))),this.bedFeatures}async getRefNames(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{features:t}=await this.loadData(e);return Object.keys(t)}async getHeader(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{header:t}=await this.loadData(e);return t}async getNames(){const{header:e,columnNames:t}=await this.loadData();if(t.length)return t;const a=e.split(/\n|\r\n|\r/).filter((e=>!!e)).at(-1);return(null===a||void 0===a?void 0:a.includes("\t"))?a.slice(1).split("\t").map((e=>e.trim())):void 0}async loadFeatureIntervalTreeHelper(e){const{colRef:t,colStart:a,colEnd:r,features:n,parser:s,scoreColumn:o}=await this.loadData(),c=n[e];if(!c)return;const h=await this.getNames(),u=new l.Ay,d=c.map(((n,l)=>{const c="".concat(this.id,"-").concat(e,"-").concat(l);return(0,i.d)(n,t,a,r,o,s,c,h)}));for(const i of d)u.insert([i.get("start"),i.get("end")],i);return u}async loadFeatureIntervalTree(e){return this.intervalTrees[e]||(this.intervalTrees[e]=this.loadFeatureIntervalTreeHelper(e).catch((t=>{throw this.intervalTrees[e]=void 0,t}))),this.intervalTrees[e]}getFeatures(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return(0,o.ObservableCreate)((async t=>{const{start:a,end:r,refName:n}=e,s=await this.loadFeatureIntervalTree(n);null===s||void 0===s||s.search([a,r]).forEach((e=>t.next(e))),t.complete()}),t.signal)}freeResources(){}}h.capabilities=["getFeatures","getRefNames"];const u=h}}]);
//# sourceMappingURL=7185.b2f601b0.chunk.js.map