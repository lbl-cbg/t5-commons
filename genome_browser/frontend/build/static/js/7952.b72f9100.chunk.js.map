{"version":3,"file":"static/js/7952.b72f9100.chunk.js","mappings":"+NAIA,MAmBA,GAnBwBA,EAAAA,EAAAA,WAAS,SAAUC,GACvC,MAAM,MAAEC,EAAK,YAAEC,GAAgBF,GACxBG,EAAKC,IAAUC,EAAAA,EAAAA,UAAS,IACzBC,EAAWH,EAAII,MAAM,yBAC3B,OAAQC,EAAAA,cAAoBC,EAAAA,OAAQ,CAAEC,MAAM,EAAMC,QAAST,EAAaU,MAAO,eAC3EJ,EAAAA,cAAoBK,EAAAA,EAAe,KAC/BL,EAAAA,cAAoBM,EAAAA,EAAY,KAAM,0BACtCN,EAAAA,cAAoBM,EAAAA,EAAY,CAAEC,MAAO,iBAAmB,uDAC5DP,EAAAA,cAAoBQ,EAAAA,EAAW,CAAEC,MAAOd,EAAKe,SAAUC,GAASf,EAAOe,EAAMC,OAAOH,OAAQI,YAAa,iBAAkBC,WAAY,CAC/HC,UAAW,EACX,cAAe,uBAChBC,MAAsB,IAAfrB,EAAIsB,SAAiBnB,EAAUoB,WAA2B,IAAfvB,EAAIsB,QAAiBnB,EAA+B,GAApB,kBAAwBqB,aAAc,MAAO,cAAe,kBACrJnB,EAAAA,cAAoBoB,EAAAA,EAAe,KAC/BpB,EAAAA,cAAoBqB,EAAAA,EAAQ,CAAEC,QAAS,YAAaf,MAAO,UAAWgB,KAAM,SAAUC,WAAW,EAAMC,QAASA,KACxGhC,EAAMiC,YAAY,MAAO/B,GACzBD,GAAa,GACZ,UACTM,EAAAA,cAAoBqB,EAAAA,EAAQ,CAAEC,QAAS,YAAaf,MAAO,YAAakB,QAASA,IAAM/B,KAAiB,YACxH,G","sources":["../node_modules/@jbrowse/plugin-alignments/esm/LinearPileupDisplay/components/SortByTag.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { Button, DialogActions, DialogContent, TextField, Typography, } from '@mui/material';\nimport { Dialog } from '@jbrowse/core/ui';\nconst SortByTagDialog = observer(function (props) {\n    const { model, handleClose } = props;\n    const [tag, setTag] = useState('');\n    const validTag = tag.match(/^[A-Za-z][A-Za-z0-9]$/);\n    return (React.createElement(Dialog, { open: true, onClose: handleClose, title: \"Sort by tag\" },\n        React.createElement(DialogContent, null,\n            React.createElement(Typography, null, \"Set the tag to sort by\"),\n            React.createElement(Typography, { color: \"textSecondary\" }, \"Examples: HP for haplotype, RG for read group, etc.\"),\n            React.createElement(TextField, { value: tag, onChange: event => setTag(event.target.value), placeholder: \"Enter tag name\", inputProps: {\n                    maxLength: 2,\n                    'data-testid': 'sort-tag-name-input',\n                }, error: tag.length === 2 && !validTag, helperText: tag.length === 2 && !validTag ? 'Not a valid tag' : '', autoComplete: \"off\", \"data-testid\": \"sort-tag-name\" }),\n            React.createElement(DialogActions, null,\n                React.createElement(Button, { variant: \"contained\", color: \"primary\", type: \"submit\", autoFocus: true, onClick: () => {\n                        model.setSortedBy('tag', tag);\n                        handleClose();\n                    } }, \"Submit\"),\n                React.createElement(Button, { variant: \"contained\", color: \"secondary\", onClick: () => handleClose() }, \"Cancel\")))));\n});\nexport default SortByTagDialog;\n"],"names":["observer","props","model","handleClose","tag","setTag","useState","validTag","match","React","Dialog","open","onClose","title","DialogContent","Typography","color","TextField","value","onChange","event","target","placeholder","inputProps","maxLength","error","length","helperText","autoComplete","DialogActions","Button","variant","type","autoFocus","onClick","setSortedBy"],"sourceRoot":""}