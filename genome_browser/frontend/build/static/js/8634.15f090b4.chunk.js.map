{"version":3,"file":"static/js/8634.15f090b4.chunk.js","mappings":"oNAGe,SAASA,EAAgBC,GACpC,MAAM,MAAEC,EAAK,YAAEC,GAAgBF,GACzB,SAAEG,EAAQ,SAAEC,EAAQ,UAAEC,GAAcJ,GACnCK,EAAKC,IAAUC,EAAAA,EAAAA,UAAS,GAADC,OAAIN,IAAaO,OAAOC,UAAYR,EAAW,MACtES,EAAKC,IAAUL,EAAAA,EAAAA,UAAS,GAADC,OAAIL,IAAaM,OAAOI,UAAYV,EAAW,KACvEW,IAAa,KAART,GAAsB,KAARM,IAAeF,OAAOM,OAAOV,KAASI,OAAOM,OAAOJ,MACtEA,GAAON,EAERW,IAAsB,QAAdZ,GAA+B,KAARC,IAAeI,OAAOM,OAAOV,MAAQA,EAAM,EAChF,OAAQY,EAAAA,cAAoBC,EAAAA,OAAQ,CAAEC,MAAM,EAAMC,QAASnB,EAAaoB,MAAO,+BAC3EJ,EAAAA,cAAoBK,EAAAA,EAAe,KAC/BL,EAAAA,cAAoBM,EAAAA,EAAY,KAAM,yBACrCT,EAAoG,KAA9FG,EAAAA,cAAoBM,EAAAA,EAAY,CAAEC,MAAO,SAAW,uCAC1DR,EAAoH,KAA3GC,EAAAA,cAAoBM,EAAAA,EAAY,CAAEC,MAAO,SAAW,oDAC9DP,EAAAA,cAAoBQ,EAAAA,EAAW,CAAEC,MAAOrB,EAAKsB,SAAUC,GAAStB,EAAOsB,EAAMC,OAAOH,OAAQI,YAAa,oBACzGb,EAAAA,cAAoBQ,EAAAA,EAAW,CAAEC,MAAOf,EAAKgB,SAAUC,GAAShB,EAAOgB,EAAMC,OAAOH,OAAQI,YAAa,qBAC7Gb,EAAAA,cAAoBc,EAAAA,EAAe,KAC/Bd,EAAAA,cAAoBe,EAAAA,EAAQ,CAAEC,QAAS,YAAaT,MAAO,UAAWU,KAAM,SAAUC,MAAO,CAAEC,WAAY,IAAMC,UAAWvB,EAAIwB,QAASA,KACjItC,EAAMuC,YAAoB,KAARlC,GAAeI,OAAOM,OAAOV,QAAcmC,GAANnC,GACvDL,EAAMyC,YAAoB,KAAR9B,GAAeF,OAAOM,OAAOJ,QAAc6B,GAAN7B,GACvDV,GAAa,GACZ,WACrB,C","sources":["../node_modules/@jbrowse/plugin-wiggle/esm/shared/SetMinMaxDialog.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, DialogActions, DialogContent, TextField, Typography, } from '@mui/material';\nimport { Dialog } from '@jbrowse/core/ui';\nexport default function SetMinMaxDialog(props) {\n    const { model, handleClose } = props;\n    const { minScore, maxScore, scaleType } = model;\n    const [min, setMin] = useState(`${minScore !== Number.MIN_VALUE ? minScore : ''}`);\n    const [max, setMax] = useState(`${maxScore !== Number.MAX_VALUE ? maxScore : ''}`);\n    const ok = min !== '' && max !== '' && !Number.isNaN(+min) && !Number.isNaN(+max)\n        ? +max > +min\n        : true;\n    const logOk = scaleType === 'log' && min !== '' && !Number.isNaN(+min) ? +min > 0 : true;\n    return (React.createElement(Dialog, { open: true, onClose: handleClose, title: \"Set min/max score for track\" },\n        React.createElement(DialogContent, null,\n            React.createElement(Typography, null, \"Enter min/max score: \"),\n            !ok ? (React.createElement(Typography, { color: \"error\" }, \"Max is greater than or equal to min\")) : null,\n            !logOk ? (React.createElement(Typography, { color: \"error\" }, \"Min score should be greater than 0 for log scale\")) : null,\n            React.createElement(TextField, { value: min, onChange: event => setMin(event.target.value), placeholder: \"Enter min score\" }),\n            React.createElement(TextField, { value: max, onChange: event => setMax(event.target.value), placeholder: \"Enter max score\" })),\n        React.createElement(DialogActions, null,\n            React.createElement(Button, { variant: \"contained\", color: \"primary\", type: \"submit\", style: { marginLeft: 20 }, disabled: !ok, onClick: () => {\n                    model.setMinScore(min !== '' && !Number.isNaN(+min) ? +min : undefined);\n                    model.setMaxScore(max !== '' && !Number.isNaN(+max) ? +max : undefined);\n                    handleClose();\n                } }, \"Submit\"))));\n}\n"],"names":["SetMinMaxDialog","props","model","handleClose","minScore","maxScore","scaleType","min","setMin","useState","concat","Number","MIN_VALUE","max","setMax","MAX_VALUE","ok","isNaN","logOk","React","Dialog","open","onClose","title","DialogContent","Typography","color","TextField","value","onChange","event","target","placeholder","DialogActions","Button","variant","type","style","marginLeft","disabled","onClick","setMinScore","undefined","setMaxScore"],"sourceRoot":""}