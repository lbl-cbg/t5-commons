{"version":3,"file":"static/js/1063.610afb74.chunk.js","mappings":"qPAKA,MA4BA,GA5BuBA,EAAAA,EAAAA,WAAS,SAAuBC,GAA0B,IAAzB,MAAEC,EAAK,YAAEC,GAAcF,EAC3E,MAAOG,EAAQC,IAAaC,EAAAA,EAAAA,WAAS,GACrC,OAAQC,EAAAA,cAAoBC,EAAAA,OAAQ,CAAEC,MAAM,EAAMC,QAASP,EAAaQ,MAAO,aAC3EJ,EAAAA,cAAoBK,EAAAA,EAAe,KAC/BL,EAAAA,cAAoBM,EAAAA,EAAY,KAAM,iJACtCN,EAAAA,cAAoBO,EAAAA,EAAkB,CAAEC,SAAUX,EAAQY,QAASA,IAAMX,GAAU,GAAQY,QAASV,EAAAA,cAAoBW,EAAAA,EAAO,MAAOC,MAAO,kBAC7IZ,EAAAA,cAAoBO,EAAAA,EAAkB,CAAEC,QAASX,EAAQY,QAASA,IAAMX,GAAU,GAAOY,QAASV,EAAAA,cAAoBW,EAAAA,EAAO,MAAOC,MAAO,4BAC3If,EAAUG,EAAAA,cAAoBA,EAAAA,SAAgB,KAC1CA,EAAAA,cAAoBM,EAAAA,EAAY,KAAM,kBACtCN,EAAAA,cAAoBa,EAAAA,YAAa,CAAEC,MAAOnB,EAAMoB,UAAY,QAASC,SAAUC,IACvEtB,EAAMuB,YAAYD,GAClBtB,EAAMwB,cAASC,EAAU,IAEjCpB,EAAAA,cAAoBM,EAAAA,EAAY,KAAM,kBACtCN,EAAAA,cAAoBa,EAAAA,YAAa,CAAEC,MAAOnB,EAAM0B,UAAY,QAASL,SAAUC,IACvEtB,EAAM2B,YAAYL,GAClBtB,EAAMwB,cAASC,EAAU,KACnBpB,EAAAA,cAAoBA,EAAAA,SAAgB,KAClDA,EAAAA,cAAoBM,EAAAA,EAAY,KAAM,iBACtCN,EAAAA,cAAoBa,EAAAA,YAAa,CAAEC,MAAOnB,EAAMmB,OAAS,QAASE,SAAUC,GAAStB,EAAMwB,SAASF,OAC5GjB,EAAAA,cAAoBuB,EAAAA,EAAe,KAC/BvB,EAAAA,cAAoBwB,EAAAA,EAAQ,CAAEf,QAASA,KAC/Bd,EAAMuB,iBAAYE,GAClBzB,EAAM2B,iBAAYF,GAClBzB,EAAMwB,cAASC,EAAU,EAC1BN,MAAO,YAAaW,QAAS,aAAe,mBACnDzB,EAAAA,cAAoBwB,EAAAA,EAAQ,CAAEC,QAAS,YAAaX,MAAO,UAAWY,KAAM,SAAUjB,QAASA,IAAMb,KAAiB,WAClI,G","sources":["../node_modules/@jbrowse/plugin-wiggle/esm/LinearWiggleDisplay/components/SetColorDialog.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { Button, DialogContent, DialogActions, FormControlLabel, Radio, Typography, } from '@mui/material';\nimport { Dialog } from '@jbrowse/core/ui';\nimport { ColorPicker } from '@jbrowse/core/ui/ColorPicker';\nconst SetColorDialog = observer(function SetColorDialog({ model, handleClose, }) {\n    const [posneg, setPosNeg] = useState(false);\n    return (React.createElement(Dialog, { open: true, onClose: handleClose, title: \"Set color\" },\n        React.createElement(DialogContent, null,\n            React.createElement(Typography, null, \"Select either an overall color, or the positive/negative colors. Note that density renderers only work properly with positive/negative colors\"),\n            React.createElement(FormControlLabel, { checked: !posneg, onClick: () => setPosNeg(false), control: React.createElement(Radio, null), label: 'Overall color' }),\n            React.createElement(FormControlLabel, { checked: posneg, onClick: () => setPosNeg(true), control: React.createElement(Radio, null), label: 'Positive/negative color' }),\n            posneg ? (React.createElement(React.Fragment, null,\n                React.createElement(Typography, null, \"Positive color\"),\n                React.createElement(ColorPicker, { color: model.posColor || 'black', onChange: event => {\n                        model.setPosColor(event);\n                        model.setColor(undefined);\n                    } }),\n                React.createElement(Typography, null, \"Negative color\"),\n                React.createElement(ColorPicker, { color: model.negColor || 'black', onChange: event => {\n                        model.setNegColor(event);\n                        model.setColor(undefined);\n                    } }))) : (React.createElement(React.Fragment, null,\n                React.createElement(Typography, null, \"Overall color\"),\n                React.createElement(ColorPicker, { color: model.color || 'black', onChange: event => model.setColor(event) })))),\n        React.createElement(DialogActions, null,\n            React.createElement(Button, { onClick: () => {\n                    model.setPosColor(undefined);\n                    model.setNegColor(undefined);\n                    model.setColor(undefined);\n                }, color: \"secondary\", variant: \"contained\" }, \"Restore default\"),\n            React.createElement(Button, { variant: \"contained\", color: \"primary\", type: \"submit\", onClick: () => handleClose() }, \"Submit\"))));\n});\nexport default SetColorDialog;\n"],"names":["observer","_ref","model","handleClose","posneg","setPosNeg","useState","React","Dialog","open","onClose","title","DialogContent","Typography","FormControlLabel","checked","onClick","control","Radio","label","ColorPicker","color","posColor","onChange","event","setPosColor","setColor","undefined","negColor","setNegColor","DialogActions","Button","variant","type"],"sourceRoot":""}