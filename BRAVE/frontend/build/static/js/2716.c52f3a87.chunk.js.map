{"version":3,"file":"static/js/2716.c52f3a87.chunk.js","mappings":"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","sources":["../node_modules/@jbrowse/plugin-data-management/esm/AddTrackWidget/components/TextIndexingConfig.js","../node_modules/@jbrowse/plugin-data-management/esm/AddTrackWidget/components/TrackTypeSelector.js","../node_modules/@jbrowse/plugin-data-management/esm/AddTrackWidget/components/TrackAdapterSelector.js","../node_modules/@jbrowse/plugin-data-management/esm/AddTrackWidget/components/ConfirmTrack.js","../node_modules/@jbrowse/plugin-data-management/esm/AddTrackWidget/components/TrackSourceSelect.js","../node_modules/@jbrowse/plugin-data-management/esm/AddTrackWidget/components/DefaultAddTrackWorkflow.js","../node_modules/@jbrowse/plugin-data-management/esm/AddTrackWidget/components/PasteConfigWorkflow.js","../node_modules/@jbrowse/plugin-data-management/esm/AddTrackWidget/components/AddTrackWidget.js","../node_modules/@mui/icons-material/Delete.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Card, CardContent, IconButton, InputLabel, InputAdornment, List, ListItem, Paper, TextField, } from '@mui/material';\nimport { makeStyles } from 'tss-react/mui';\nimport { observer } from 'mobx-react';\n// icons\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\nconst useStyles = makeStyles()(theme => ({\n    paper: {\n        display: 'flex',\n        flexDirection: 'column',\n        padding: theme.spacing(1),\n    },\n    card: {\n        marginTop: theme.spacing(1),\n    },\n}));\nconst TextIndexingConfig = observer(function ({ model, }) {\n    const { classes } = useStyles();\n    const [value1, setValue1] = useState('');\n    const [value2, setValue2] = useState('');\n    const [attributes, setAttributes] = useState(['Name', 'ID']);\n    const [exclude, setExclude] = useState(['CDS', 'exon']);\n    const sections = [\n        {\n            label: 'Indexing attributes',\n            values: attributes,\n        },\n        {\n            label: 'Feature types to exclude',\n            values: exclude,\n        },\n    ];\n    useEffect(() => {\n        model.setTextIndexingConf({ attributes, exclude });\n    }, [model, attributes, exclude]);\n    return (React.createElement(Paper, { className: classes.paper },\n        React.createElement(InputLabel, null, \"Indexing configuration\"),\n        sections.map((section, index) => (React.createElement(Card, { raised: true, key: section.label, className: classes.card },\n            React.createElement(CardContent, null,\n                React.createElement(InputLabel, null, section.label),\n                React.createElement(List, { disablePadding: true },\n                    section.values.map((val, idx) => (React.createElement(ListItem, { key: idx, disableGutters: true },\n                        React.createElement(TextField, { value: val, InputProps: {\n                                endAdornment: (React.createElement(InputAdornment, { position: \"end\" },\n                                    React.createElement(IconButton, { onClick: () => {\n                                            const newAttr = section.values.filter((_, i) => i !== idx);\n                                            index === 0\n                                                ? setAttributes(newAttr)\n                                                : setExclude(newAttr);\n                                        } },\n                                        React.createElement(DeleteIcon, null)))),\n                            } })))),\n                    React.createElement(ListItem, { disableGutters: true },\n                        React.createElement(TextField, { value: index === 0 ? value1 : value2, placeholder: \"add new\", onChange: event => {\n                                index === 0\n                                    ? setValue1(event.target.value)\n                                    : setValue2(event.target.value);\n                            }, InputProps: {\n                                endAdornment: (React.createElement(InputAdornment, { position: \"end\" },\n                                    React.createElement(IconButton, { onClick: () => {\n                                            if (index === 0) {\n                                                setAttributes([...attributes, value1]);\n                                                setValue1('');\n                                            }\n                                            else {\n                                                setExclude([...exclude, value2]);\n                                                setValue2('');\n                                            }\n                                        }, disabled: index === 0 ? value1 === '' : value2 === '', \"data-testid\": `stringArrayAdd-Feat` },\n                                        React.createElement(AddIcon, null)))),\n                            } })))))))));\n});\nexport default TextIndexingConfig;\n","import React from 'react';\nimport { MenuItem, TextField } from '@mui/material';\nimport { getEnv } from '@jbrowse/core/util';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()(theme => ({\n    spacing: {\n        marginBottom: theme.spacing(3),\n    },\n}));\nconst TrackTypeSelector = observer(({ model }) => {\n    const { classes } = useStyles();\n    const { pluginManager } = getEnv(model);\n    const { trackType } = model;\n    const trackTypes = pluginManager.getTrackElements();\n    return (React.createElement(TextField, { className: classes.spacing, value: trackType, variant: \"outlined\", label: \"Track type\", helperText: \"Select track type\", select: true, fullWidth: true, onChange: event => model.setTrackType(event.target.value), SelectProps: {\n            // @ts-expect-error\n            SelectDisplayProps: { 'data-testid': 'trackTypeSelect' },\n        } }, trackTypes.map(({ name, displayName }) => (React.createElement(MenuItem, { key: name, value: name }, displayName)))));\n});\nexport default TrackTypeSelector;\n","import React from 'react';\nimport { ListSubheader, MenuItem, TextField } from '@mui/material';\nimport { makeStyles } from 'tss-react/mui';\nimport { getEnv } from '@jbrowse/core/util';\nimport { observer } from 'mobx-react';\nconst useStyles = makeStyles()(theme => ({\n    spacing: {\n        marginBottom: theme.spacing(3),\n    },\n}));\n// collate adapters into a map with\n// key: category\n// value: array of adapters with that category\nfunction categorizeAdapters(adaptersList) {\n    const map = {};\n    adaptersList.forEach(adapter => {\n        var _a;\n        const key = ((_a = adapter.adapterMetadata) === null || _a === void 0 ? void 0 : _a.category) || 'Default';\n        if (!map[key]) {\n            map[key] = [];\n        }\n        map[key].push(adapter);\n    });\n    return map;\n}\nconst TrackAdapterSelector = observer(({ model }) => {\n    const { classes } = useStyles();\n    const { trackAdapter } = model;\n    const { pluginManager } = getEnv(model);\n    return (React.createElement(TextField, { className: classes.spacing, value: (trackAdapter === null || trackAdapter === void 0 ? void 0 : trackAdapter.type) !== 'UNKNOWN' ? trackAdapter === null || trackAdapter === void 0 ? void 0 : trackAdapter.type : '', label: \"Adapter type\", variant: \"outlined\", helperText: \"Select an adapter type\", select: true, fullWidth: true, onChange: event => model.setAdapterHint(event.target.value), SelectProps: {\n            // @ts-expect-error\n            SelectDisplayProps: { 'data-testid': 'adapterTypeSelect' },\n        } }, Object.entries(categorizeAdapters(pluginManager\n        .getAdapterElements()\n        .filter(e => { var _a; return !((_a = e.adapterMetadata) === null || _a === void 0 ? void 0 : _a.hiddenFromGUI); }))).map(([key, val]) => {\n        // returning array avoids needing to use a react fragment which\n        // Select/TextField sub-elements disagree with\n        return [\n            React.createElement(ListSubheader, { key: key }, key),\n            val.map(elt => (React.createElement(MenuItem, { key: elt.name, value: elt.name }, elt.displayName))),\n        ];\n    })));\n});\nexport default TrackAdapterSelector;\n","import React, { useEffect, useState } from 'react';\nimport { Checkbox, FormControl, FormControlLabel, Link, TextField, Typography, } from '@mui/material';\nimport { makeStyles } from 'tss-react/mui';\nimport { isSupportedIndexingAdapter, getSession, isElectron, } from '@jbrowse/core/util';\nimport { observer } from 'mobx-react';\nimport { UNKNOWN } from '@jbrowse/core/util/tracks';\nimport { AssemblySelector } from '@jbrowse/core/ui';\nimport TextIndexingConfig from './TextIndexingConfig';\nimport TrackTypeSelector from './TrackTypeSelector';\nimport TrackAdapterSelector from './TrackAdapterSelector';\nconst useStyles = makeStyles()(theme => ({\n    spacing: {\n        marginBottom: theme.spacing(3),\n    },\n}));\nfunction StatusMessage({ trackAdapter, trackType, }) {\n    const { classes } = useStyles();\n    const { type, subadapter } = trackAdapter;\n    return type === 'SNPCoverageAdapter' ? (React.createElement(Typography, { className: classes.spacing },\n        \"Selected \",\n        React.createElement(\"code\", null, trackType),\n        \". Using adapter \",\n        React.createElement(\"code\", null, type),\n        \" with subadapter \",\n        React.createElement(\"code\", null, subadapter === null || subadapter === void 0 ? void 0 : subadapter.type),\n        \". Please enter a track name and, if necessary, update the track type.\")) : (React.createElement(Typography, { className: classes.spacing },\n        \"Using adapter \",\n        React.createElement(\"code\", null, type),\n        \" and guessing track type\",\n        ' ',\n        React.createElement(\"code\", null, trackType),\n        \". Please enter a track name and, if necessary, update the track type.\"));\n}\nfunction UnknownAdapterPrompt({ model }) {\n    const { classes } = useStyles();\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Typography, { className: classes.spacing },\n            \"JBrowse was not able to guess the adapter type for this data, but it may be in the list below. If not, you can\",\n            ' ',\n            React.createElement(Link, { href: \"https://github.com/GMOD/jbrowse-components/releases\", target: \"_blank\", rel: \"noopener noreferrer\" }, \"check for new releases\"),\n            ' ',\n            \"of JBrowse to see if they support this data type or\",\n            ' ',\n            React.createElement(Link, { href: \"https://github.com/GMOD/jbrowse-components/issues/new\", target: \"_blank\", rel: \"noopener noreferrer\" }, \"file an issue\"),\n            ' ',\n            \"and add a feature request for this data type.\"),\n        React.createElement(TrackAdapterSelector, { model: model })));\n}\nconst ConfirmTrack = observer(function ConfirmTrack({ model, }) {\n    const { classes } = useStyles();\n    const [check, setCheck] = useState(true);\n    const session = getSession(model);\n    const { trackName, trackAdapter, trackType, warningMessage, adapterHint } = model;\n    useEffect(() => {\n        if (adapterHint === '' && trackAdapter) {\n            model.setAdapterHint(trackAdapter.type);\n        }\n    }, [adapterHint, trackAdapter, trackAdapter === null || trackAdapter === void 0 ? void 0 : trackAdapter.type, model]);\n    if (model.unsupported) {\n        return (React.createElement(Typography, { className: classes.spacing },\n            \"This version of JBrowse cannot display data of this type. It is possible, however, that there is a newer version that can display them. You can\",\n            ' ',\n            React.createElement(Link, { href: \"https://github.com/GMOD/jbrowse-components/releases\", target: \"_blank\", rel: \"noopener noreferrer\" }, \"check for new releases\"),\n            ' ',\n            \"of JBrowse or\",\n            ' ',\n            React.createElement(Link, { href: \"https://github.com/GMOD/jbrowse-components/issues/new\", target: \"_blank\", rel: \"noopener noreferrer\" }, \"file an issue\"),\n            ' ',\n            \"and add a feature request for this data type.\"));\n    }\n    if ((trackAdapter === null || trackAdapter === void 0 ? void 0 : trackAdapter.type) === UNKNOWN) {\n        return React.createElement(UnknownAdapterPrompt, { model: model });\n    }\n    if (!(trackAdapter === null || trackAdapter === void 0 ? void 0 : trackAdapter.type)) {\n        return React.createElement(Typography, null, \"Could not recognize this data type.\");\n    }\n    const supportedForIndexing = isSupportedIndexingAdapter(trackAdapter === null || trackAdapter === void 0 ? void 0 : trackAdapter.type);\n    return (React.createElement(\"div\", null,\n        trackAdapter ? (React.createElement(StatusMessage, { trackAdapter: trackAdapter, trackType: trackType })) : null,\n        warningMessage ? (React.createElement(Typography, { style: { color: 'orange' } }, warningMessage)) : null,\n        React.createElement(TextField, { className: classes.spacing, label: \"trackName\", helperText: \"A name for this track\", fullWidth: true, value: trackName, onChange: event => model.setTrackName(event.target.value), inputProps: { 'data-testid': 'trackNameInput' } }),\n        React.createElement(TrackAdapterSelector, { model: model }),\n        React.createElement(TrackTypeSelector, { model: model }),\n        React.createElement(AssemblySelector, { session: session, helperText: \"Select assembly to add track to\", selected: model.assembly, onChange: asm => model.setAssembly(asm), TextFieldProps: {\n                fullWidth: true,\n                SelectProps: {\n                    // @ts-expect-error\n                    SelectDisplayProps: { 'data-testid': 'assemblyNameSelect' },\n                },\n            } }),\n        isElectron && supportedForIndexing && (React.createElement(FormControl, null,\n            React.createElement(FormControlLabel, { label: 'Index track for text searching?', control: React.createElement(Checkbox, { checked: check, onChange: e => {\n                        setCheck(e.target.checked);\n                        model.setTextIndexTrack(e.target.checked);\n                    } }) }))),\n        isElectron && check && supportedForIndexing ? (React.createElement(TextIndexingConfig, { model: model })) : null));\n});\nexport default ConfirmTrack;\n","import React from 'react';\nimport { FileSelector } from '@jbrowse/core/ui';\nimport { Paper } from '@mui/material';\nimport { makeStyles } from 'tss-react/mui';\nimport { getRoot } from 'mobx-state-tree';\nimport { observer } from 'mobx-react';\nconst useStyles = makeStyles()(theme => ({\n    paper: {\n        padding: theme.spacing(2),\n    },\n    spacer: {\n        height: theme.spacing(8),\n    },\n}));\nconst TrackSourceSelect = observer(function ({ model, }) {\n    const { classes } = useStyles();\n    const rootModel = getRoot(model);\n    return (React.createElement(Paper, { className: classes.paper },\n        React.createElement(FileSelector, { name: \"Main file\", description: \"\", location: model.trackData, setLocation: model.setTrackData, setName: model.setTrackName, rootModel: rootModel }),\n        React.createElement(\"div\", { className: classes.spacer }),\n        React.createElement(FileSelector, { name: \"Index file\", description: \"(Optional) The URL of the index file is automatically inferred from the URL of the main file if it is not supplied.\", location: model.indexTrackData, setLocation: model.setIndexTrackData, setName: model.setTrackName, rootModel: rootModel })));\n});\nexport default TrackSourceSelect;\n","import React, { useState } from 'react';\nimport { Alert, Button, Step, StepContent, StepLabel, Stepper, Typography, } from '@mui/material';\nimport { makeStyles } from 'tss-react/mui';\nimport { getRoot } from 'mobx-state-tree';\nimport { getSession, isElectron, isSessionModelWithWidgets, isSessionWithAddTracks, isSupportedIndexingAdapter, } from '@jbrowse/core/util';\nimport { getConf } from '@jbrowse/core/configuration';\nimport { observer } from 'mobx-react';\n// locals\nimport ConfirmTrack from './ConfirmTrack';\nimport TrackSourceSelect from './TrackSourceSelect';\nconst useStyles = makeStyles()(theme => ({\n    root: {\n        marginTop: theme.spacing(1),\n    },\n    stepper: {\n        backgroundColor: theme.palette.background.default,\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n        marginTop: theme.spacing(10),\n        marginBottom: theme.spacing(2),\n    },\n    alertContainer: {\n        padding: `${theme.spacing(2)}px 0px ${theme.spacing(2)}px 0px`,\n    },\n}));\nconst steps = ['Enter track data', 'Confirm track type'];\nconst DefaultAddTrackWorkflow = observer(function ({ model, }) {\n    const [activeStep, setActiveStep] = useState(0);\n    const { classes } = useStyles();\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const { jobsManager } = getRoot(model);\n    const session = getSession(model);\n    const { assembly, trackAdapter, trackData, trackName, trackType, textIndexTrack, textIndexingConf, } = model;\n    const [trackErrorMessage, setTrackErrorMessage] = useState();\n    function getStepContent(step) {\n        switch (step) {\n            case 0:\n                return React.createElement(TrackSourceSelect, { model: model });\n            case 1:\n                return React.createElement(ConfirmTrack, { model: model });\n            default:\n                return React.createElement(Typography, null, \"Unknown step\");\n        }\n    }\n    async function handleNext() {\n        var _a, _b;\n        if (activeStep !== steps.length - 1) {\n            setActiveStep(activeStep + 1);\n            return;\n        }\n        const trackId = [\n            `${trackName.toLowerCase().replaceAll(' ', '_')}-${Date.now()}`,\n            `${session.adminMode ? '' : '-sessionTrack'}`,\n        ].join('');\n        const assemblyInstance = session.assemblyManager.get(assembly);\n        if (!isSessionWithAddTracks(session)) {\n            setTrackErrorMessage('Unable to add tracks to this model');\n            return;\n        }\n        if (assemblyInstance && trackAdapter && trackAdapter.type !== 'UNKNOWN') {\n            session.addTrackConf({\n                trackId,\n                type: trackType,\n                name: trackName,\n                assemblyNames: [assembly],\n                adapter: {\n                    ...trackAdapter,\n                    sequenceAdapter: getConf(assemblyInstance, ['sequence', 'adapter']),\n                },\n            });\n            (_b = (_a = model.view).showTrack) === null || _b === void 0 ? void 0 : _b.call(_a, trackId);\n            if (isElectron &&\n                textIndexTrack &&\n                isSupportedIndexingAdapter(trackAdapter.type)) {\n                const attr = textIndexingConf || {\n                    attributes: ['Name', 'ID'],\n                    exclude: ['CDS', 'exon'],\n                };\n                const indexName = trackName + '-index';\n                const newEntry = {\n                    indexingParams: {\n                        ...attr,\n                        assemblies: [assembly],\n                        tracks: [trackId],\n                        indexType: 'perTrack',\n                        name: indexName,\n                        timestamp: new Date().toISOString(),\n                    },\n                    name: indexName,\n                    cancelCallback: () => jobsManager.abortJob(),\n                };\n                jobsManager.queueJob(newEntry);\n            }\n            model.clearData();\n            if (isSessionModelWithWidgets(session)) {\n                session.hideWidget(model);\n            }\n        }\n        else {\n            setTrackErrorMessage('Failed to add track.\\nThe configuration of this file is not currently supported.');\n        }\n    }\n    function isNextDisabled() {\n        switch (activeStep) {\n            case 0:\n                return !trackData;\n            case 1:\n                return !(trackName && trackType && (trackAdapter === null || trackAdapter === void 0 ? void 0 : trackAdapter.type) && assembly);\n            default:\n                return true;\n        }\n    }\n    return (React.createElement(\"div\", { className: classes.root },\n        React.createElement(Stepper, { className: classes.stepper, activeStep: activeStep, orientation: \"vertical\" }, steps.map((label, idx) => (React.createElement(Step, { key: label },\n            React.createElement(StepLabel, null, label),\n            React.createElement(StepContent, null,\n                getStepContent(idx),\n                React.createElement(\"div\", { className: classes.actionsContainer },\n                    React.createElement(Button, { disabled: activeStep === 0, onClick: () => {\n                            setTrackErrorMessage(undefined);\n                            setActiveStep(activeStep - 1);\n                        }, className: classes.button }, \"Back\"),\n                    React.createElement(Button, { disabled: isNextDisabled(), variant: \"contained\", color: \"primary\", onClick: handleNext, className: classes.button, \"data-testid\": \"addTrackNextButton\" }, activeStep === steps.length - 1 ? 'Add' : 'Next')),\n                trackErrorMessage ? (React.createElement(\"div\", { className: classes.alertContainer },\n                    React.createElement(Alert, { severity: \"error\" }, trackErrorMessage))) : null)))))));\n});\nexport default DefaultAddTrackWorkflow;\n","import React, { useState } from 'react';\nimport { Button, TextField } from '@mui/material';\nimport { ErrorMessage } from '@jbrowse/core/ui';\nimport { makeStyles } from 'tss-react/mui';\nimport { getSession, isSessionModelWithWidgets, isSessionWithAddTracks, } from '@jbrowse/core/util';\nimport { observer } from 'mobx-react';\nconst useStyles = makeStyles()({\n    textbox: {\n        width: '100%',\n    },\n    submit: {\n        marginTop: 25,\n        marginBottom: 100,\n        display: 'block',\n    },\n});\nconst PasteConfigAddTrackWorkflow = observer(function ({ model, }) {\n    const { classes } = useStyles();\n    const [val, setVal] = useState('');\n    const [error, setError] = useState();\n    return (React.createElement(\"div\", null,\n        error ? React.createElement(ErrorMessage, { error: error }) : null,\n        React.createElement(TextField, { multiline: true, rows: 10, value: val, onChange: event => setVal(event.target.value), placeholder: 'Paste track config or array of track configs in JSON format', variant: \"outlined\", className: classes.textbox }),\n        React.createElement(Button, { variant: \"contained\", className: classes.submit, onClick: () => {\n                try {\n                    setError(undefined);\n                    const session = getSession(model);\n                    const conf = JSON.parse(val);\n                    const confs = Array.isArray(conf) ? conf : [conf];\n                    if (isSessionWithAddTracks(session) &&\n                        isSessionModelWithWidgets(session)) {\n                        confs.forEach(c => session.addTrackConf(c));\n                        confs.forEach(c => model.view.showTrack(c.trackId));\n                        model.clearData();\n                        session.hideWidget(model);\n                    }\n                }\n                catch (e) {\n                    console.error(e);\n                    setError(e);\n                }\n            } }, \"Submit\")));\n});\nexport default PasteConfigAddTrackWorkflow;\n","import React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { FormControl, FormHelperText, Select, MenuItem } from '@mui/material';\nimport { getEnv } from '@jbrowse/core/util';\nimport DefaultAddTrackWorkflow from './DefaultAddTrackWorkflow';\nimport PasteConfigWorkflow from './PasteConfigWorkflow';\nconst AddTrackSelector = observer(function ({ model, }) {\n    const [val, setVal] = useState('Default add track workflow');\n    const { pluginManager } = getEnv(model);\n    const widgets = pluginManager.getAddTrackWorkflowElements();\n    const ComponentMap = {\n        'Default add track workflow': DefaultAddTrackWorkflow,\n        'Add track JSON': PasteConfigWorkflow,\n        ...Object.fromEntries(widgets.map(w => [w.name, w.ReactComponent])),\n    };\n    // make sure the selected value is in the list\n    const val2 = ComponentMap[val] ? val : 'Default add track workflow';\n    const Component = ComponentMap[val2];\n    return (React.createElement(React.Fragment, null,\n        React.createElement(FormControl, null,\n            React.createElement(Select, { value: val2, onChange: event => setVal(event.target.value) }, Object.keys(ComponentMap).map(e => (React.createElement(MenuItem, { key: e, value: e }, e)))),\n            React.createElement(FormHelperText, null, \"Type of add track workflow\")),\n        React.createElement(\"br\", null),\n        React.createElement(Component, { model: model })));\n});\nexport default AddTrackSelector;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');"],"names":["useStyles","makeStyles","theme","paper","display","flexDirection","padding","spacing","card","marginTop","observer","_ref","model","classes","value1","setValue1","useState","value2","setValue2","attributes","setAttributes","exclude","setExclude","sections","label","values","useEffect","setTextIndexingConf","React","Paper","className","InputLabel","map","section","index","Card","raised","key","CardContent","List","disablePadding","val","idx","ListItem","disableGutters","TextField","value","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","newAttr","filter","_","i","DeleteIcon","placeholder","onChange","event","target","disabled","AddIcon","marginBottom","pluginManager","getEnv","trackType","trackTypes","getTrackElements","variant","helperText","select","fullWidth","setTrackType","SelectProps","SelectDisplayProps","_ref2","name","displayName","MenuItem","trackAdapter","type","setAdapterHint","Object","entries","adaptersList","forEach","adapter","_a","adapterMetadata","category","push","categorizeAdapters","getAdapterElements","e","hiddenFromGUI","ListSubheader","elt","StatusMessage","subadapter","Typography","UnknownAdapterPrompt","Link","href","rel","TrackAdapterSelector","_ref3","check","setCheck","session","getSession","trackName","warningMessage","adapterHint","unsupported","UNKNOWN","supportedForIndexing","isSupportedIndexingAdapter","style","color","setTrackName","inputProps","TrackTypeSelector","AssemblySelector","selected","assembly","asm","setAssembly","TextFieldProps","isElectron","FormControl","FormControlLabel","control","Checkbox","checked","setTextIndexTrack","TextIndexingConfig","spacer","height","rootModel","getRoot","FileSelector","description","location","trackData","setLocation","setTrackData","setName","indexTrackData","setIndexTrackData","root","stepper","backgroundColor","palette","background","default","button","marginRight","actionsContainer","alertContainer","concat","steps","activeStep","setActiveStep","jobsManager","textIndexTrack","textIndexingConf","trackErrorMessage","setTrackErrorMessage","async","handleNext","_b","length","trackId","toLowerCase","replaceAll","Date","now","adminMode","join","assemblyInstance","assemblyManager","get","isSessionWithAddTracks","addTrackConf","assemblyNames","sequenceAdapter","getConf","view","showTrack","call","indexName","newEntry","indexingParams","assemblies","tracks","indexType","timestamp","toISOString","cancelCallback","abortJob","queueJob","clearData","isSessionModelWithWidgets","hideWidget","isNextDisabled","Stepper","orientation","Step","StepLabel","StepContent","step","TrackSourceSelect","ConfirmTrack","getStepContent","Button","undefined","Alert","severity","textbox","width","submit","setVal","error","setError","ErrorMessage","multiline","rows","conf","JSON","parse","confs","Array","isArray","c","console","widgets","getAddTrackWorkflowElements","ComponentMap","DefaultAddTrackWorkflow","PasteConfigWorkflow","fromEntries","w","ReactComponent","val2","Component","Select","keys","FormHelperText","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","jsx","d"],"sourceRoot":""}