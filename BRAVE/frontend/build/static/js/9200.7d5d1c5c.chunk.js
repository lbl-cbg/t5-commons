"use strict";(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([[9200],{29200:(t,e,o)=>{o.r(e),o.d(e,{default:()=>p});var n=o(48591),s=o(91855),a=o(10718),i=o(97151),r=o(1301),c=o(93963),d=o(61959),l=o(91775);function u(t){return f(t.type)?1:t.length}function f(t){return"softclip"===t||"hardclip"===t||"insertion"===t}function v(t,e,o,n){let s=t[o][n];void 0===s&&(s=t[o][n]={total:0,"-1":0,0:0,1:0}),s.total++,s[e]++}class p extends n.BaseFeatureDataAdapter{async configure(){var t,e;const o=this.getConf("subadapter"),n=o.sequenceAdapter,s=await(null===(t=this.getSubAdapter)||void 0===t?void 0:t.call(this,o)),a=n?await(null===(e=this.getSubAdapter)||void 0===e?void 0:e.call(this,n)):void 0;if(!s)throw new Error("Failed to get subadapter");return{subadapter:s.dataAdapter,sequenceAdapter:null===a||void 0===a?void 0:a.dataAdapter}}async fetchSequence(t){const{sequenceAdapter:e}=await this.configure();if(e)return(0,c.Iw)(t,e)}getFeatures(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return(0,a.ObservableCreate)((async o=>{const{subadapter:n}=await this.configure(),a=await(0,r._)(n.getFeatures(t,e).pipe((0,i.$)())),{bins:p,skipmap:h}=await async function(t,e,o,n){var s,a,i;const{colorBy:r}=o,p={...e,start:Math.max(0,e.start-1),end:e.end+1},h=Math.ceil(p.end-p.start),g={},m=t.length&&(0,c.k_)(null===(s=o.colorBy)||void 0===s?void 0:s.type)?await n(e):void 0,w=[];for(const y of t){const t=y.get("start"),o=y.get("end"),n=y.get("strand"),s=y.get("mismatches")||[];for(let a=t;a<o+1;a++){const t=a-e.start;t>=0&&t<h&&(void 0===w[t]&&(w[t]={total:0,all:0,ref:0,"-1":0,0:0,1:0,lowqual:{},cov:{},delskips:{},noncov:{}}),a!==o&&(w[t].total++,w[t].all++,w[t].ref++,w[t][n]++))}if("modifications"===(null===r||void 0===r?void 0:r.type)){const o=y.get("seq"),s=(0,c.c$)(y,"MM","Mm")||"",a=(0,d.eL)(y.get("CIGAR")),i=y.get("end");if(o){const r=(0,d.xA)(s,o,n);for(const{type:o,positions:s}of r){const r="mod_".concat(o);for(const o of(0,d.hn)(a,s)){const s=o+t-e.start;if(s>=0&&s<w.length&&o+t<i){void 0===w[s]&&(w[s]={total:0,all:0,ref:0,"-1":0,0:0,1:0,lowqual:{},cov:{},delskips:{},noncov:{}});const t=w[s];t?v(t,n,"cov",r):console.warn("Undefined position in modifications snpcoverage encountered")}}}}}if("methylation"===(null===r||void 0===r?void 0:r.type)){if(!m)throw new Error("no region sequence detected, need sequenceAdapter configuration");if(!y.get("seq"))continue;const{methBins:r,methProbs:c}=(0,d.Ps)(y),u=s.filter((t=>"deletion"===t.type));for(let s=0;s<o-t;s++){const o=s+t,d=null===(a=m[o-e.start+1])||void 0===a?void 0:a.toLowerCase(),f=null===(i=m[o-e.start+2])||void 0===i?void 0:i.toLowerCase();if("c"===d&&"g"===f){const a=w[o-e.start],i=w[o-e.start+1],d=r[s],f=r[s+1],p=c[s],h=c[s+1];d&&(void 0===p||p>.5)||f&&(void 0===h||h>.5)?(a&&(v(a,n,"cov","meth"),a.ref--,a[n]--),i&&(v(i,n,"cov","meth"),i.ref--,i[n]--)):(a&&((null===u||void 0===u?void 0:u.some((e=>(0,l.doesIntersect2)(o,o+1,e.start+t,e.start+t+e.length))))||(v(a,n,"cov","unmeth"),a.ref--,a[n])),i&&((null===u||void 0===u?void 0:u.some((e=>(0,l.doesIntersect2)(o+1,o+2,e.start+t,e.start+t+e.length))))||(v(i,n,"cov","unmeth"),i.ref--,i[n]--)))}}}const p="modifications"!==(null===r||void 0===r?void 0:r.type)&&"methylation"!==(null===r||void 0===r?void 0:r.type);for(const a of s){const o=t+a.start,s=u(a),i=o+s;for(let t=o;t<o+s;t++){const o=t-e.start;if(o>=0&&o<w.length){const t=w[o],{base:e,type:s}=a,i=f(s);i?v(t,n,"noncov",s):(t.ref--,t[n]--),"deletion"===s||"skip"===s?(v(t,n,"delskips",s),t.total--):!i&&p&&(v(t,n,"cov",e),t.refbase=a.altbase)}}if("skip"===a.type){const t="".concat(o,"_").concat(i,"_").concat(n);void 0===g[t]&&(g[t]={feature:y,start:o,end:i,strand:n,xs:(0,c.bH)(y,"XS")||(0,c.bH)(y,"TS"),score:0}),g[t].score++}}}return{bins:w,skipmap:g}}(a,t,e,(t=>this.fetchSequence(t)));p.forEach(((e,n)=>{const a=t.start+n;o.next(new s.default({id:"".concat(this.id,"-").concat(a),data:{score:e.total,snpinfo:e,start:a,end:a+1,refName:t.refName}}))})),Object.entries(h).forEach((t=>{let[e,n]=t;o.next(new s.default({id:e,data:{type:"skip",start:n.start,end:n.end,strand:n.strand,score:n.score,xs:n.xs}}))})),o.complete()}),e.signal)}async getMultiRegionFeatureDensityStats(t,e){const{subadapter:o}=await this.configure();return o.getMultiRegionFeatureDensityStats(t,e)}async getRefNames(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{subadapter:e}=await this.configure();return e.getRefNames(t)}freeResources(){}}}}]);
//# sourceMappingURL=9200.7d5d1c5c.chunk.js.map