{"version":3,"file":"static/js/2590.b600e1c1.chunk.js","mappings":"sRASA,MAAMA,GAAYC,EAAAA,EAAAA,aAAAA,EAAaC,IAAS,CACpCC,cAAe,CACXC,QAAS,OACTC,cAAe,UAEnBC,OAAQ,CACJC,UAAW,eACXC,WAAY,OACZC,WAAYP,EAAMQ,YAAYC,OAAO,YAAa,CAC9CC,SAAUV,EAAMQ,YAAYE,SAASC,YAG7CC,WAAY,CACRP,UAAW,sBA4CnB,GAzC8BQ,EAAAA,EAAAA,WAAS,SAAAC,GAA+B,IAArB,QAAEC,EAAO,MAAEC,GAAQF,EAChE,MAAM,QAAEG,EAAO,GAAEC,GAAOpB,KACjBqB,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,KAC5CC,EAAcC,IAAmBF,EAAAA,EAAAA,UAAS,KAC1CG,EAAcC,IAAmBJ,EAAAA,EAAAA,UAAS,KAC1CK,EAAcC,IAAmBN,EAAAA,EAAAA,UAAS,KAC1CO,EAAqBC,IAA0BR,EAAAA,EAAAA,WAAS,IACzD,QAAES,IAAYC,EAAAA,EAAAA,YAAWf,GACzBgB,EAAQC,QAASd,GAAiBG,GAAiBE,GAAgBE,GACzE,SAASQ,IACDf,GAAiBG,EACjBQ,EAAQK,UAAU,CAAEC,KAAMjB,EAAekB,OAAQf,IAE5CE,EACLM,EAAQK,UAAU,CAAEG,OAAQd,IAEvBE,GACLI,EAAQK,UAAU,CAAEI,OAAQb,GAEpC,CACA,OAAQc,EAAAA,cAAoBC,EAAAA,OAAQ,CAAEC,MAAM,EAAM3B,QAASA,EAAS4B,MAAO,qBACvEH,EAAAA,cAAoB,OAAQ,CAAEI,SAAUV,GACpCM,EAAAA,cAAoBK,EAAAA,EAAe,CAAEC,UAAW7B,EAAQhB,eACpDuC,EAAAA,cAAoBO,EAAAA,EAAmB,KAAM,0GAC7CP,EAAAA,cAAoBQ,EAAAA,EAAW,CAAEC,MAAO,cAAeC,QAAS,WAAYC,MAAOhC,EAAeiC,SAAUC,GAASjC,EAAiBiC,EAAMC,OAAOH,SACnJX,EAAAA,cAAoBQ,EAAAA,EAAW,CAAEC,MAAO,aAAcC,QAAS,WAAYC,MAAO7B,EAAc8B,SAAUC,GAAS9B,EAAgB8B,EAAMC,OAAOH,SAChJX,EAAAA,cAAoBO,EAAAA,EAAmB,CAAEQ,QAASA,IAAM1B,GAAwBD,IAC5EY,EAAAA,cAAoBgB,EAAAA,EAAY,CAAEV,UAAW5B,EAAGD,EAAQb,OAAQ,CACxD,CAACa,EAAQL,YAAagB,IACtB,gBAAiBA,EAAqB,aAAc,aACxDY,EAAAA,cAAoBiB,EAAAA,QAAgB,OACxC,oBACJjB,EAAAA,cAAoBkB,EAAAA,EAAU,CAAEC,GAAI/B,GAChCY,EAAAA,cAAoB,MAAO,CAAEM,UAAW7B,EAAQhB,eAC5CuC,EAAAA,cAAoBO,EAAAA,EAAmB,KAAM,6PAC7CP,EAAAA,cAAoBQ,EAAAA,EAAW,CAAEC,MAAO,gBAAiBC,QAAS,WAAYC,MAAO3B,EAAc4B,SAAUC,GAAS5B,EAAgB4B,EAAMC,OAAOH,SACnJX,EAAAA,cAAoBQ,EAAAA,EAAW,CAAEC,MAAO,gBAAiBC,QAAS,WAAYC,MAAOzB,EAAc0B,SAAUC,GAAS1B,EAAgB0B,EAAMC,OAAOH,YAC/JX,EAAAA,cAAoBoB,EAAAA,EAAe,KAC/BpB,EAAAA,cAAoBqB,EAAAA,EAAQ,CAAEX,QAAS,YAAaK,QAASxC,GAAW,UACxEyB,EAAAA,cAAoBqB,EAAAA,EAAQ,CAAEX,QAAS,YAAaY,MAAO,UAAWP,QAASrB,EAAc6B,UAAW/B,GAAS,YACjI,G","sources":["../node_modules/@jbrowse/plugin-data-management/esm/PluginStoreWidget/components/AddCustomPluginDialog.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { Dialog } from '@jbrowse/core/ui';\nimport { Button, Collapse, DialogActions, DialogContent, DialogContentText, TextField, } from '@mui/material';\nimport { makeStyles } from 'tss-react/mui';\nimport { getSession } from '@jbrowse/core/util';\n// icons\nimport IconButton from '@mui/material/IconButton';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nconst useStyles = makeStyles()(theme => ({\n    dialogContent: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n}));\nconst AddCustomPluginDialog = observer(function ({ onClose, model, }) {\n    const { classes, cx } = useStyles();\n    const [umdPluginName, setUMDPluginName] = useState('');\n    const [umdPluginUrl, setUMDPluginUrl] = useState('');\n    const [esmPluginUrl, setESMPluginUrl] = useState('');\n    const [cjsPluginUrl, setCJSPluginUrl] = useState('');\n    const [advancedOptionsOpen, setAdvancedOptionsOpen] = useState(false);\n    const { jbrowse } = getSession(model);\n    const ready = Boolean((umdPluginName && umdPluginUrl) || esmPluginUrl || cjsPluginUrl);\n    function handleSubmit() {\n        if (umdPluginName && umdPluginUrl) {\n            jbrowse.addPlugin({ name: umdPluginName, umdUrl: umdPluginUrl });\n        }\n        else if (esmPluginUrl) {\n            jbrowse.addPlugin({ esmUrl: esmPluginUrl });\n        }\n        else if (cjsPluginUrl) {\n            jbrowse.addPlugin({ cjsUrl: cjsPluginUrl });\n        }\n    }\n    return (React.createElement(Dialog, { open: true, onClose: onClose, title: \"Add custom plugin\" },\n        React.createElement(\"form\", { onSubmit: handleSubmit },\n            React.createElement(DialogContent, { className: classes.dialogContent },\n                React.createElement(DialogContentText, null, \"Enter the name of the plugin and its URL. The name should match what is defined in the plugin's build.\"),\n                React.createElement(TextField, { label: \"Plugin name\", variant: \"outlined\", value: umdPluginName, onChange: event => setUMDPluginName(event.target.value) }),\n                React.createElement(TextField, { label: \"Plugin URL\", variant: \"outlined\", value: umdPluginUrl, onChange: event => setUMDPluginUrl(event.target.value) }),\n                React.createElement(DialogContentText, { onClick: () => setAdvancedOptionsOpen(!advancedOptionsOpen) },\n                    React.createElement(IconButton, { className: cx(classes.expand, {\n                            [classes.expandOpen]: advancedOptionsOpen,\n                        }), \"aria-expanded\": advancedOptionsOpen, \"aria-label\": \"show more\" },\n                        React.createElement(ExpandMoreIcon, null)),\n                    \"Advanced options\"),\n                React.createElement(Collapse, { in: advancedOptionsOpen },\n                    React.createElement(\"div\", { className: classes.dialogContent },\n                        React.createElement(DialogContentText, null, \"The above fields assume that the plugin is built in UMD format. If your plugin is in another format, or you have additional builds you want to add (such as a CJS build for using NodeJS APIs in desktop), you can enter the URLs for those builds below.\"),\n                        React.createElement(TextField, { label: \"ESM build URL\", variant: \"outlined\", value: esmPluginUrl, onChange: event => setESMPluginUrl(event.target.value) }),\n                        React.createElement(TextField, { label: \"CJS build URL\", variant: \"outlined\", value: cjsPluginUrl, onChange: event => setCJSPluginUrl(event.target.value) })))),\n            React.createElement(DialogActions, null,\n                React.createElement(Button, { variant: \"contained\", onClick: onClose }, \"Cancel\"),\n                React.createElement(Button, { variant: \"contained\", color: \"primary\", onClick: handleSubmit, disabled: !ready }, \"Submit\")))));\n});\nexport default AddCustomPluginDialog;\n"],"names":["useStyles","makeStyles","theme","dialogContent","display","flexDirection","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","observer","_ref","onClose","model","classes","cx","umdPluginName","setUMDPluginName","useState","umdPluginUrl","setUMDPluginUrl","esmPluginUrl","setESMPluginUrl","cjsPluginUrl","setCJSPluginUrl","advancedOptionsOpen","setAdvancedOptionsOpen","jbrowse","getSession","ready","Boolean","handleSubmit","addPlugin","name","umdUrl","esmUrl","cjsUrl","React","Dialog","open","title","onSubmit","DialogContent","className","DialogContentText","TextField","label","variant","value","onChange","event","target","onClick","IconButton","ExpandMoreIcon","Collapse","in","DialogActions","Button","color","disabled"],"sourceRoot":""}