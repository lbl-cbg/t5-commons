{"version":3,"file":"static/js/8973.3f5bf618.chunk.js","mappings":"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","sources":["../node_modules/@jbrowse/plugin-linear-genome-view/esm/LinearGenomeView/components/SearchResultsTable.js","../node_modules/@jbrowse/plugin-linear-genome-view/esm/LinearGenomeView/components/SearchResultsDialog.js"],"sourcesContent":["import React from 'react';\nimport { Button, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, } from '@mui/material';\nimport { getRoot, resolveIdentifier } from 'mobx-state-tree';\nimport { getEnv, getSession } from '@jbrowse/core/util';\nexport default function SearchResultsTable({ searchResults, assemblyName: optAssemblyName, model, handleClose, }) {\n    var _a;\n    const session = getSession(model);\n    const { pluginManager } = getEnv(session);\n    const { assemblyManager } = session;\n    const assemblyName = optAssemblyName || ((_a = model.displayedRegions[0]) === null || _a === void 0 ? void 0 : _a.assemblyName);\n    const assembly = assemblyManager.get(assemblyName);\n    if (!assembly) {\n        throw new Error(`assembly ${assemblyName} not found`);\n    }\n    if (!assembly.regions) {\n        throw new Error(`assembly ${assemblyName} regions not loaded`);\n    }\n    function getTrackName(trackId) {\n        var _a;\n        if (trackId) {\n            const schema = pluginManager.pluggableConfigSchemaType('track');\n            const configuration = resolveIdentifier(schema, getRoot(model), trackId);\n            return ((_a = configuration === null || configuration === void 0 ? void 0 : configuration.name) === null || _a === void 0 ? void 0 : _a.value) || '';\n        }\n        return '';\n    }\n    async function handleClick(location) {\n        var _a;\n        try {\n            const newRegion = (_a = assembly === null || assembly === void 0 ? void 0 : assembly.regions) === null || _a === void 0 ? void 0 : _a.find(region => location === region.refName);\n            if (newRegion) {\n                model.setDisplayedRegions([newRegion]);\n                // we use showAllRegions after setDisplayedRegions to make the entire\n                // region visible, xref #1703\n                model.showAllRegions();\n            }\n            else {\n                await model.navToLocString(location, assemblyName);\n            }\n        }\n        catch (e) {\n            console.warn(e);\n            session.notify(`${e}`, 'warning');\n        }\n    }\n    return (React.createElement(TableContainer, { component: Paper },\n        React.createElement(Table, null,\n            React.createElement(TableHead, null,\n                React.createElement(TableRow, null,\n                    React.createElement(TableCell, null, \"Name\"),\n                    React.createElement(TableCell, { align: \"right\" }, \"Location\"),\n                    React.createElement(TableCell, { align: \"right\" }, \"Track\"),\n                    React.createElement(TableCell, { align: \"right\" }))),\n            React.createElement(TableBody, null, searchResults.map(result => (React.createElement(TableRow, { key: `${result.getId()}` },\n                React.createElement(TableCell, { component: \"th\", scope: \"row\" }, result.getLabel()),\n                React.createElement(TableCell, { align: \"right\" }, result.getLocation()),\n                React.createElement(TableCell, { align: \"right\" }, getTrackName(result.getTrackId()) || 'N/A'),\n                React.createElement(TableCell, { align: \"right\" },\n                    React.createElement(Button, { onClick: async () => {\n                            try {\n                                const location = result.getLocation();\n                                if (location) {\n                                    await handleClick(location);\n                                    const resultTrackId = result.getTrackId();\n                                    if (resultTrackId) {\n                                        model.showTrack(resultTrackId);\n                                    }\n                                }\n                            }\n                            catch (e) {\n                                console.error(e);\n                                session.notify(`${e}`, 'error');\n                            }\n                            handleClose();\n                        }, color: \"primary\", variant: \"contained\" }, \"Go\")))))))));\n}\n","import React from 'react';\nimport { Dialog } from '@jbrowse/core/ui';\nimport { Button, DialogActions, DialogContent, Divider, Typography, } from '@mui/material';\nimport SearchResultsTable from './SearchResultsTable';\nexport default function SearchResultsDialog({ model, assemblyName, searchQuery, searchResults, handleClose, }) {\n    return (React.createElement(Dialog, { open: true, maxWidth: \"xl\", onClose: handleClose, title: \"Search results\" },\n        React.createElement(DialogContent, null, !(searchResults === null || searchResults === void 0 ? void 0 : searchResults.length) ? (React.createElement(Typography, null,\n            \"No results found for \",\n            React.createElement(\"b\", null, searchQuery))) : (React.createElement(React.Fragment, null,\n            React.createElement(Typography, null,\n                \"Showing results for \",\n                React.createElement(\"b\", null, searchQuery)),\n            React.createElement(SearchResultsTable, { model: model, handleClose: handleClose, assemblyName: assemblyName, searchResults: searchResults })))),\n        React.createElement(Divider, null),\n        React.createElement(DialogActions, null,\n            React.createElement(Button, { onClick: () => handleClose(), color: \"primary\" }, \"Cancel\"))));\n}\n"],"names":["SearchResultsTable","_ref","searchResults","assemblyName","optAssemblyName","model","handleClose","_a","session","getSession","pluginManager","getEnv","assemblyManager","displayedRegions","assembly","get","Error","concat","regions","React","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","map","result","key","getId","scope","getLabel","getLocation","trackId","schema","pluggableConfigSchemaType","configuration","resolveIdentifier","getRoot","name","value","getTrackName","getTrackId","Button","onClick","async","location","newRegion","find","region","refName","setDisplayedRegions","showAllRegions","navToLocString","e","console","warn","notify","handleClick","resultTrackId","showTrack","error","color","variant","SearchResultsDialog","searchQuery","Dialog","open","maxWidth","onClose","title","DialogContent","length","Typography","Divider","DialogActions"],"sourceRoot":""}