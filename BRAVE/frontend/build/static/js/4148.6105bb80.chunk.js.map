{"version":3,"file":"static/js/4148.6105bb80.chunk.js","mappings":"2QAQA,MAAMA,GAAYC,EAAAA,EAAAA,aAAAA,EAAaC,IAAS,CACpCC,oBAAqB,CACjBC,OAAQF,EAAMG,QAAQ,GACtBC,MAAO,SAGf,SAASC,IACL,OAAQC,EAAAA,cAAoBC,EAAAA,EAAS,CAAEC,MAAO,gEAC1CF,EAAAA,cAAoBG,EAAAA,EAAY,KAC5BH,EAAAA,cAAoBI,EAAAA,QAAW,CAAEC,MAAO,cACpD,CACA,MAkBA,GAlBgCC,EAAAA,EAAAA,WAAS,SAAAC,GAAsD,IAA5C,QAAEC,EAAO,YAAEC,EAAW,gBAAEC,GAAkBH,EACzF,MAAM,QAAEI,GAAYnB,KACd,UAAEoB,EAAS,YAAEC,EAAW,mBAAEC,GAAuBN,EACvD,OAAQR,EAAAA,cAAoBe,EAAAA,OAAQ,CAAEC,MAAM,EAAMC,QAASR,EAAaS,SAAU,KAAMhB,MAAO,sBAC3FF,EAAAA,cAAoBmB,EAAAA,EAAe,KAC/BnB,EAAAA,cAAoBoB,EAAAA,EAAY,KAAM,yEACtCpB,EAAAA,cAAoB,MAAO,CAAEqB,UAAWV,EAAQhB,qBAC5CkB,EAAYS,KAAIC,IACZ,MAAMC,GAAOC,EAAAA,EAAAA,gBAAeF,EAAM,QAClC,OAAQvB,EAAAA,cAAoBoB,EAAAA,EAAY,CAAEM,IAAK,QAAFC,OAAUH,IACnDZ,IAAqC,OAAvBE,QAAsD,IAAvBA,OAAgC,EAASA,EAAmBc,SAASL,IAAUvB,EAAAA,cAAoBG,EAAAA,EAAY,CAAE0B,QAASA,IAAMnB,EAAgBa,GAAM,IAC/LvB,EAAAA,cAAoBI,EAAAA,QAAW,CAAEC,MAAO,WAAgBL,EAAAA,cAAoBD,EAAgB,MAChGyB,EAAK,IAEZX,EAAYiB,OAA2E,KAAjE9B,EAAAA,cAAoBoB,EAAAA,EAAY,KAAM,0BACrEpB,EAAAA,cAAoB+B,EAAAA,EAAe,KAC/B/B,EAAAA,cAAoBgC,EAAAA,EAAQ,CAAEH,QAASA,IAAMpB,IAAewB,QAAS,YAAa5B,MAAO,WAAa,UAClH,G","sources":["../node_modules/@jbrowse/plugin-data-management/esm/HierarchicalTrackSelectorWidget/components/dialogs/ManageConnectionsDialog.js"],"sourcesContent":["import React from 'react';\nimport { Button, DialogContent, DialogActions, IconButton, Tooltip, Typography, } from '@mui/material';\nimport { Dialog } from '@jbrowse/core/ui';\nimport { makeStyles } from 'tss-react/mui';\nimport { observer } from 'mobx-react';\nimport { readConfObject, } from '@jbrowse/core/configuration';\n// icons\nimport CloseIcon from '@mui/icons-material/Close';\nconst useStyles = makeStyles()(theme => ({\n    connectionContainer: {\n        margin: theme.spacing(4),\n        width: 500,\n    },\n}));\nfunction DisabledButton() {\n    return (React.createElement(Tooltip, { title: \"Unable to delete connection in config file as non-admin user\" },\n        React.createElement(IconButton, null,\n            React.createElement(CloseIcon, { color: \"disabled\" }))));\n}\nconst ManageConnectionsDialog = observer(function ({ session, handleClose, breakConnection, }) {\n    const { classes } = useStyles();\n    const { adminMode, connections, sessionConnections } = session;\n    return (React.createElement(Dialog, { open: true, onClose: handleClose, maxWidth: \"lg\", title: \"Delete connections\" },\n        React.createElement(DialogContent, null,\n            React.createElement(Typography, null, \"Click the X icon to delete the connection from your config completely\"),\n            React.createElement(\"div\", { className: classes.connectionContainer },\n                connections.map(conf => {\n                    const name = readConfObject(conf, 'name');\n                    return (React.createElement(Typography, { key: `conn-${name}` },\n                        adminMode || (sessionConnections === null || sessionConnections === void 0 ? void 0 : sessionConnections.includes(conf)) ? (React.createElement(IconButton, { onClick: () => breakConnection(conf, true) },\n                            React.createElement(CloseIcon, { color: \"error\" }))) : (React.createElement(DisabledButton, null)),\n                        name));\n                }),\n                !connections.length ? (React.createElement(Typography, null, \"No connections found\")) : null)),\n        React.createElement(DialogActions, null,\n            React.createElement(Button, { onClick: () => handleClose(), variant: \"contained\", color: \"primary\" }, \"Close\"))));\n});\nexport default ManageConnectionsDialog;\n"],"names":["useStyles","makeStyles","theme","connectionContainer","margin","spacing","width","DisabledButton","React","Tooltip","title","IconButton","CloseIcon","color","observer","_ref","session","handleClose","breakConnection","classes","adminMode","connections","sessionConnections","Dialog","open","onClose","maxWidth","DialogContent","Typography","className","map","conf","name","readConfObject","key","concat","includes","onClick","length","DialogActions","Button","variant"],"sourceRoot":""}