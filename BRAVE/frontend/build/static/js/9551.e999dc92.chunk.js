"use strict";(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([[9551],{92049:(e,t,a)=>{a.d(t,{tP:()=>c,BL:()=>o});var n=a(54856),s=a(43050),i=a(91624).hp;function r(e,t){return e.offset+e.lineBytes*Math.floor(t/e.lineLength)+t%e.lineLength}class o{constructor(e){let{fasta:t,fai:a,path:s,faiPath:i}=e;if(t)this.fasta=t;else{if(!s)throw new Error("Need to pass filehandle for fasta or path to localfile");this.fasta=new n.LocalFile(s)}if(a)this.fai=a;else if(i)this.fai=new n.LocalFile(i);else{if(!s)throw new Error("Need to pass filehandle for  or path to localfile");this.fai=new n.LocalFile("".concat(s,".fai"))}}async _getIndexes(e){return this.indexes||(this.indexes=async function(e,t){const a=await e.readFile(t);if(!a||!a.length)throw new Error("No data read from FASTA index (FAI) file");let n,s=0;const i=a.toString("utf8").split(/\r?\n/).filter((e=>/\S/.test(e))).map((e=>e.split("\t"))).filter((e=>""!==e[0])).map((e=>(n&&n.name===e[0]||(n={name:e[0],id:s},s+=1),{id:n.id,name:e[0],length:+e[1],start:0,end:+e[1],offset:+e[2],lineLength:+e[3],lineBytes:+e[4]})));return{name:Object.fromEntries(i.map((e=>[e.name,e]))),id:Object.fromEntries(i.map((e=>[e.id,e])))}}(this.fai,e)),this.indexes}async getSequenceNames(e){return Object.keys((await this._getIndexes(e)).name)}async getSequenceSizes(e){const t={},a=await this._getIndexes(e),n=Object.values(a.id);for(let s=0;s<n.length;s+=1)t[n[s].name]=n[s].length;return t}async getSequenceSize(e,t){var a;return null===(a=(await this._getIndexes(t)).name[e])||void 0===a?void 0:a.length}async hasReferenceSequence(e,t){return!!(await this._getIndexes(t)).name[e]}async getResiduesById(e,t,a,n){const s=(await this._getIndexes(n)).id[e];if(s)return this._fetchFromIndexEntry(s,t,a,n)}async getResiduesByName(e,t,a,n){const s=(await this._getIndexes(n)).name[e];if(s)return this._fetchFromIndexEntry(s,t,a,n)}async getSequence(e,t,a,n){return this.getResiduesByName(e,t,a,n)}async _fetchFromIndexEntry(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,a=arguments.length>3?arguments[3]:void 0,n=arguments.length>2?arguments[2]:void 0;if(t<0)throw new TypeError("regionStart cannot be less than 0");if((void 0===n||n>e.length)&&(n=e.length),t>=n)return"";const s=r(e,t),o=r(e,n)-s,c=i.allocUnsafe(o);return await this.fasta.read(c,0,o,s,a),c.toString("utf8").replace(/\s+/g,"")}}class c extends o{constructor(e){let{fasta:t,path:a,fai:n,faiPath:i,gzi:r,gziPath:o}=e;super({fasta:t,path:a,fai:n,faiPath:i}),t&&r?this.fasta=new s.BgzfFilehandle({filehandle:t,gziFilehandle:r}):a&&o&&(this.fasta=new s.BgzfFilehandle({path:a,gziPath:o}))}}},79551:(e,t,a)=>{a.r(t),a.d(t,{default:()=>l});var n=a(92049),s=a(48591),i=a(50472),r=a(10718),o=a(91775),c=a(91205),f=a.n(c),h=a(46599);const l=class extends s.BaseSequenceAdapter{constructor(){super(...arguments),this.seqCache=new(f())({cache:new h.default({maxSize:200}),fill:async(e,t)=>{const{refName:a,start:n,end:s,fasta:i}=e;return i.getSequence(a,n,s,{...e,signal:t})}})}async getRefNames(e){const{fasta:t}=await this.setup();return t.getSequenceNames(e)}async getRegions(e){const{fasta:t}=await this.setup(),a=await t.getSequenceSizes(e);return Object.keys(a).map((e=>({refName:e,start:0,end:a[e]})))}async setupPre(){const e=this.getConf("fastaLocation"),t=this.getConf("faiLocation");return{fasta:new n.BL({fasta:(0,i.openLocation)(e,this.pluginManager),fai:(0,i.openLocation)(t,this.pluginManager)})}}async getHeader(){const e=this.getConf("metadataLocation");return""===e.uri||"/path/to/fa.metadata.yaml"===e.uri?null:(0,i.openLocation)(e,this.pluginManager).readFile("utf8")}async setup(){return this.setupP||(this.setupP=this.setupPre().catch((e=>{throw this.setupP=void 0,e}))),this.setupP}getFeatures(e,t){const{refName:a,start:n,end:s}=e;return(0,r.ObservableCreate)((async e=>{const{fasta:i}=await this.setup(),r=await i.getSequenceSize(a,t),c=void 0!==r?Math.min(r,s):s,f=[],h=128e3,l=n-n%h,u=s+(h-s%h);for(let n=l;n<u;n+=h){const e={refName:a,start:n,end:n+h};f.push(this.seqCache.get(JSON.stringify(e),{...e,fasta:i},null===t||void 0===t?void 0:t.signal))}const d=(await Promise.all(f)).join("").slice(n-l).slice(0,s-n);d&&e.next(new o.SimpleFeature({id:"".concat(a," ").concat(n,"-").concat(c),data:{refName:a,start:n,end:c,seq:d}})),e.complete()}))}freeResources(){}}}}]);
//# sourceMappingURL=9551.e999dc92.chunk.js.map