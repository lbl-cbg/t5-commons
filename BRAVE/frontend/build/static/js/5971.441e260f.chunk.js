"use strict";(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([[5971],{65971:(e,t,n)=>{n.r(t),n.d(t,{default:()=>d});var s=n(29432),a=n(48591),i=n(50472),o=n(10718),r=n(98781),l=n(98518);class c extends a.BaseFeatureDataAdapter{constructor(e,t,n){super(e,t,n);const a=this.getConf("bedGzLocation"),o=this.getConf(["index","indexType"]),l=this.getConf(["index","location"]),c=this.getConf("autoSql"),d=this.pluginManager;this.bed=new r.wD({filehandle:(0,i.openLocation)(a,d),csiFilehandle:"CSI"===o?(0,i.openLocation)(l,d):void 0,tbiFilehandle:"CSI"!==o?(0,i.openLocation)(l,d):void 0,chunkCacheSize:52428800}),this.columnNames=this.getConf("columnNames"),this.scoreColumn=this.getConf("scoreColumn"),this.parser=new s.A({autoSql:c})}async getRefNames(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return this.bed.getReferenceSequenceNames(e)}async getHeader(){return this.bed.getHeader()}async getNames(){if(this.columnNames.length)return this.columnNames;const e=(await this.bed.getHeader()).split(/\n|\r\n|\r/).filter((e=>!!e)).at(-1);return(null===e||void 0===e?void 0:e.includes("\t"))?e.slice(1).split("\t").map((e=>e.trim())):void 0}getFeatures(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return(0,o.ObservableCreate)((async n=>{const s=await this.bed.getMetadata(),{columnNumbers:a}=s,i=a.ref-1,o=a.start-1,r=a.end-1,c=await this.getNames();await this.bed.getLines(e.refName,e.start,e.end,{lineCallback:(e,t)=>{n.next((0,l.d)(e,i,o,r,this.scoreColumn,this.parser,"".concat(this.id,"-").concat(t),c))},signal:t.signal}),n.complete()}),t.signal)}freeResources(){}}c.capabilities=["getFeatures","getRefNames"];const d=c}}]);
//# sourceMappingURL=5971.441e260f.chunk.js.map