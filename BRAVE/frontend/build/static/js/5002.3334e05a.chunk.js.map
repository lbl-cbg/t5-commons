{"version":3,"file":"static/js/5002.3334e05a.chunk.js","mappings":"oPAIA,MAmBA,GAnB+BA,EAAAA,EAAAA,WAAS,SAAUC,GAC9C,MAAM,MAAEC,EAAK,YAAEC,GAAgBF,GACzB,qBAAEG,EAAsBC,UAAWC,GAAqBJ,GACvDK,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,GAADC,OAAIN,KACjCC,EAAWM,IAAgBF,EAAAA,EAAAA,UAASH,GACrCM,EAAgB,KAAXL,IAAkBM,OAAOC,OAAOP,GAC3C,OAAQQ,EAAAA,cAAoBC,EAAAA,OAAQ,CAAEC,MAAM,EAAMC,QAASf,EAAagB,MAAO,sBAC3EJ,EAAAA,cAAoBK,EAAAA,EAAe,KAC/BL,EAAAA,cAAoBM,EAAAA,EAAY,KAAM,iKACtCN,EAAAA,cAAoBO,EAAAA,EAAW,CAAEC,MAAOhB,EAAQiB,WAAY,iBAAkBC,SAAUC,GAASlB,EAAUkB,EAAMC,OAAOJ,SACxHR,EAAAA,cAAoBa,EAAAA,EAAkB,CAAEC,QAASd,EAAAA,cAAoBe,EAAAA,EAAU,CAAEC,UAAW1B,EAAWoB,SAAUA,IAAMd,GAAaqB,IAAQA,MAASC,MAAO,oDAC5JlB,EAAAA,cAAoBmB,EAAAA,EAAe,KAC/BnB,EAAAA,cAAoBoB,EAAAA,EAAQ,CAAEC,QAAS,YAAaC,MAAO,UAAWC,KAAM,SAAUC,WAAW,EAAMC,UAAW5B,EAAI6B,QAASA,KACvHvC,EAAMwC,iBAA4B,KAAXnC,GAAkBM,OAAOC,OAAOP,QAAoBoC,GAATpC,GAClEL,EAAMS,aAAaN,GACnBF,GAAa,GACZ,UACTY,EAAAA,cAAoBoB,EAAAA,EAAQ,CAAEC,QAAS,YAAaC,MAAO,YAAaI,QAASA,IAAMtC,KAAiB,YACxH,G","sources":["../node_modules/@jbrowse/plugin-alignments/esm/LinearPileupDisplay/components/SetFeatureHeight.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { observer } from 'mobx-react';\nimport { Button, Checkbox, DialogActions, DialogContent, FormControlLabel, TextField, Typography, } from '@mui/material';\nimport { Dialog } from '@jbrowse/core/ui';\nconst SetFeatureHeightDialog = observer(function (props) {\n    const { model, handleClose } = props;\n    const { featureHeightSetting, noSpacing: noSpacingSetting } = model;\n    const [height, setHeight] = useState(`${featureHeightSetting}`);\n    const [noSpacing, setNoSpacing] = useState(noSpacingSetting);\n    const ok = height !== '' && !Number.isNaN(+height);\n    return (React.createElement(Dialog, { open: true, onClose: handleClose, title: \"Set feature height\" },\n        React.createElement(DialogContent, null,\n            React.createElement(Typography, null, \"Adjust the feature height and whether there is any spacing between features. Setting feature height to 1 and removing spacing makes the display very compact.\"),\n            React.createElement(TextField, { value: height, helperText: \"Feature height\", onChange: event => setHeight(event.target.value) }),\n            React.createElement(FormControlLabel, { control: React.createElement(Checkbox, { checked: !!noSpacing, onChange: () => setNoSpacing(val => !val) }), label: \"Remove spacing between features in y-direction?\" }),\n            React.createElement(DialogActions, null,\n                React.createElement(Button, { variant: \"contained\", color: \"primary\", type: \"submit\", autoFocus: true, disabled: !ok, onClick: () => {\n                        model.setFeatureHeight(height !== '' && !Number.isNaN(+height) ? +height : undefined);\n                        model.setNoSpacing(noSpacing);\n                        handleClose();\n                    } }, \"Submit\"),\n                React.createElement(Button, { variant: \"contained\", color: \"secondary\", onClick: () => handleClose() }, \"Cancel\")))));\n});\nexport default SetFeatureHeightDialog;\n"],"names":["observer","props","model","handleClose","featureHeightSetting","noSpacing","noSpacingSetting","height","setHeight","useState","concat","setNoSpacing","ok","Number","isNaN","React","Dialog","open","onClose","title","DialogContent","Typography","TextField","value","helperText","onChange","event","target","FormControlLabel","control","Checkbox","checked","val","label","DialogActions","Button","variant","color","type","autoFocus","disabled","onClick","setFeatureHeight","undefined"],"sourceRoot":""}