{"version":3,"file":"static/js/2513.6ef6b44d.chunk.js","mappings":"mLAIA,MAMA,GAN0CA,EAAAA,EAAAA,WAAUC,IAChD,MAAM,MAAEC,GAAUD,EAClB,OAAQE,EAAAA,cAAoB,MAAO,KAC/BA,EAAAA,cAAoBC,EAAAA,GAA4B,IAAKH,IACrDE,EAAAA,cAAoBE,EAAAA,EAAY,CAAEH,MAAOA,IAAS,G,mFCP1D,MAIA,EAJgBD,IACZ,MAAM,MAAEK,EAAQ,wBAA2BL,EAC3C,OAAOE,EAAAA,cAAoB,OAAQ,IAAKF,EAAOM,KAAMD,GAAQ,ECmBjE,GAnBoBN,EAAAA,EAAAA,WAAS,SAAAQ,GAAwD,IAA9C,MAAEN,EAAK,UAAEO,EAAS,WAAEC,EAAU,UAAEC,GAAYH,EAC/E,MAAM,kBAAEI,EAAiB,cAAEC,EAAa,wBAAEC,EAAuB,6BAAEC,EAA4B,iBAAEC,EAAgB,QAAEC,GAAaf,EAC1HgB,EAAcC,KAAKC,IAAIX,EAAW,IAClCY,EAAkBZ,EAAY,GAC9Ba,EAAgBN,EAAmB,GAAK,EACxCO,EAAcb,EAAaY,EAAgB,EAE3CE,GADYb,EAAY,GAAK,KACDE,IAAkBE,EAA+B,GAAK,GACxF,OAAOE,EAAWd,EAAAA,cAAoBA,EAAAA,SAAgB,KAElDW,EAA2BX,EAAAA,cAAoBsB,EAAQ,CAAEC,EAAG,EAAGC,EAAGH,EAAaI,MAAOL,EAAaM,QAASZ,EAAQa,OAAS,KAAQrB,IAAgB,KACrJQ,EAAQc,KAAI,CAACC,EAAQC,KACjB,MAAMC,EAAYf,KAAKC,IAAI,GAAIX,GAC/B,OAAQN,EAAAA,cAAoBA,EAAAA,SAAgB,CAAEgC,IAAK,GAAFC,OAAKJ,EAAOK,KAAI,KAAAD,OAAIH,IACjEnB,EAA0B,KAAQX,EAAAA,cAAoBsB,EAAQ,CAAEC,EAAGO,EAAMxB,EAAY,EAAGkB,EAAGH,EAAaI,MAAOL,EAAaM,OAAQK,IACpIF,EAAO1B,MAASH,EAAAA,cAAoBsB,EAAQ,CAAEC,EAAGO,EAAMxB,EAAY,EAAGkB,EAAGH,EAAaI,MAAON,EAAeO,OAAQjB,EAAoBH,EAAYyB,EAAW5B,MAAO0B,EAAO1B,QAAY,KACzLe,EAAmBlB,EAAAA,cAAoB,OAAQ,CAAEuB,EAAGO,EAAMxB,EAAY,GAAIkB,EAAGH,EAAcF,EAAgB,EAAGgB,SAAUpB,GAAec,EAAOK,MAAS,KAAK,KAC7J,IACf,ICLA,GAZoBrC,EAAAA,EAAAA,WAASQ,IAAe,IAAd,MAAEN,GAAOM,EACnC,MAAM,MAAE+B,EAAK,UAAEC,GAActC,GACvB,MAAE0B,IAAUa,EAAAA,EAAAA,mBAAkBvC,GAC9BwC,EAAS,IAAAN,OAAc,OAAVG,QAA4B,IAAVA,OAAmB,EAASA,EAAMI,OAAO,GAAE,KAAAP,OAAc,OAAVG,QAA4B,IAAVA,OAAmB,EAASA,EAAMI,OAAO,GAAE,MAC9H,QAAdH,EAAsB,eAAiB,IACtCI,GAAMC,EAAAA,EAAAA,aAAYH,EAAQ,IAE1BI,EAAOlB,EAAQgB,EADL,GAEhB,OAAQzC,EAAAA,cAAoBA,EAAAA,SAAgB,KACxCA,EAAAA,cAAoBsB,EAAQ,CAAEC,EAAG,EAAGC,EAAGmB,EAAMlB,MAAOgB,EAAM,EAAGf,OAAQ,KACrE1B,EAAAA,cAAoB,OAAQ,CAAEuB,EAAG,GAAIC,EAAGmB,GAAQJ,GAAQ,I,eCPhE,MAAMK,GAAU/C,EAAAA,EAAAA,WAAS,SAAAQ,GAA2C,IAAjC,SAAEwC,EAAQ,MAAE9C,EAAK,UAAES,GAAYH,EAC9D,GAAIG,EACA,OAAOR,EAAAA,cAAoBA,EAAAA,SAAgB,KAAM6C,GAEhD,CACD,MAAM,OAAEnB,GAAW3B,EACnB,OAAQC,EAAAA,cAAoB,MAAO,CAAE8C,MAAO,CACpCC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,cAAe,OACfxB,SACAD,OAAOa,EAAAA,EAAAA,mBAAkBvC,GAAO0B,QAC/BoB,EACb,CACJ,IAwBA,GAvB0BhD,EAAAA,EAAAA,WAAS,SAAUC,GACzC,MAAM,MAAEC,EAAK,YAAEoD,EAAW,UAAE3C,GAAcV,GACpC,MAAEsD,EAAK,kBAAE3C,EAAiB,wBAAEE,EAAuB,6BAAEC,EAA4B,UAAEN,EAAS,QAAEQ,EAAO,MAAEsB,GAAWrC,EAClHgB,EAAcC,KAAKC,IAAIX,EAAW,IAClCY,EAAkBZ,EAAY,IAC5BmB,MAAO4B,IAAcf,EAAAA,EAAAA,mBAAkBvC,GAG/C,KADcqD,GAAStC,GAEnB,OAAO,KAEX,MAAMP,EAAaS,KAAKsC,OAAQxC,EAC3Bc,KAAI2B,IAAKb,EAAAA,EAAAA,aAAYa,EAAErB,KAAMnB,KAC7Ba,KAAIH,GAAUP,EAAkBO,EAPpB,MAO0C,CAAC,IAC5D,OAAQzB,EAAAA,cAAoB4C,EAAS,IAAK9C,GAASa,EAA2BX,EAAAA,cAAoBA,EAAAA,SAAgB,KAC9GA,EAAAA,cAAoB,IAAK,CAAEwD,UAAW,aAAFvB,OAAgBzB,EAA+B,GAAnBiD,EAAAA,EAAAA,IAAU1D,GAAU,QAChFC,EAAAA,cAAoB0D,EAAAA,EAAW,CAAE3D,MAAOA,EAAOoD,YAAaA,KAChEnD,EAAAA,cAAoB,IAAK,CAAEwD,UAAW,aAAFvB,OAAeoB,EAAY9C,EAAa,IAAG,QAC3EP,EAAAA,cAAoB2D,EAAa,CAAEnD,UAAWA,EAAWT,MAAOA,EAAOO,UAAW,GAAIC,WAAYA,MAAoBP,EAAAA,cAAoBA,EAAAA,SAAgB,KAC9JA,EAAAA,cAAoB2D,EAAa,CAAEnD,UAAWA,EAAWT,MAAOA,EAAOO,UAAWP,EAAMO,UAAWC,WAAYA,IAC/GK,GAAgCH,EAAqBT,EAAAA,cAAoB4D,EAAa,IAAK9D,IAAagB,EAAQc,KAAI,CAACiC,EAAS/B,IAAS9B,EAAAA,cAAoB,IAAK,CAAEwD,UAAW,eAAFvB,OAAiB3B,EAAYwB,EAAG,KAAKE,IAAK,GAAFC,OAAK6B,KAAKC,UAAU3B,GAAM,KAAAH,OAAIH,IAC7O9B,EAAAA,cAAoB0D,EAAAA,EAAW,CAAE3D,MAAOA,EAAOoD,YAAaA,QACxE,G,gFC3CO,SAASa,EAAOC,EAAKC,GAAa,IAARC,EAAEC,UAAAzC,OAAA,QAAA0C,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAClC,MAAME,EAAOJ,EACRtC,KAAI2C,GAAKN,EAAIO,WAAUC,GAAKA,EAAEvC,OAASqC,MACvCG,MAAK,CAACC,EAAGC,IAAMD,EAAIC,IACxB,IAAIC,EAAU,EACd,IAAK,MAAMC,KAAOR,EAAM,CACpB,MAAMxC,EAAMd,KAAKsC,IAAIuB,EAASC,EAAMX,GAChCrC,GAAO+C,GACPZ,EAAIc,OAAOjD,EAAK,EAAGmC,EAAIc,OAAOD,EAAK,GAAG,IAE1CD,GAAoB,CACxB,CACA,OAAOZ,CACX,CACO,SAASe,EAASf,EAAKC,GAAa,IAARC,EAAEC,UAAAzC,OAAA,QAAA0C,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACpC,MAAME,EAAOJ,EACRtC,KAAI2C,GAAKN,EAAIO,WAAUC,GAAKA,EAAEvC,OAASqC,MACvCG,MAAK,CAACC,EAAGC,IAAMA,EAAID,IACxB,IAAIE,EAAUZ,EAAItC,OAAS,EAC3B,IAAK,MAAMmD,KAAOR,EAAM,CACpB,MAAMxC,EAAMd,KAAKC,IAAI4D,EAASC,EAAMX,GAChCrC,GAAO+C,GACPZ,EAAIc,OAAOjD,EAAK,EAAGmC,EAAIc,OAAOD,EAAK,GAAG,IAE1CD,GAAoB,CACxB,CACA,OAAOZ,CACX,CACA,MAAMgB,EAAqB,KACpB,SAASxB,EAAU1D,GACtB,MAAM,cAAEmF,GAAkBnF,GACpB,YAAEoF,IAAgB7C,EAAAA,EAAAA,mBAAkBvC,GACpCqF,GAAQC,EAAAA,EAAAA,oBAAmBtF,GAC3BuF,GAAYC,EAAAA,EAAAA,SAAQH,EAAO,QACjC,MAAuB,gBAAhBD,GAAkCD,EAEnC,IADAxC,EAAAA,EAAAA,aAAY4C,EAAWL,GAAsB,GAEvD,C","sources":["../node_modules/@jbrowse/plugin-wiggle/esm/MultiLinearWiggleDisplay/components/WiggleDisplayComponent.js","../node_modules/@jbrowse/plugin-wiggle/esm/MultiLinearWiggleDisplay/components/RectBg.js","../node_modules/@jbrowse/plugin-wiggle/esm/MultiLinearWiggleDisplay/components/ColorLegend.js","../node_modules/@jbrowse/plugin-wiggle/esm/MultiLinearWiggleDisplay/components/ScoreLegend.js","../node_modules/@jbrowse/plugin-wiggle/esm/MultiLinearWiggleDisplay/components/YScaleBars.js","../node_modules/@jbrowse/plugin-wiggle/esm/MultiLinearWiggleDisplay/components/util.js"],"sourcesContent":["import React from 'react';\nimport { BaseLinearDisplayComponent } from '@jbrowse/plugin-linear-genome-view';\nimport { observer } from 'mobx-react';\nimport YScaleBars from './YScaleBars';\nconst MultiLinearWiggleDisplayComponent = observer((props) => {\n    const { model } = props;\n    return (React.createElement(\"div\", null,\n        React.createElement(BaseLinearDisplayComponent, { ...props }),\n        React.createElement(YScaleBars, { model: model })));\n});\nexport default MultiLinearWiggleDisplayComponent;\n","import React from 'react';\nconst RectBg = (props) => {\n    const { color = 'rgb(255,255,255,0.8)' } = props;\n    return React.createElement(\"rect\", { ...props, fill: color });\n};\nexport default RectBg;\n","import React from 'react';\nimport { observer } from 'mobx-react';\nimport RectBg from './RectBg';\nconst ColorLegend = observer(function ({ model, rowHeight, labelWidth, exportSVG, }) {\n    const { needsCustomLegend, needsScalebar, needsFullHeightScalebar, rowHeightTooSmallForScalebar, renderColorBoxes, sources, } = model;\n    const svgFontSize = Math.min(rowHeight, 12);\n    const canDisplayLabel = rowHeight > 11;\n    const colorBoxWidth = renderColorBoxes ? 15 : 0;\n    const legendWidth = labelWidth + colorBoxWidth + 5;\n    const svgOffset = exportSVG ? 10 : 0;\n    const extraOffset = svgOffset || (needsScalebar && !rowHeightTooSmallForScalebar ? 50 : 0);\n    return sources ? (React.createElement(React.Fragment, null,\n        /* 0.25 for hanging letters like g */\n        needsFullHeightScalebar ? (React.createElement(RectBg, { y: 0, x: extraOffset, width: legendWidth, height: (sources.length + 0.25) * rowHeight })) : null,\n        sources.map((source, idx) => {\n            const boxHeight = Math.min(20, rowHeight);\n            return (React.createElement(React.Fragment, { key: `${source.name}-${idx}` },\n                needsFullHeightScalebar ? null : (React.createElement(RectBg, { y: idx * rowHeight + 1, x: extraOffset, width: legendWidth, height: boxHeight })),\n                source.color ? (React.createElement(RectBg, { y: idx * rowHeight + 1, x: extraOffset, width: colorBoxWidth, height: needsCustomLegend ? rowHeight : boxHeight, color: source.color })) : null,\n                canDisplayLabel ? (React.createElement(\"text\", { y: idx * rowHeight + 13, x: extraOffset + colorBoxWidth + 2, fontSize: svgFontSize }, source.name)) : null));\n        }))) : null;\n});\nexport default ColorLegend;\n","import React from 'react';\nimport { measureText, getContainingView } from '@jbrowse/core/util';\nimport { observer } from 'mobx-react';\nimport RectBg from './RectBg';\nconst ScoreLegend = observer(({ model }) => {\n    const { ticks, scaleType } = model;\n    const { width } = getContainingView(model);\n    const legend = `[${ticks === null || ticks === void 0 ? void 0 : ticks.values[0]}-${ticks === null || ticks === void 0 ? void 0 : ticks.values[1]}]` +\n        (scaleType === 'log' ? ' (log scale)' : '');\n    const len = measureText(legend, 14);\n    const padding = 25;\n    const xpos = width - len - padding;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(RectBg, { y: 0, x: xpos, width: len + 6, height: 16 }),\n        React.createElement(\"text\", { y: 13, x: xpos }, legend)));\n});\nexport default ScoreLegend;\n","import React from 'react';\nimport { measureText, getContainingView } from '@jbrowse/core/util';\nimport { observer } from 'mobx-react';\nimport YScaleBar from '../../shared/YScaleBar';\nimport ColorLegend from './ColorLegend';\nimport ScoreLegend from './ScoreLegend';\nimport { getOffset } from './util';\nconst Wrapper = observer(function ({ children, model, exportSVG, }) {\n    if (exportSVG) {\n        return React.createElement(React.Fragment, null, children);\n    }\n    else {\n        const { height } = model;\n        return (React.createElement(\"svg\", { style: {\n                position: 'absolute',\n                top: 0,\n                left: 0,\n                pointerEvents: 'none',\n                height,\n                width: getContainingView(model).width,\n            } }, children));\n    }\n});\nexport const YScaleBars = observer(function (props) {\n    const { model, orientation, exportSVG } = props;\n    const { stats, needsCustomLegend, needsFullHeightScalebar, rowHeightTooSmallForScalebar, rowHeight, sources, ticks, } = model;\n    const svgFontSize = Math.min(rowHeight, 12);\n    const canDisplayLabel = rowHeight > 11;\n    const { width: viewWidth } = getContainingView(model);\n    const minWidth = 20;\n    const ready = stats && sources;\n    if (!ready) {\n        return null;\n    }\n    const labelWidth = Math.max(...(sources\n        .map(s => measureText(s.name, svgFontSize))\n        .map(width => (canDisplayLabel ? width : minWidth)) || [0]));\n    return (React.createElement(Wrapper, { ...props }, needsFullHeightScalebar ? (React.createElement(React.Fragment, null,\n        React.createElement(\"g\", { transform: `translate(${!exportSVG ? getOffset(model) : 0},0)` },\n            React.createElement(YScaleBar, { model: model, orientation: orientation })),\n        React.createElement(\"g\", { transform: `translate(${viewWidth - labelWidth - 100},0)` },\n            React.createElement(ColorLegend, { exportSVG: exportSVG, model: model, rowHeight: 12, labelWidth: labelWidth })))) : (React.createElement(React.Fragment, null,\n        React.createElement(ColorLegend, { exportSVG: exportSVG, model: model, rowHeight: model.rowHeight, labelWidth: labelWidth }),\n        rowHeightTooSmallForScalebar || needsCustomLegend ? (React.createElement(ScoreLegend, { ...props })) : (sources.map((_source, idx) => (React.createElement(\"g\", { transform: `translate(0 ${rowHeight * idx})`, key: `${JSON.stringify(ticks)}-${idx}` },\n            React.createElement(YScaleBar, { model: model, orientation: orientation })))))))));\n});\nexport default YScaleBars;\n","import { getContainingTrack, getContainingView, measureText, } from '@jbrowse/core/util';\nimport { getConf } from '@jbrowse/core/configuration';\nexport function moveUp(arr, sel, by = 1) {\n    const idxs = sel\n        .map(l => arr.findIndex(v => v.name === l))\n        .sort((a, b) => a - b);\n    let lastIdx = 0;\n    for (const old of idxs) {\n        const idx = Math.max(lastIdx, old - by);\n        if (idx >= lastIdx) {\n            arr.splice(idx, 0, arr.splice(old, 1)[0]);\n        }\n        lastIdx = lastIdx + 1;\n    }\n    return arr;\n}\nexport function moveDown(arr, sel, by = 1) {\n    const idxs = sel\n        .map(l => arr.findIndex(v => v.name === l))\n        .sort((a, b) => b - a);\n    let lastIdx = arr.length - 1;\n    for (const old of idxs) {\n        const idx = Math.min(lastIdx, old + by);\n        if (idx <= lastIdx) {\n            arr.splice(idx, 0, arr.splice(old, 1)[0]);\n        }\n        lastIdx = lastIdx - 1;\n    }\n    return arr;\n}\nconst trackLabelFontSize = 12.8;\nexport function getOffset(model) {\n    const { prefersOffset } = model;\n    const { trackLabels } = getContainingView(model);\n    const track = getContainingTrack(model);\n    const trackName = getConf(track, 'name');\n    return trackLabels === 'overlapping' && !prefersOffset\n        ? measureText(trackName, trackLabelFontSize) + 100\n        : 10;\n}\n"],"names":["observer","props","model","React","BaseLinearDisplayComponent","YScaleBars","color","fill","_ref","rowHeight","labelWidth","exportSVG","needsCustomLegend","needsScalebar","needsFullHeightScalebar","rowHeightTooSmallForScalebar","renderColorBoxes","sources","svgFontSize","Math","min","canDisplayLabel","colorBoxWidth","legendWidth","extraOffset","RectBg","y","x","width","height","length","map","source","idx","boxHeight","key","concat","name","fontSize","ticks","scaleType","getContainingView","legend","values","len","measureText","xpos","Wrapper","children","style","position","top","left","pointerEvents","orientation","stats","viewWidth","max","s","transform","getOffset","YScaleBar","ColorLegend","ScoreLegend","_source","JSON","stringify","moveUp","arr","sel","by","arguments","undefined","idxs","l","findIndex","v","sort","a","b","lastIdx","old","splice","moveDown","trackLabelFontSize","prefersOffset","trackLabels","track","getContainingTrack","trackName","getConf"],"sourceRoot":""}