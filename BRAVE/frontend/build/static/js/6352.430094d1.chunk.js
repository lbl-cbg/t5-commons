"use strict";(self.webpackChunkfrontend=self.webpackChunkfrontend||[]).push([[6352],{76352:(e,t,n)=>{n.r(t),n.d(t,{default:()=>d});var a=n(48591),i=n(50472),r=n(10718),c=n(98781),s=n(70059),o=n(44600);const d=class extends a.BaseFeatureDataAdapter{async configurePre(){const e=this.pluginManager,t=this.getConf("vcfGzLocation"),n=this.getConf(["index","location"]),a=this.getConf(["index","indexType"]),r=(0,i.openLocation)(t,e),o="CSI"===a,d=new c.wD({filehandle:r,csiFilehandle:o?(0,i.openLocation)(n,e):void 0,tbiFilehandle:o?void 0:(0,i.openLocation)(n,e),chunkCacheSize:52428800,chunkSizeLimit:1e9}),f=await d.getHeader();return{vcf:d,parser:new s.A({header:f})}}async configure(){return this.configured||(this.configured=this.configurePre().catch((e=>{throw this.configured=void 0,e}))),this.configured}async getRefNames(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const{vcf:t}=await this.configure();return t.getReferenceSequenceNames(e)}async getHeader(){const{vcf:e}=await this.configure();return e.getHeader()}async getMetadata(){const{parser:e}=await this.configure();return e.getMetadata()}getFeatures(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return(0,r.ObservableCreate)((async n=>{const{refName:a,start:i,end:r}=e,{vcf:c,parser:s}=await this.configure();await c.getLines(a,i,r,{lineCallback:(e,t)=>{n.next(new o.A({variant:s.parseLine(e),parser:s,id:"".concat(this.id,"-vcf-").concat(t)}))},...t}),n.complete()}),t.signal)}freeResources(){}}}}]);
//# sourceMappingURL=6352.430094d1.chunk.js.map