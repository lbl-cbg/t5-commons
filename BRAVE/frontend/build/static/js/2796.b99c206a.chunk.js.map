{"version":3,"file":"static/js/2796.b99c206a.chunk.js","mappings":"+NAIA,MAiBA,GAjB8BA,E,SAAAA,WAAS,SAA8BC,GAA+B,IAA9B,UAAEC,EAAY,CAAC,EAAC,QAAEC,GAAUF,EAC9F,MAAM,KAAEG,EAAI,qBAAEC,EAAoB,sBAAEC,GAA0BJ,EAC9D,OAAQK,EAAAA,cAAoBC,EAAAA,OAAQ,CAAEC,MAAM,EAAMC,SAAU,KAAMC,MAAO,qBAAFC,OAAuBR,EAAI,MAC9FG,EAAAA,cAAoBM,EAAAA,EAAe,KAC/BR,EAAwBE,EAAAA,cAAoBA,EAAAA,SAAgB,KACxDA,EAAAA,cAAoBO,EAAAA,EAAmB,KAAM,uCAC7CP,EAAAA,cAAoBQ,EAAAA,EAAM,KAAMC,OAAOC,QAAQZ,GAAsBa,KAAIC,IAAA,IAAEC,EAAKC,GAAMF,EAAA,OAAMZ,EAAAA,cAAoBe,EAAAA,GAAU,CAAEF,IAAKA,GAAO,GAAFR,OAAKS,EAAK,KAAAT,OAAIQ,GAAM,MAAQ,KACtKb,EAAAA,cAAoBO,EAAAA,EAAmB,KAAM,oDACjDP,EAAAA,cAAoBgB,EAAAA,EAAe,KAC/BhB,EAAAA,cAAoBiB,EAAAA,EAAQ,CAAEC,QAASA,IAAMtB,IAAWuB,MAAO,WAAa,UAC5EnB,EAAAA,cAAoBiB,EAAAA,EAAQ,CAAEG,QAAS,YAAaF,QAASvB,EACnD,KAC4B,OAA1BI,QAA4D,IAA1BA,GAA4CA,IAC9EH,GAAS,EAEX,OAAWuB,MAAO,WAAa,OACrD,G","sources":["../node_modules/@jbrowse/plugin-data-management/esm/HierarchicalTrackSelectorWidget/components/dialogs/CloseConnectionDialog.js"],"sourcesContent":["import React from 'react';\nimport { DialogContent, DialogContentText, Button, List, ListItem, DialogActions, } from '@mui/material';\nimport { Dialog } from '@jbrowse/core/ui';\nimport { observer } from 'mobx-react';\nconst CloseConnectionDialog = observer(function CloseConnectionDialog({ modalInfo = {}, onClose, }) {\n    const { name, dereferenceTypeCount, safelyBreakConnection } = modalInfo;\n    return (React.createElement(Dialog, { open: true, maxWidth: \"lg\", title: `Close connection \"${name}\"` },\n        React.createElement(DialogContent, null,\n            dereferenceTypeCount ? (React.createElement(React.Fragment, null,\n                React.createElement(DialogContentText, null, \"Closing this connection will close:\"),\n                React.createElement(List, null, Object.entries(dereferenceTypeCount).map(([key, value]) => (React.createElement(ListItem, { key: key }, `${value} ${key}`)))))) : null,\n            React.createElement(DialogContentText, null, \"Are you sure you want to close this connection?\")),\n        React.createElement(DialogActions, null,\n            React.createElement(Button, { onClick: () => onClose(), color: \"primary\" }, \"Cancel\"),\n            React.createElement(Button, { variant: \"contained\", onClick: modalInfo\n                    ? () => {\n                        safelyBreakConnection === null || safelyBreakConnection === void 0 ? void 0 : safelyBreakConnection();\n                        onClose();\n                    }\n                    : () => { }, color: \"primary\" }, \"OK\"))));\n});\nexport default CloseConnectionDialog;\n"],"names":["observer","_ref","modalInfo","onClose","name","dereferenceTypeCount","safelyBreakConnection","React","Dialog","open","maxWidth","title","concat","DialogContent","DialogContentText","List","Object","entries","map","_ref2","key","value","ListItem","DialogActions","Button","onClick","color","variant"],"sourceRoot":""}