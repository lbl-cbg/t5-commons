{"version":3,"file":"static/js/4861.c016247b.chunk.js","mappings":"iLAMA,MAAMA,GAAYC,E,SAAAA,aAAAA,CAAa,CAC3BC,WAAY,CACRC,SAAU,SACVC,WAAY,IACZC,WAAY,IACZC,cAAe,cAGvB,SAASC,EAAaC,EAAOC,EAAUC,EAAWC,GAE1CH,EAAMI,WAELF,EAAWC,GAAW,CAACA,EAASD,IAErC,MAAMG,EAAUL,EAAMM,OAAOJ,EAAWD,GAClCM,EAAQP,EAAMM,OAAOH,EAASF,GAGpC,MAAO,CACH,OACGI,EACH,IACAJ,EACAA,EACA,IARaO,KAAKC,IAAIN,EAAUD,GAAaF,EAAMU,YAAcF,KAAKG,GAAK,IAAM,IACnE,OAUXJ,GACLK,KAAK,IACX,CACA,MAAMC,GAAkBC,EAAAA,EAAAA,WAAS,SAAAC,GAAqC,IAA3B,MAAEC,EAAK,MAAEhB,EAAK,OAAEiB,GAASF,EAChE,MAAMG,GAAQC,EAAAA,EAAAA,MACNlB,SAAUmB,GAAkBJ,EAC9Bf,EAAWmB,EAAgB,GAC3B,WAAEC,EAAU,aAAEC,GAAiBtB,EAC/BK,GAAUkB,EAAAA,EAAAA,kBAAiBtB,EAAUqB,GACrCf,GAAQgB,EAAAA,EAAAA,kBAAiBtB,EAAUoB,GACnCG,GAAWH,EAAaC,GAAgBrB,EACxCwB,EAAWJ,EAAaC,EAAed,KAAKG,GAAK,IAAM,IAEvDe,GAAiBL,EAAaC,GAAgB,EAC9CK,EAAc,IAAHC,OAAOC,OAAOZ,EAAOa,QAAQC,QAAQC,iBAAgB,KACtE,OAAQC,EAAAA,cAAoBA,EAAAA,SAAgB,KACxCA,EAAAA,cAAoBC,EAAY,CAAEC,KAAMR,EAAaS,KAAMpB,EAAOqB,WAAYb,EAASc,QAASZ,EAAezB,SAAUA,EAAUsC,MAAO,GAAFX,OAAKD,EAAW,iBAAiBa,MAAOtB,EAAMuB,QAAQN,KAAKO,UACnMT,EAAAA,cAAoB,OAAQ,CAAEU,EAAG,CACzB,OACGtC,EACH,IACAJ,EACAA,EACA,IACAwB,EACA,OACGlB,GACLK,KAAK,KAAMgC,OAAQ1B,EAAMuB,QAAQN,KAAKU,UAAWC,YAAa,EAAGC,gBAAiB,MAAOC,KAAM,SAC7G,IACMd,GAAapB,EAAAA,EAAAA,WAAS,SAAAmC,GAAwE,IAA9D,KAAEb,EAAI,KAAED,EAAI,WAAEE,EAAU,QAAEC,EAAO,SAAErC,EAAQ,MAAEsC,EAAK,MAAEC,GAAQS,EAC9F,MAAM,QAAEC,GAAY1D,IACd2D,GAAS5B,EAAAA,EAAAA,kBAAiBtB,EAAW,EAAGqC,GAC9C,IAAKH,EACD,OAAO,KAEX,GAAkB,IAAdA,EAAKJ,OAAeM,EAEpB,OAAQJ,EAAAA,cAAoB,OAAQ,CAAEmB,EAAG,EAAGC,EAAG,EAAGC,UAAWJ,EAAQxD,WAAY6D,WAAY,SAAUC,iBAAkB,WAAYC,UAAW,aAAF7B,OAAeuB,EAAM,aAAAvB,QAAY8B,EAAAA,EAAAA,UAASpB,GAAW,GAAE,KAAKqB,MAAO,CAAEX,KAAMR,IACrNL,EACAF,EAAAA,cAAoB,QAAS,KAAMM,GAASJ,IAEpD,GAAIE,EAAa,EAAG,CAGhB,OADwBqB,EAAAA,EAAAA,UAASpB,EAAUF,EAAKwB,cAAgBpD,KAAKG,GAAK,IACnD,IACXsB,EAAAA,cAAoB,OAAQ,CAAEmB,EAAG,EAAGC,EAAG,EAAGC,UAAWJ,EAAQxD,WAAY6D,WAAY,QAASC,iBAAkB,SAAUC,UAAW,aAAF7B,OAAeuB,EAAM,aAAAvB,QAAY8B,EAAAA,EAAAA,UAASpB,GAAQ,KAAKqB,MAAO,CAAEX,KAAMR,IAC7ML,EACAF,EAAAA,cAAoB,QAAS,KAAMM,GAASJ,IAE5CF,EAAAA,cAAoB,OAAQ,CAAEmB,EAAG,EAAGC,EAAG,EAAGC,UAAWJ,EAAQxD,WAAY6D,WAAY,MAAOC,iBAAkB,SAAUC,UAAW,aAAF7B,OAAeuB,EAAM,aAAAvB,QAAY8B,EAAAA,EAAAA,UAASpB,GAAW,IAAG,KAAKqB,MAAO,CAAEX,KAAMR,IACjNL,EACAF,EAAAA,cAAoB,QAAS,KAAMM,GAASJ,GACpD,CAEA,OAAO,IACX,IACM0B,GAAiB/C,EAAAA,EAAAA,WAAS,SAAAgD,GAAqC,IAA3B,MAAE9C,EAAK,MAAEhB,EAAK,OAAEiB,GAAS6C,EAC/D,MAAM5C,GAAQC,EAAAA,EAAAA,MACR,SAAElB,GAAae,GACf,WAAEK,EAAU,aAAEC,GAAiBtB,EAC/B0B,GAAiBL,EAAaC,GAAgB,EAC9CE,GAAWH,EAAaC,GAAgBrB,EAE9C,IAAIuC,EACJ,MAAMuB,GAFUC,EAAAA,EAAAA,YAAWhD,GAEFiD,gBAAgBC,IAAIjD,EAAOkD,cAIpD,GAHIJ,IACAvB,EAAQuB,EAASK,gBAAgBnD,EAAOoD,UAExC7B,EACA,IACIA,GAAQ8B,EAAAA,EAAAA,iBAAgB9B,EAAOtB,EAAMuB,QAAQ8B,WAAWC,MAC5D,CACA,MAAOC,GACHjC,EAAQtB,EAAMuB,QAAQN,KAAKO,OAC/B,MAGAF,EAAQtB,EAAMuB,QAAQN,KAAKO,QAG/B,OAAQT,EAAAA,cAAoBA,EAAAA,SAAgB,KACxCA,EAAAA,cAAoBC,EAAY,CAAEC,KAAMlB,EAAOoD,QAASjC,KAAMpB,EAAOqB,WAAYb,EAASc,QAASZ,EAAezB,SAAUA,EAAUuC,MAAOA,IAC7IP,EAAAA,cAAoB,OAAQ,CAAEU,EAAG5C,EAAaC,EAAOC,EAAW,EAAGgB,EAAOyD,MAAOzD,EAAO0D,KAAM/B,OAAQJ,EAAOM,YAAa,EAAGE,KAAM,SAC3I,IAOA,GANclC,EAAAA,EAAAA,WAAS,SAAA8D,GAA6B,IAAnB,MAAE5D,EAAK,MAAEhB,GAAQ4E,EAC9C,OAAI5E,EAAMiB,OAAO4D,OACL5C,EAAAA,cAAoBpB,EAAiB,CAAEiE,KAAKC,EAAAA,EAAAA,mBAAkB/E,EAAMiB,OAAOa,QAAQ,IAAKd,MAAOA,EAAOC,OAAQjB,EAAMiB,OAAQjB,MAAOA,IAEvIiC,EAAAA,cAAoB4B,EAAgB,CAAEiB,KAAKC,EAAAA,EAAAA,mBAAkB/E,EAAMiB,QAASA,OAAQjB,EAAMiB,OAAQD,MAAOA,EAAOhB,MAAOA,GACnI,G,8HCvHe,SAASgF,EAAajE,GAA4B,IAA3B,MAAEkE,EAAK,OAAEC,EAAM,MAAEC,GAAQpE,EAC3D,MAAMG,GAAQC,EAAAA,EAAAA,KACd,OAAQc,EAAAA,cAAoB,OAAQ,CAAEgD,MAAOA,EAAgB,EAARE,EAAWD,OAAQA,EAAQlC,MAAMoC,EAAAA,EAAAA,YAAWlE,EAAMuB,QAAQ8B,WAAWc,UAC9H,C,eCEOC,eAAeC,EAAYvE,EAAOwE,GACrC,IAAIC,QACEC,EAAAA,EAAAA,OAAK,IAAM1E,EAAM2E,cACvB,MAAM,UAAEC,EAAY,UAAS,QAAEC,EAAU9E,KAAA,IAAC,SAAE+E,GAAU/E,EAAA,OAAKkB,EAAAA,cAAoBA,EAAAA,SAAgB,KAAM6D,EAAS,IAAKN,EAC7GO,GAAU/B,EAAAA,EAAAA,YAAWhD,GACrBE,EAAqC,QAA5BuE,EAAKM,EAAQC,iBAA8B,IAAPP,OAAgB,EAASA,EAAGQ,KAAKF,GAASH,IAEvF,aAAEM,IAAiBC,EAAAA,EAAAA,SAAQnF,IAC3B,MAAEiE,EAAK,OAAEmB,EAAM,OAAElB,GAAWlE,EAE5BqF,QAAuBC,QAAQC,IAAIH,EAAOI,KAAIlB,UAChD,MAAMmB,EAAUC,EAAMC,SAAS,GAE/B,aADMjB,EAAAA,EAAAA,OAAK,SAAyBkB,IAAlBH,EAAQI,OAAsBJ,EAAQI,QACjD,CAAEH,QAAOI,aAAcL,EAAQM,UAAU,IAAKvB,EAAMtE,UAAU,MAEnE,aAAE8F,EAAY,cAAEpD,EAAa,SAAEqD,GAAajG,EAC5CkG,GAAMxD,EAAAA,EAAAA,UAASE,GAErB,OAAOuD,EAAAA,EAAAA,sBAAqBlF,EAAAA,cAAoBmF,EAAAA,EAAe,CAAElG,OAAOmG,EAAAA,EAAAA,oBAAmBnG,IACvFe,EAAAA,cAAoB4D,EAAS,KACzB5D,EAAAA,cAAoB,MAAO,CAAEgD,MAAOA,EAAOC,OAAQA,EAAQoC,MAAO,6BAA8BC,WAAY,+BAAgCC,QAAS,CAAC,EAAG,EAAGvC,EAAQE,IAAWD,GAAQuC,YACnLxF,EAAAA,cAAoB+C,EAAe,CAAEC,MAAOA,EAAOC,OAAQA,EAAQC,MAZjE,KAaFlD,EAAAA,cAAoB,IAAK,CAAEwB,UAAW,aAAF7B,OAAeqF,EAAQ,aAAArF,OAAYsF,EAAG,MACtEF,EAAaR,KAAI,CAACxG,EAAO0H,IAAOzF,EAAAA,cAAoB0F,EAAAA,EAAO,CAAE7C,IAAK4C,EAAG1G,MAAOA,EAAOhB,MAAOA,MAC1FqG,EAAeG,KAAI,CAAAvD,EAAayE,KAAC,IAAb,OAAEZ,GAAQ7D,EAAA,OAAShB,EAAAA,cAAoBA,EAAAA,SAAgB,CAAE6C,IAAK4C,GAAKZ,EAAO,QAAQZ,EAC1H,C","sources":["../node_modules/@jbrowse/plugin-circular-view/esm/CircularView/components/Ruler.js","../node_modules/@jbrowse/plugin-circular-view/esm/CircularView/svgcomponents/SVGBackground.js","../node_modules/@jbrowse/plugin-circular-view/esm/CircularView/svgcomponents/SVGCircularView.js"],"sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react';\nimport { getSession, polarToCartesian, radToDeg, assembleLocString, } from '@jbrowse/core/util';\nimport { makeContrasting } from '@jbrowse/core/util/color';\nimport { useTheme } from '@mui/material/styles';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()({\n    rulerLabel: {\n        fontSize: '0.8rem',\n        fontWeight: 500,\n        lineHeight: 1.6,\n        letterSpacing: '0.0075em',\n    },\n});\nfunction sliceArcPath(slice, radiusPx, startBase, endBase) {\n    // A rx ry x-axis-rotation large-arc-flag sweep-flag x y\n    if (slice.flipped) {\n        ;\n        [startBase, endBase] = [endBase, startBase];\n    }\n    const startXY = slice.bpToXY(startBase, radiusPx);\n    const endXY = slice.bpToXY(endBase, radiusPx);\n    const largeArc = Math.abs(endBase - startBase) / slice.bpPerRadian > Math.PI ? '1' : '0';\n    const sweepFlag = '1';\n    return [\n        'M',\n        ...startXY,\n        'A',\n        radiusPx,\n        radiusPx,\n        '0',\n        largeArc,\n        sweepFlag,\n        ...endXY,\n    ].join(' ');\n}\nconst ElisionRulerArc = observer(function ({ model, slice, region, }) {\n    const theme = useTheme();\n    const { radiusPx: modelRadiusPx } = model;\n    const radiusPx = modelRadiusPx + 1;\n    const { endRadians, startRadians } = slice;\n    const startXY = polarToCartesian(radiusPx, startRadians);\n    const endXY = polarToCartesian(radiusPx, endRadians);\n    const widthPx = (endRadians - startRadians) * radiusPx;\n    const largeArc = endRadians - startRadians > Math.PI ? '1' : '0';\n    // TODO: draw the elision\n    const centerRadians = (endRadians + startRadians) / 2;\n    const regionCount = `[${Number(region.regions.length).toLocaleString()}]`;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(RulerLabel, { text: regionCount, view: model, maxWidthPx: widthPx, radians: centerRadians, radiusPx: radiusPx, title: `${regionCount} more regions`, color: theme.palette.text.primary }),\n        React.createElement(\"path\", { d: [\n                'M',\n                ...startXY,\n                'A',\n                radiusPx,\n                radiusPx,\n                '0',\n                largeArc,\n                '1',\n                ...endXY,\n            ].join(' '), stroke: theme.palette.text.secondary, strokeWidth: 2, strokeDasharray: \"2,2\", fill: \"none\" })));\n});\nconst RulerLabel = observer(function ({ view, text, maxWidthPx, radians, radiusPx, title, color, }) {\n    const { classes } = useStyles();\n    const textXY = polarToCartesian(radiusPx + 5, radians);\n    if (!text) {\n        return null;\n    }\n    if (text.length * 6.5 < maxWidthPx) {\n        // text is rotated parallel to the ruler arc\n        return (React.createElement(\"text\", { x: 0, y: 0, className: classes.rulerLabel, textAnchor: \"middle\", dominantBaseline: \"baseline\", transform: `translate(${textXY}) rotate(${radToDeg(radians) + 90})`, style: { fill: color } },\n            text,\n            React.createElement(\"title\", null, title || text)));\n    }\n    if (maxWidthPx > 4) {\n        // text is rotated perpendicular to the ruler arc\n        const overallRotation = radToDeg(radians + view.offsetRadians - Math.PI / 2);\n        if (overallRotation >= 180) {\n            return (React.createElement(\"text\", { x: 0, y: 0, className: classes.rulerLabel, textAnchor: \"start\", dominantBaseline: \"middle\", transform: `translate(${textXY}) rotate(${radToDeg(radians)})`, style: { fill: color } },\n                text,\n                React.createElement(\"title\", null, title || text)));\n        }\n        return (React.createElement(\"text\", { x: 0, y: 0, className: classes.rulerLabel, textAnchor: \"end\", dominantBaseline: \"middle\", transform: `translate(${textXY}) rotate(${radToDeg(radians) + 180})`, style: { fill: color } },\n            text,\n            React.createElement(\"title\", null, title || text)));\n    }\n    // if you get here there is no room for the text at all\n    return null;\n});\nconst RegionRulerArc = observer(function ({ model, slice, region, }) {\n    const theme = useTheme();\n    const { radiusPx } = model;\n    const { endRadians, startRadians } = slice;\n    const centerRadians = (endRadians + startRadians) / 2;\n    const widthPx = (endRadians - startRadians) * radiusPx;\n    const session = getSession(model);\n    let color;\n    const assembly = session.assemblyManager.get(region.assemblyName);\n    if (assembly) {\n        color = assembly.getRefNameColor(region.refName);\n    }\n    if (color) {\n        try {\n            color = makeContrasting(color, theme.palette.background.paper);\n        }\n        catch (error) {\n            color = theme.palette.text.primary;\n        }\n    }\n    else {\n        color = theme.palette.text.primary;\n    }\n    // TODO: slice flipping\n    return (React.createElement(React.Fragment, null,\n        React.createElement(RulerLabel, { text: region.refName, view: model, maxWidthPx: widthPx, radians: centerRadians, radiusPx: radiusPx, color: color }),\n        React.createElement(\"path\", { d: sliceArcPath(slice, radiusPx + 1, region.start, region.end), stroke: color, strokeWidth: 2, fill: \"none\" })));\n});\nconst Ruler = observer(function ({ model, slice, }) {\n    if (slice.region.elided) {\n        return (React.createElement(ElisionRulerArc, { key: assembleLocString(slice.region.regions[0]), model: model, region: slice.region, slice: slice }));\n    }\n    return (React.createElement(RegionRulerArc, { key: assembleLocString(slice.region), region: slice.region, model: model, slice: slice }));\n});\nexport default Ruler;\n","import React from 'react';\nimport { useTheme } from '@mui/material';\nimport { stripAlpha } from '@jbrowse/core/util';\nexport default function SVGBackground({ width, height, shift, }) {\n    const theme = useTheme();\n    return (React.createElement(\"rect\", { width: width + shift * 2, height: height, fill: stripAlpha(theme.palette.background.default) }));\n}\n","import React from 'react';\nimport { ThemeProvider } from '@mui/material';\nimport { when } from 'mobx';\nimport { getSession, radToDeg, renderToStaticMarkup } from '@jbrowse/core/util';\nimport { createJBrowseTheme } from '@jbrowse/core/ui';\nimport { getRoot } from 'mobx-state-tree';\nimport SVGBackground from './SVGBackground';\nimport Ruler from '../components/Ruler';\nexport async function renderToSvg(model, opts) {\n    var _a;\n    await when(() => model.initialized);\n    const { themeName = 'default', Wrapper = ({ children }) => React.createElement(React.Fragment, null, children) } = opts;\n    const session = getSession(model);\n    const theme = (_a = session.allThemes) === null || _a === void 0 ? void 0 : _a.call(session)[themeName];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const { createRootFn } = getRoot(model);\n    const { width, tracks, height } = model;\n    const shift = 50;\n    const displayResults = await Promise.all(tracks.map(async (track) => {\n        const display = track.displays[0];\n        await when(() => (display.ready !== undefined ? display.ready : true));\n        return { track, result: await display.renderSvg({ ...opts, theme }) };\n    }));\n    const { staticSlices, offsetRadians, centerXY } = model;\n    const deg = radToDeg(offsetRadians);\n    // the xlink namespace is used for rendering <image> tag\n    return renderToStaticMarkup(React.createElement(ThemeProvider, { theme: createJBrowseTheme(theme) },\n        React.createElement(Wrapper, null,\n            React.createElement(\"svg\", { width: width, height: height, xmlns: \"http://www.w3.org/2000/svg\", xmlnsXlink: \"http://www.w3.org/1999/xlink\", viewBox: [0, 0, width + shift * 2, height].toString() },\n                React.createElement(SVGBackground, { width: width, height: height, shift: shift }),\n                React.createElement(\"g\", { transform: `translate(${centerXY}) rotate(${deg})` },\n                    staticSlices.map((slice, i) => (React.createElement(Ruler, { key: i, model: model, slice: slice }))),\n                    displayResults.map(({ result }, i) => (React.createElement(React.Fragment, { key: i }, result))))))), createRootFn);\n}\n"],"names":["useStyles","makeStyles","rulerLabel","fontSize","fontWeight","lineHeight","letterSpacing","sliceArcPath","slice","radiusPx","startBase","endBase","flipped","startXY","bpToXY","endXY","Math","abs","bpPerRadian","PI","join","ElisionRulerArc","observer","_ref","model","region","theme","useTheme","modelRadiusPx","endRadians","startRadians","polarToCartesian","widthPx","largeArc","centerRadians","regionCount","concat","Number","regions","length","toLocaleString","React","RulerLabel","text","view","maxWidthPx","radians","title","color","palette","primary","d","stroke","secondary","strokeWidth","strokeDasharray","fill","_ref2","classes","textXY","x","y","className","textAnchor","dominantBaseline","transform","radToDeg","style","offsetRadians","RegionRulerArc","_ref3","assembly","getSession","assemblyManager","get","assemblyName","getRefNameColor","refName","makeContrasting","background","paper","error","start","end","_ref4","elided","key","assembleLocString","SVGBackground","width","height","shift","stripAlpha","default","async","renderToSvg","opts","_a","when","initialized","themeName","Wrapper","children","session","allThemes","call","createRootFn","getRoot","tracks","displayResults","Promise","all","map","display","track","displays","undefined","ready","result","renderSvg","staticSlices","centerXY","deg","renderToStaticMarkup","ThemeProvider","createJBrowseTheme","xmlns","xmlnsXlink","viewBox","toString","i","Ruler"],"sourceRoot":""}